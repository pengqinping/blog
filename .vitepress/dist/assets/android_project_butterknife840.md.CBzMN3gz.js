import{_ as s,c as i,o as a,a1 as n}from"./chunks/framework.D1yuQFjT.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"android/project/butterknife840.md","filePath":"android/project/butterknife840.md"}'),e={name:"android/project/butterknife840.md"},t=n(`<h2 id="相关地址" tabindex="-1">相关地址: <a class="header-anchor" href="#相关地址" aria-label="Permalink to &quot;相关地址:&quot;">​</a></h2><ul><li><a href="http://jakewharton.github.io/butterknife/" target="_blank" rel="noreferrer">ButterKnife 官网地址</a></li><li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="noreferrer">ButterKnife Github</a></li><li><a href="http://dev.qq.com/topic/578753c0c9da73584b025875" target="_blank" rel="noreferrer">ButterKnife 编译时注解,解释比较详细的一个博客</a></li></ul><h2 id="使用简介" tabindex="-1">使用简介: <a class="header-anchor" href="#使用简介" aria-label="Permalink to &quot;使用简介:&quot;">​</a></h2><blockquote><p>使用butterKnife之后你会感觉很舒服,结合 <strong>Android-studio</strong> 的插件 <strong>Android Butterknife Zelezny</strong> 会更好</p></blockquote><ol><li>不用再输入 <code>findViewById(ResId)</code> <code>getResource(R.[string][color].resId)</code>等代码 ,这个使用的最多</li><li>简化事件响应流程</li></ol><h2 id="使用流程" tabindex="-1">使用流程 <a class="header-anchor" href="#使用流程" aria-label="Permalink to &quot;使用流程&quot;">​</a></h2><blockquote><p>这个流程对应的是 <strong>com.jakewharton:butterknife:8.4.0</strong> 的版本 ,这个库期间更新过好几次配置,我直接描述最新配置,这里一定要注意版本对应,否则会编译报错</p></blockquote><ul><li><p>1.project 中的 <strong>build.gradle</strong> 添加 butterknife-gradle-plugin 的8.4.0的版本,</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">buildscript {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  repositories {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mavenCentral()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    classpath </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;com.jakewharton:butterknife-gradle-plugin:8.4.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>2.在使用的module的<strong>build.grale</strong>中添加plugin 依赖和库依赖</p><p><code>apply plugin: &#39;com.jakewharton.butterknife&#39;</code></p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  compile </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;com.jakewharton:butterknife:8.4.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  annotationProcessor </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;com.jakewharton:butterknife-compiler:8.4.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>3.开始在项目中使用<strong>ButterKnife</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // View UI</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BindView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.login_progress)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ProgressBar mProgressView;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BindView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.login_form)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ScrollView mLoginFormView;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BindView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.email_login_form)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LinearLayout emailLoginForm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BindView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.email) AutoCompleteTextView mEmailView;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BindView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.password) EditText mPasswordView;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BindView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.keystore) EditText mKeystore;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //click event</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OnClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.email_sign_in_button) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onEmailSignInButtonClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            //TODO implement</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OnLongClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.id.email_sign_in_button) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onEmailSignInButtonLongClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            //TODO implement</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            attemptLogin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span></code></pre></div></li></ul><h4 id="常见错误" tabindex="-1">常见错误 <a class="header-anchor" href="#常见错误" aria-label="Permalink to &quot;常见错误&quot;">​</a></h4><ul><li><code>NullPointException</code> 基本就是版本不一致导致的.</li></ul>`,10),l=[t];function p(h,k,r,o,d,E){return a(),i("div",null,l)}const u=s(e,[["render",p]]);export{g as __pageData,u as default};
