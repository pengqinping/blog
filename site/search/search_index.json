{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e2a\u4eba\u7ecf\u5386 \u00b6 1 \u5e74\u56e2\u961f\u7ba1\u7406\u7ecf\u9a8c\uff0c5 \u5e74\u5f00\u53d1\u7ecf\u9a8c\uff0c4\u5e74\u79fb\u52a8\u5f00\u53d1\u7ecf\u9a8c \u719f\u6089 Android \u5e94\u7528\u6846\u67b6\u8bbe\u8ba1\uff0c\u719f\u6089 Android \u9ad8\u6027\u80fd\u7f16\u7a0b\u53ca\u8c03\u4f18 \u719f\u6089\u6d88\u606f\u673a\u5236\uff0c\u5f02\u6b65\u4efb\u52a1, \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u591a\u7ebf\u7a0b, \u7f51\u7edc\u4ea4\u4e92\uff0c\u62a5\u6587\u5206\u6790 \u719f\u6089android studio/eclipse/git/svn/IDEA/ \u7b49\u7b49\u5e38\u7528\u7684\u5f00\u53d1\u5de5\u5177\u7684\u591a\u5e73\u53f0\u4f7f\u7528\u5305\u62ec/windows/mac/ ubuntu \u719f\u6089\u4f7f\u7528\u6027\u80fd\u5206\u6790\u5de5\u5177\u5305\u62ecMAT /leancanary/Android Device Monitor/ \u4e86\u89e3 dlna,jni\u7f16\u7a0b,mk\u7f16\u8bd1\u811a\u672c\uff0cgradle,ant \u7b49\u7b49\u6253\u5305\u5de5\u5177\u3002 \u4f7f\u7528\u8fc7\u7684\u5f00\u6e90\u9879\u76ee\uff1avitamio,imageload,xutils,okhttp,volley,xlistview, ListViewAnimations, NineOldAndroids, Android-ViewPagerIndicator,\u2026\u7b49\u7b49\u5f00\u6e90\u9879\u76ee \u4e86\u89e3 cordova , ionic,\u7b49h5\u6280\u672f \u4e86\u89e3 \u4ee3\u7801\u91cd\u6784\uff0c\u5e38\u7528\u8bbe\u8ba1\u6a21\u5f0f \u719f\u6089\u5404\u79cd\u7b2c\u4e09\u65b9\u5e73\u53f0 \u5b9a\u4f4d\uff08\u767e\u5ea6\uff0c\u9ad8\u5fb7\uff09\uff0c\u652f\u4ed8\u5b9d\uff0c\u7231\u52a0\u5bc6\uff0c\u53cb\u76df\uff0c\u5404\u4e2a\u5206\u4eab\u5e73\u53f0\u3002 \u4e2a\u4eba\u7b80\u4ecb \u00b6 \u8fde\u7eed\u4e24\u5e74\u53c2\u52a0\u5168\u56fd\u84dd\u6865\u676f\u7f16\u7a0b\u7ade\u8d5b\uff0c\u5e76\u4e14\u53d6\u5f97\u76f8\u5e94\u6210\u7ee9 \u7231\u597d\u7f16\u7a0b\uff0c\u7f8e\u5267\uff0c\u559c\u6b22\u7814\u7a76Android\u6e90\u7801\uff0c\u5206\u6790\u8fc7\u7cfb\u7edf\u97f3\u4e50\u64ad\u653e\u5668\uff0c\u5e76\u4e14\u5f00\u6e90\u4e86\u4e00\u4e2a\u81ea\u5df1\u6539\u9020\u7684\u64ad\u653e\u5668\uff0c\u5df2\u5f00\u6e90\uff0c\u5206\u6790\u8fc7Android Logger\u7cfb\u7edf\uff0c\u4f7f\u7528jekyll \u642d\u5efa\u79bb\u7ebf\u9759\u6001\u9875\u9762\uff0c\u901a\u8fc7markdown \u6765\u7f16\u5199\u535a\u5ba2\u3002 \u5e38\u7528\u8f6f\u4ef6(mac/windows) Eclipse,AndroiStudio,SublimeText,\u4e3a\u77e5\u7b14\u8bb0\uff0c\u6709\u9053\u7ffb\u8bd1\uff0cgenymotion,github,ps,\u767e\u5ea6\u7f51\u76d8\uff0calfred2 Contact Me \u00b6 pengqinping@qq.com China of shenzhen A man can be destroyed but not defeated","title":"Home"},{"location":"#_1","text":"1 \u5e74\u56e2\u961f\u7ba1\u7406\u7ecf\u9a8c\uff0c5 \u5e74\u5f00\u53d1\u7ecf\u9a8c\uff0c4\u5e74\u79fb\u52a8\u5f00\u53d1\u7ecf\u9a8c \u719f\u6089 Android \u5e94\u7528\u6846\u67b6\u8bbe\u8ba1\uff0c\u719f\u6089 Android \u9ad8\u6027\u80fd\u7f16\u7a0b\u53ca\u8c03\u4f18 \u719f\u6089\u6d88\u606f\u673a\u5236\uff0c\u5f02\u6b65\u4efb\u52a1, \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u591a\u7ebf\u7a0b, \u7f51\u7edc\u4ea4\u4e92\uff0c\u62a5\u6587\u5206\u6790 \u719f\u6089android studio/eclipse/git/svn/IDEA/ \u7b49\u7b49\u5e38\u7528\u7684\u5f00\u53d1\u5de5\u5177\u7684\u591a\u5e73\u53f0\u4f7f\u7528\u5305\u62ec/windows/mac/ ubuntu \u719f\u6089\u4f7f\u7528\u6027\u80fd\u5206\u6790\u5de5\u5177\u5305\u62ecMAT /leancanary/Android Device Monitor/ \u4e86\u89e3 dlna,jni\u7f16\u7a0b,mk\u7f16\u8bd1\u811a\u672c\uff0cgradle,ant \u7b49\u7b49\u6253\u5305\u5de5\u5177\u3002 \u4f7f\u7528\u8fc7\u7684\u5f00\u6e90\u9879\u76ee\uff1avitamio,imageload,xutils,okhttp,volley,xlistview, ListViewAnimations, NineOldAndroids, Android-ViewPagerIndicator,\u2026\u7b49\u7b49\u5f00\u6e90\u9879\u76ee \u4e86\u89e3 cordova , ionic,\u7b49h5\u6280\u672f \u4e86\u89e3 \u4ee3\u7801\u91cd\u6784\uff0c\u5e38\u7528\u8bbe\u8ba1\u6a21\u5f0f \u719f\u6089\u5404\u79cd\u7b2c\u4e09\u65b9\u5e73\u53f0 \u5b9a\u4f4d\uff08\u767e\u5ea6\uff0c\u9ad8\u5fb7\uff09\uff0c\u652f\u4ed8\u5b9d\uff0c\u7231\u52a0\u5bc6\uff0c\u53cb\u76df\uff0c\u5404\u4e2a\u5206\u4eab\u5e73\u53f0\u3002","title":"\u4e2a\u4eba\u7ecf\u5386"},{"location":"#_2","text":"\u8fde\u7eed\u4e24\u5e74\u53c2\u52a0\u5168\u56fd\u84dd\u6865\u676f\u7f16\u7a0b\u7ade\u8d5b\uff0c\u5e76\u4e14\u53d6\u5f97\u76f8\u5e94\u6210\u7ee9 \u7231\u597d\u7f16\u7a0b\uff0c\u7f8e\u5267\uff0c\u559c\u6b22\u7814\u7a76Android\u6e90\u7801\uff0c\u5206\u6790\u8fc7\u7cfb\u7edf\u97f3\u4e50\u64ad\u653e\u5668\uff0c\u5e76\u4e14\u5f00\u6e90\u4e86\u4e00\u4e2a\u81ea\u5df1\u6539\u9020\u7684\u64ad\u653e\u5668\uff0c\u5df2\u5f00\u6e90\uff0c\u5206\u6790\u8fc7Android Logger\u7cfb\u7edf\uff0c\u4f7f\u7528jekyll \u642d\u5efa\u79bb\u7ebf\u9759\u6001\u9875\u9762\uff0c\u901a\u8fc7markdown \u6765\u7f16\u5199\u535a\u5ba2\u3002 \u5e38\u7528\u8f6f\u4ef6(mac/windows) Eclipse,AndroiStudio,SublimeText,\u4e3a\u77e5\u7b14\u8bb0\uff0c\u6709\u9053\u7ffb\u8bd1\uff0cgenymotion,github,ps,\u767e\u5ea6\u7f51\u76d8\uff0calfred2","title":"\u4e2a\u4eba\u7b80\u4ecb"},{"location":"#contact-me","text":"pengqinping@qq.com China of shenzhen A man can be destroyed but not defeated","title":"Contact Me"},{"location":"00Program/Android/2016-03-08-android-view-download-progress-with-text/","tags":["Android","view"],"text":"\u5de5\u4f5c\u4e2d\u9047\u5230\u4e00\u4e2a\u96be\u9898 \u00b6 \u6709\u4e2a\u8fdb\u5ea6\u6761\u663e\u793a\u6548\u679c\u8981\u6c42\u8fdb\u5ea6\u6309\u7167\u6bd4\u4f8b\u8ba1\u7b97\uff0c\u4f46\u662f\u6587\u5b57\u663e\u793a\u6548\u679c\u548c\u80cc\u666f\u6070\u597d\u76f8\u53cd\uff0c\u9879\u76ee\u4e2d\u7684\u6548\u679c\u662f\u524d\u4eba\u7559\u4e0b\u7684\uff0c\u73b0\u5b9e\u65b9\u5f0f\u975e\u5e38\u968f\u610f\uff0c\u76f4\u63a5\u4f7f\u7528\u5927\u56fe\u5b8c\u6210\uff0c\u5bfc\u81f4\u5c0f\u5c4f\u624b\u673a\u65e0\u6cd5\u663e\u793a\u5b8c\u6574\u56fe\u7247\uff0c\u5927\u5c4f\u624b\u673a\u663e\u793a\u62c9\u4f38\uff0c\u82f1\u6587\u72b6\u6001\u6839\u672c\u6ca1\u6709\uff0c\u540e\u9762\u63a5\u624b\u4fee\u6539\u9002\u914d\u771f\u662f\u5934\u75bc\uff0c\u505a\u6210\u4e86.9 \u6a21\u5f0f\uff0c\u4f46\u662f\u9002\u914d\u4f9d\u7136\u86cb\u75bc\uff0c\u6700\u540e\u6ca1\u6709\u529e\u6cd5\u7ec8\u4e8e\u8fd8\u662f\u51c6\u5907\u91cd\u5199\u81ea\u5b9aView\u6765\u5b8c\u6210\u6548\u679c\u3002 \u6700\u7ec8\u7684\u6548\u679c\u5982\u4e0b\uff1a \u5b9e\u6218\u6f14\u7ec3 \u00b6 \u4e0b\u9762\u7b80\u8981\u63cf\u8ff0\u4e0b\u4ee3\u7801\u7684\u5b9e\u73b0\uff0c\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e00\u4e2a\u4e3a\u6587\u5b57\u663e\u793a\u6548\u679c\u3002\u7b2c\u4e8c\u4e2a\u4e3a\u80cc\u666f\u663e\u793a\u6548\u679c\u3002 \u6587\u5b57\u663e\u793a Progress.java public class Progress extends TextView { public Progress ( Context context ) { super ( context ); init (); } public Progress ( Context context , AttributeSet attrs ) { super ( context , attrs ); init (); } public Progress ( Context context , AttributeSet attrs , int defStyleAttr ) { super ( context , attrs , defStyleAttr ); init (); } private void init (){ // mPaint = new Paint(Paint.ANTI_ALIAS_FLAG); } private LinearGradient mLinearGradient ; private Matrix mGradientMatrix ; private Paint mPaint ; private int mViewWidth = 0 ; private int mTranslate = 0 ; private boolean mAnimating = true ; @Override protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { super . onSizeChanged ( w , h , oldw , oldh ); } @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); /** * progress \u53d6\u503c\u8303\u56f4 (0-100) */ public void setProgress ( int progress ){ mPaint = getPaint (); mPaint . setFlags ( Paint . ANTI_ALIAS_FLAG ); if ( progress <= 0 ){ //\u767d\u5e95\u7ea2\u5b57 so paint not set shader, and setColor = Color.parseColor(\"#f05858\") mPaint . setColor ( Color . parseColor ( \"#f05858\" )); setTextColor ( Color . parseColor ( \"#f05858\" )); setText ( \"\u5f00\u59cb\u4e0b\u8f7d\" ); } else if ( progress >= 100 ){ //\u7ea2\u5e95\u767d\u5b57 mPaint . setColor ( Color . WHITE ); setTextColor ( Color . WHITE ); setText ( \"\u518d\u6b21\u4e0b\u8f7d\" ); } else { final float precent = ( float ) progress / 100 f ; mLinearGradient = new LinearGradient ( 0 , 0 , getWidth (), 0 , new int [] { Color . WHITE , Color . WHITE , Color . parseColor ( \"#f05858\" ), Color . parseColor ( \"#f05858\" )}, new float [] { 0 , precent , precent , 1 }, Shader . TileMode . MIRROR ); mPaint . setShader ( mLinearGradient ); setText ( \"\u7ee7\u7eed\u4e0b\u8f7d\" ); } postInvalidateDelayed ( 50 ); } } \u80cc\u666f\u663e\u793a ProgressBg.java public class ProgressBg extends View { public ProgressBg ( Context context ) { super ( context ); init (); } public ProgressBg ( Context context , AttributeSet attrs ) { super ( context , attrs ); init (); } public ProgressBg ( Context context , AttributeSet attrs , int defStyleAttr ) { super ( context , attrs , defStyleAttr ); init (); } private void init (){ mPaint = new Paint ( Paint . ANTI_ALIAS_FLAG ); } private LinearGradient mLinearGradient ; private Paint mPaint ; @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); setBackgroundColor ( Color . WHITE ); mPaint . setColor ( Color . parseColor ( \"#f05858\" )); canvas . drawRect ( 0f , 0f , getWidth () * precent , getHeight (), mPaint ); invalidate (); } public float precent = 0.0f ; /** * progress \u53d6\u503c\u8303\u56f4 (0-100) */ public void setProgress ( int progress ){ Log . i ( \"precent\" , \"precent:\" + precent ); if ( progress <= 0 ){ //\u767d\u5e95\u7ea2\u5b57 so paint not set shader, and setColor = Color.parseColor(\"#f05858\") precent = 0.0f ; } else if ( progress >= 100 ){ //\u7ea2\u5e95\u767d\u5b57 precent = 1.0f ; } else { precent = ( float ) progress / 100 f ; } invalidate (); } } \u8c03\u7528\u65b9\u6cd5 demo.xml <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <com.nostra13.universalimageloader.sample.ProgressBg android:layout_width= \"match_parent\" android:id= \"@+id/progress_bg\" android:layout_height= \"40dp\" android:minHeight= \"40dp\" /> <com.nostra13.universalimageloader.sample.Progress android:layout_width= \"match_parent\" android:layout_height= \"40dp\" android:id= \"@+id/progress_1\" android:gravity= \"center\" android:minHeight= \"30dp\" android:text= \"\u518d\u6b21\u5b66\u4e60\" android:textSize= \"30sp\" /> </FrameLayout> \u8c03\u7528\u65b9\u6cd5 Demo.java Handler mHandler = new Handler (); int progress_value = 0 ; Runnable setProgress = new Runnable () { @Override public void run () { if ( progress_value > 100 ) { progress_value = 0 ; } progress . setProgress ( progress_value ); progressBg . setProgress ( progress_value ); progress_value = progress_value + 2 ; mHandler . postDelayed ( this , 1000L ); } };","title":"Android \u81ea\u5b9a\u4e49\u8fdb\u5ea6\u6761"},{"location":"00Program/Android/2016-03-08-android-view-download-progress-with-text/#_1","text":"\u6709\u4e2a\u8fdb\u5ea6\u6761\u663e\u793a\u6548\u679c\u8981\u6c42\u8fdb\u5ea6\u6309\u7167\u6bd4\u4f8b\u8ba1\u7b97\uff0c\u4f46\u662f\u6587\u5b57\u663e\u793a\u6548\u679c\u548c\u80cc\u666f\u6070\u597d\u76f8\u53cd\uff0c\u9879\u76ee\u4e2d\u7684\u6548\u679c\u662f\u524d\u4eba\u7559\u4e0b\u7684\uff0c\u73b0\u5b9e\u65b9\u5f0f\u975e\u5e38\u968f\u610f\uff0c\u76f4\u63a5\u4f7f\u7528\u5927\u56fe\u5b8c\u6210\uff0c\u5bfc\u81f4\u5c0f\u5c4f\u624b\u673a\u65e0\u6cd5\u663e\u793a\u5b8c\u6574\u56fe\u7247\uff0c\u5927\u5c4f\u624b\u673a\u663e\u793a\u62c9\u4f38\uff0c\u82f1\u6587\u72b6\u6001\u6839\u672c\u6ca1\u6709\uff0c\u540e\u9762\u63a5\u624b\u4fee\u6539\u9002\u914d\u771f\u662f\u5934\u75bc\uff0c\u505a\u6210\u4e86.9 \u6a21\u5f0f\uff0c\u4f46\u662f\u9002\u914d\u4f9d\u7136\u86cb\u75bc\uff0c\u6700\u540e\u6ca1\u6709\u529e\u6cd5\u7ec8\u4e8e\u8fd8\u662f\u51c6\u5907\u91cd\u5199\u81ea\u5b9aView\u6765\u5b8c\u6210\u6548\u679c\u3002 \u6700\u7ec8\u7684\u6548\u679c\u5982\u4e0b\uff1a","title":"\u5de5\u4f5c\u4e2d\u9047\u5230\u4e00\u4e2a\u96be\u9898"},{"location":"00Program/Android/2016-03-08-android-view-download-progress-with-text/#_2","text":"\u4e0b\u9762\u7b80\u8981\u63cf\u8ff0\u4e0b\u4ee3\u7801\u7684\u5b9e\u73b0\uff0c\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e00\u4e2a\u4e3a\u6587\u5b57\u663e\u793a\u6548\u679c\u3002\u7b2c\u4e8c\u4e2a\u4e3a\u80cc\u666f\u663e\u793a\u6548\u679c\u3002 \u6587\u5b57\u663e\u793a Progress.java public class Progress extends TextView { public Progress ( Context context ) { super ( context ); init (); } public Progress ( Context context , AttributeSet attrs ) { super ( context , attrs ); init (); } public Progress ( Context context , AttributeSet attrs , int defStyleAttr ) { super ( context , attrs , defStyleAttr ); init (); } private void init (){ // mPaint = new Paint(Paint.ANTI_ALIAS_FLAG); } private LinearGradient mLinearGradient ; private Matrix mGradientMatrix ; private Paint mPaint ; private int mViewWidth = 0 ; private int mTranslate = 0 ; private boolean mAnimating = true ; @Override protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { super . onSizeChanged ( w , h , oldw , oldh ); } @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); /** * progress \u53d6\u503c\u8303\u56f4 (0-100) */ public void setProgress ( int progress ){ mPaint = getPaint (); mPaint . setFlags ( Paint . ANTI_ALIAS_FLAG ); if ( progress <= 0 ){ //\u767d\u5e95\u7ea2\u5b57 so paint not set shader, and setColor = Color.parseColor(\"#f05858\") mPaint . setColor ( Color . parseColor ( \"#f05858\" )); setTextColor ( Color . parseColor ( \"#f05858\" )); setText ( \"\u5f00\u59cb\u4e0b\u8f7d\" ); } else if ( progress >= 100 ){ //\u7ea2\u5e95\u767d\u5b57 mPaint . setColor ( Color . WHITE ); setTextColor ( Color . WHITE ); setText ( \"\u518d\u6b21\u4e0b\u8f7d\" ); } else { final float precent = ( float ) progress / 100 f ; mLinearGradient = new LinearGradient ( 0 , 0 , getWidth (), 0 , new int [] { Color . WHITE , Color . WHITE , Color . parseColor ( \"#f05858\" ), Color . parseColor ( \"#f05858\" )}, new float [] { 0 , precent , precent , 1 }, Shader . TileMode . MIRROR ); mPaint . setShader ( mLinearGradient ); setText ( \"\u7ee7\u7eed\u4e0b\u8f7d\" ); } postInvalidateDelayed ( 50 ); } } \u80cc\u666f\u663e\u793a ProgressBg.java public class ProgressBg extends View { public ProgressBg ( Context context ) { super ( context ); init (); } public ProgressBg ( Context context , AttributeSet attrs ) { super ( context , attrs ); init (); } public ProgressBg ( Context context , AttributeSet attrs , int defStyleAttr ) { super ( context , attrs , defStyleAttr ); init (); } private void init (){ mPaint = new Paint ( Paint . ANTI_ALIAS_FLAG ); } private LinearGradient mLinearGradient ; private Paint mPaint ; @Override protected void onDraw ( Canvas canvas ) { super . onDraw ( canvas ); setBackgroundColor ( Color . WHITE ); mPaint . setColor ( Color . parseColor ( \"#f05858\" )); canvas . drawRect ( 0f , 0f , getWidth () * precent , getHeight (), mPaint ); invalidate (); } public float precent = 0.0f ; /** * progress \u53d6\u503c\u8303\u56f4 (0-100) */ public void setProgress ( int progress ){ Log . i ( \"precent\" , \"precent:\" + precent ); if ( progress <= 0 ){ //\u767d\u5e95\u7ea2\u5b57 so paint not set shader, and setColor = Color.parseColor(\"#f05858\") precent = 0.0f ; } else if ( progress >= 100 ){ //\u7ea2\u5e95\u767d\u5b57 precent = 1.0f ; } else { precent = ( float ) progress / 100 f ; } invalidate (); } } \u8c03\u7528\u65b9\u6cd5 demo.xml <FrameLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" > <com.nostra13.universalimageloader.sample.ProgressBg android:layout_width= \"match_parent\" android:id= \"@+id/progress_bg\" android:layout_height= \"40dp\" android:minHeight= \"40dp\" /> <com.nostra13.universalimageloader.sample.Progress android:layout_width= \"match_parent\" android:layout_height= \"40dp\" android:id= \"@+id/progress_1\" android:gravity= \"center\" android:minHeight= \"30dp\" android:text= \"\u518d\u6b21\u5b66\u4e60\" android:textSize= \"30sp\" /> </FrameLayout> \u8c03\u7528\u65b9\u6cd5 Demo.java Handler mHandler = new Handler (); int progress_value = 0 ; Runnable setProgress = new Runnable () { @Override public void run () { if ( progress_value > 100 ) { progress_value = 0 ; } progress . setProgress ( progress_value ); progressBg . setProgress ( progress_value ); progress_value = progress_value + 2 ; mHandler . postDelayed ( this , 1000L ); } };","title":"\u5b9e\u6218\u6f14\u7ec3"},{"location":"00Program/Android/LiveData/","tags":["LiveData"],"text":"LiveData \u00b6 Google\u6587\u6863\uff1a https://developer.android.google.cn/topic/libraries/architecture/livedata LiveData\u7684\u6982\u5ff5\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u4f7f\u4f60\u7684\u6570\u636e \u80fd\u591f \u5177\u5907\u751f\u547d\u5468\u671f\u7684\u7279\u6027 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6211\u4eec\u53bb\u672c\u5730\u6570\u636e\u5e93\u67e5\u8be2\u4e00\u4e2a \u2018\u5217\u8868\u2019\uff0c\u662f\u4e0d\u662f\u5148\u5f00\u4e00\u4e2a\u5f02\u6b65\u7ebf\u7a0b\uff0c\u67e5\u8be2\u5230 \u2018\u5217\u8868\u2019 \u540e\u5728\u901a\u8fc7 Handler \u4ece \u5f02\u6b65\u7ebf\u7a0b\u4e2d\u628a \u2018\u5217\u8868\u2019 push \u5230 UI\u7ebf\u7a0b\uff0c \u4f7f\u7528LiveData\u540e\uff1a 1. ROOM \u6846\u67b6 \u652f\u6301\u8fd4\u56deLiveData \u683c\u5f0f\u7684\u6570\u636e\uff0c 2. \u6211\u4eec\u53ea\u9700\u8981\u5728\u754c\u9762 \u4f7f\u7528LiveData.observer.onChanged() \u5c31\u597d\u4e86 3. \u5f53\u6211\u4eec\u5217\u8868\u6709\u65b0\u589e\u6570\u636e \u8fd8\u4f1a\u81ea\u52a8 \u51fa\u53d1 observer.onChanged() \u8fd9\u6837\u7684\u7684\u798f\u5229\u8fd8\u4e0d\u5b89\u5229\u5417? Retrofit \u540c\u6837\u4e5f\u652f\u6301\u4e86 LiveData \u914d\u5408 kotlin \u534f\u7a0b\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u3002 \u5f53\u7136\u4f60\u6700\u597d\u7ed3\u5408 ViewModel+DataBinding \u6765\u5b9e\u73b0\u4f60\u7684\u61d2\u4eba(MVVM)\u67b6\u6784 \u5177\u4f53\u4f8b\u5b50 \u00b6 \u4ee5Google BaseSimple \u4e3a\u4f8b\uff0c\u6211\u8fc1\u79fb\u4e86\u4e00\u4efd\u5230 gitee https://gitee.com/pengqinping/architecture-components-samples/tree/master/BasicSample \u5efa\u8bae \u5728 AS \u6253\u5f00\u9879\u76ee\u67e5\u770b 1. \u5728 ProductDao \u7f16\u5199\u67e5\u8be2 \u5e76\u5b9a\u4e49 searchAllProducts 2. \u5728 DataRepository \u4e2d\u8c03\u7528 searchAllProducts (\u67b6\u6784\u5206\u5c42 \u4e0d\u8d34\u4ee3\u7801) 3. \u5728 ProductListViewModel \u4e2d\u8c03\u7528 searchProducts (\u67b6\u6784\u5206\u5c42 \u4e0d\u8d34\u4ee3\u7801) 4. \u5728 ProductListFragment \u4e2d\u76d1\u542c LiveData 1.ROOM \u8fd4\u56delivedata \u00b6 // ROOM \u901a\u8fc7\u6ce8\u89e3 \u5728\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u751f\u6210\u5b9e\u73b0\u7c7b ProductDao_Impl @Query ( \"SELECT products.* FROM products JOIN productsFts ON (products.id = productsFts.rowid) \" + \"WHERE productsFts MATCH :query\" ) LiveData < List < ProductEntity >> searchAllProducts ( String query ); ProductDao_Impl \u76ee\u5f55\u7ed3\u6784, \u611f\u5174\u8da3\u53ef\u4ee5\u53bb\u770b\u770b\u5177\u4f53\u5b9e\u73b0, \u8fd9\u4e2a\u6587\u4ef6\u662f\u901a\u8fc7 annotationProcessor room.compiler \u4f9d\u8d56\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u901a\u8fc7\u6ce8\u89e3\u5f62\u6210\u3002 2. ProductListFragment.java livedata \u76d1\u542c \u00b6 // \u53ea\u8981\u6570\u636e\u53d8\u5316 mbinding \u4f1a\u81ea\u52a8\u53bb\u5237\u65b0UI \u4e0d\u7528\u6211\u4eec\u5728 setView setText \u7b49\u5f85\u4e00\u4e9b\u5217\u64cd\u4f5c private void subscribeUi ( LiveData < List < ProductEntity >> liveData ) { // Update the list when the data changes liveData . observe ( getViewLifecycleOwner (), myProducts -> { // \u66f4\u65b0UI\u64cd\u4f5c if ( myProducts != null ) { mBinding . setIsLoading ( false ); mProductAdapter . setProductList ( myProducts ); } else { mBinding . setIsLoading ( true ); } // espresso does not know how to wait for data binding's loop so we execute changes // sync. mBinding . executePendingBindings (); }); } LiveData \u6e90\u7801\u6d45\u6790 \u00b6 \u6211\u4eec\u4ece\u4e0b\u9762\u51e0\u4e2a\u64cd\u4f5c\u4e0a\u6765\u770b LiveData \u7684\u5b9e\u73b0 1. \u6211\u4eec\u521b\u5efa\u666e\u901a\u7684 LiveData<T> \u4e00\u822c\u662f\u76f4\u63a5\u901a\u8fc7\u6784\u9020\u5668\u6765 \u521b\u5efa\u5bf9\u8c61 2. \u66f4\u65b0\u6570\u636e livedata.setValue(T) liveData.postValue(T) 3. observer LiveData \u7684\u53d8\u5316 1. LiveData<T>() \u00b6 public LiveData ( T value ) { mData = value ; mVersion = START_VERSION + 1 ; } 2. setValue(T) \u00b6 // \u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u8c03\u7528 @MainThread protected void setValue ( T value ) { assertMainThread ( \"setValue\" ); mVersion ++ ; mData = value ; dispatchingValue ( null ); } 3. postValue(T) \u00b6 // \u53ef\u4ee5\u5728\u5b50\u7ebf\u7a0b\u8c03\u7528\uff0c\u8fd9\u91cc\u6709\u5207\u6362\u7ebf\u7a0b\u7684\u64cd\u4f5c protected void postValue ( T value ) { boolean postTask ; synchronized ( mDataLock ) { postTask = mPendingData == NOT_SET ; mPendingData = value ; } if ( ! postTask ) { return ; } // \u5207\u6362\u7ebf\u7a0b \u6700\u7ec8\u662f \u901a\u8fc7 DefaultTaskExecutor.postToMainThread() \u8fd9\u91cc\u9762\u4f1a\u521b\u5efa\u4e00\u4e2a MainHandler \u6700\u7ec8\u8fd8\u662f\u901a\u8fc7 handler \u53bb\u5b9e\u73b0\u7684\uff0c ArchTaskExecutor . getInstance (). postToMainThread ( mPostValueRunnable ); } // \u5176\u5b9e\u5c31\u505a\u4e86\u4e00\u4e2a\u540c\u6b65\u9501\uff0c\u6700\u7ec8\u8fd8\u662f\u901a\u8fc7 setValue\u6765\u66f4\u65b0\uff0c\u6240\u4ee5\u57fa\u672c\u6240\u6709\u7684 \u901a\u77e5\u66f4\u65b0 \u90fd\u5728 dispatchingValue() \u91cc\u9762 private final Runnable mPostValueRunnable = new Runnable () { @SuppressWarnings ( \"unchecked\" ) @Override public void run () { Object newValue ; synchronized ( mDataLock ) { newValue = mPendingData ; mPendingData = NOT_SET ; } setValue (( T ) newValue ); } }; 4. dispatchingValue(@Nullable ObserverWrapper initiator) \u00b6 void dispatchingValue ( @Nullable ObserverWrapper initiator ) { if ( mDispatchingValue ) { mDispatchInvalidated = true ; return ; } mDispatchingValue = true ; do { mDispatchInvalidated = false ; if ( initiator != null ) { considerNotify ( initiator ); initiator = null ; } else { // \u904d\u5386 \u6240\u6709\u7684 mObserver \u53bb\u8fdb\u884c\u901a\u77e5 for ( Iterator < Map . Entry < Observer <? super T > , ObserverWrapper >> iterator = mObservers . iteratorWithAdditions (); iterator . hasNext (); ) { considerNotify ( iterator . next (). getValue ()); if ( mDispatchInvalidated ) { break ; } } } } while ( mDispatchInvalidated ); mDispatchingValue = false ; } private void considerNotify ( ObserverWrapper observer ) { if ( ! observer . mActive ) { return ; } // Check latest state b4 dispatch. Maybe it changed state but we didn't get the event yet. // // we still first check observer.active to keep it as the entrance for events. So even if // the observer moved to an active state, if we've not received that event, we better not // notify for a more predictable notification order. if ( ! observer . shouldBeActive ()) { observer . activeStateChanged ( false ); return ; } if ( observer . mLastVersion >= mVersion ) { return ; } observer . mLastVersion = mVersion ; // \u53d1\u5e03\u901a\u77e5 observer . mObserver . onChanged (( T ) mData ); } mObservers \u662f\u5728 \u53bb\u76d1\u542cLiveData\u7684\u65f6\u5019\u4f20\u5165\u7684liveData.observe(getViewLifecycleOwner(),Observer{}) @MainThread public void observe ( @NonNull LifecycleOwner owner , @NonNull Observer <? super T > observer ) { assertMainThread ( \"observe\" ); if ( owner . getLifecycle (). getCurrentState () == DESTROYED ) { // ignore return ; } // lifecycle\u76f8\u5173\u7684\u903b\u8f91\u4e5f\u53ea\u5728\u8fd9\u91cc\u5b9e\u73b0\u7684 // owner \u4e00\u822c\u662f Activity \u548c Fragment (\u6700\u597d\u662f androidx\u5305\u4e0b\u7684) // LifecycleBoundObserver wrapper = new LifecycleBoundObserver ( owner , observer ); ObserverWrapper existing = mObservers . putIfAbsent ( observer , wrapper ); if ( existing != null && ! existing . isAttachedTo ( owner )) { throw new IllegalArgumentException ( \"Cannot add the same observer\" + \" with different lifecycles\" ); } if ( existing != null ) { return ; } owner . getLifecycle (). addObserver ( wrapper ); } \u6e90\u7801\u5206\u6790\u5230\u6b64\u7ed3\u675f\uff0c\u611f\u5174\u8da3\u53ef\u81ea\u884c\u67e5\u770b\u66f4\u591a\u7ec6\u8282 @Override public void onStateChanged ( @NonNull LifecycleOwner source , @NonNull Lifecycle . Event event ) { // \u5f53 Activity \u6216\u8005 fragment destory \u540e \u79fb\u9664\u51fa\u6389 observer \u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0 destory \u540e liveData \u5728\u6536\u5230\u6d88\u606f\u7684\u60c5\u51b5 if ( mOwner . getLifecycle (). getCurrentState () == DESTROYED ) { removeObserver ( mObserver ); return ; } activeStateChanged ( shouldBeActive ()); } Transformations.map() \u548c Transformations.switchMap() \u00b6 \u4e3a\u4ec0\u4e48\u9700\u8981 Trasnformations \uff1f \u5982\u679c\u4f60\u7684\u754c\u9762\u9700\u8981\u663e\u793a\u4e00\u4e2a String \u63a5\u53e3\u7ed9\u4f60\u4e86\u4e00\u4e2a List<String> \uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u6211\u628a List<String> \u4f20\u8fc7\u53bb\u81ea\u5df1 \u622a\u53d6\u62fc\u63a5\u3002\u8fd9\u6837\u867d\u7136\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\uff0c\u4f60\u51ed\u501f\u51fa\u6765\u7684\u6570\u636e \u4e0d\u662f LiveData \u7c7b\u578b\u7684\u3002\u6ca1\u6cd5 Observers . \u8fd9\u4e2a\u65f6\u5019\u4f60\u5c31\u9700\u8981 Trasnformations Document: \u4e2d\u6587\u7248\u7684\u6211\u786c\u662f\u6ca1\u6709\u770b\u61c2 You may want to make changes to the value stored in a LiveData object before dispatching it to the observers, or you may need to return a different LiveData instance based on the value of another one. The Lifecycle package provides the Transformations class which includes helper methods that support these scenarios. 1. Transformations.map() \u00b6 \u6587\u6863\u8bf4\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u662f \u6211\u60f3\u8981\u5c55\u793a UserName\uff0c \u5b9e\u4f8b\u4e2d\u7684\u90fd\u662fLiveData\u4e0d\u53ef\u53d8\uff0c\u4e5f\u5c31\u662f\u521d\u59cb\u5316\u540e\u4e0d\u80fd\u6539\u53d8\u5b83\u7684\u503c val userLiveData : LiveData < User > = UserLiveData () val userName : LiveData < String > = Transformations . map ( userLiveData ) { user -> \" ${ user . name } ${ user . lastName } \" } 2. Trasnformations.switchMap() \u00b6 \u6bd4\u5982\u6839\u636e\u4e00\u4e2aId\u53bb\u67e5\u8be2\u4e00\u4e2a\u5217\u8868\uff0c\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\uff0c\u5e76\u4e0d\u80fd\u4f53\u73b0\u51fa LiveData \u7684\u7279\u6027\uff0c\u8fd9\u4e2a\u65f6\u5019\u60f3\u76f4\u63a5\u628a\u67e5\u8be2\u7ed3\u679c\u4f5c\u4e3aLiveData\u7684\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981LiveData\u4e86 private fun getUser ( id : String ): LiveData < User > { ... // \u8fd9\u91cc\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f retrofit \u4e5f\u53ef\u4ee5\u662f ROOM \u76ee\u524d\u8fd9\u4e24\u4e2a\u90fd\u652f\u6301\u4e86\u76f4\u63a5\u8fd4\u56deLiveData } val userId : LiveData < String > = ... val user = Transformations . switchMap ( userId ) { id -> getUser ( id ) } \u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d \u6211\u6539\u53d8 liveGroupId \u6570\u636e\uff0clinks \u4f1a\u81ea\u52a8\u7684\u53bb\u66f4\u65b0 // ViewModel private val liveGroupId = MutableLiveData < Long > () val links = Transformations . switchMap ( liveGroupId ) { linkRepository . findLinksWithGroupId ( it ) } // Fragment linkViewModel . links . observe ( this , Observer { if ( it . isNullOrEmpty ()) { enableDeleteMenu () state_view . showEmptyView () } else { state_view . showContent () } // \u4e3a\u7a7a\u4e5f\u8981\u53bb\u6e05\u7406\u4e0b Adapter \u5426\u5219\u8fd8\u6709\u6570\u636e linkAdapter . setNewData ( it ) })","title":"LiveData"},{"location":"00Program/Android/LiveData/#livedata","text":"Google\u6587\u6863\uff1a https://developer.android.google.cn/topic/libraries/architecture/livedata LiveData\u7684\u6982\u5ff5\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u4f7f\u4f60\u7684\u6570\u636e \u80fd\u591f \u5177\u5907\u751f\u547d\u5468\u671f\u7684\u7279\u6027 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6211\u4eec\u53bb\u672c\u5730\u6570\u636e\u5e93\u67e5\u8be2\u4e00\u4e2a \u2018\u5217\u8868\u2019\uff0c\u662f\u4e0d\u662f\u5148\u5f00\u4e00\u4e2a\u5f02\u6b65\u7ebf\u7a0b\uff0c\u67e5\u8be2\u5230 \u2018\u5217\u8868\u2019 \u540e\u5728\u901a\u8fc7 Handler \u4ece \u5f02\u6b65\u7ebf\u7a0b\u4e2d\u628a \u2018\u5217\u8868\u2019 push \u5230 UI\u7ebf\u7a0b\uff0c \u4f7f\u7528LiveData\u540e\uff1a 1. ROOM \u6846\u67b6 \u652f\u6301\u8fd4\u56deLiveData \u683c\u5f0f\u7684\u6570\u636e\uff0c 2. \u6211\u4eec\u53ea\u9700\u8981\u5728\u754c\u9762 \u4f7f\u7528LiveData.observer.onChanged() \u5c31\u597d\u4e86 3. \u5f53\u6211\u4eec\u5217\u8868\u6709\u65b0\u589e\u6570\u636e \u8fd8\u4f1a\u81ea\u52a8 \u51fa\u53d1 observer.onChanged() \u8fd9\u6837\u7684\u7684\u798f\u5229\u8fd8\u4e0d\u5b89\u5229\u5417? Retrofit \u540c\u6837\u4e5f\u652f\u6301\u4e86 LiveData \u914d\u5408 kotlin \u534f\u7a0b\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u3002 \u5f53\u7136\u4f60\u6700\u597d\u7ed3\u5408 ViewModel+DataBinding \u6765\u5b9e\u73b0\u4f60\u7684\u61d2\u4eba(MVVM)\u67b6\u6784","title":"LiveData"},{"location":"00Program/Android/LiveData/#_1","text":"\u4ee5Google BaseSimple \u4e3a\u4f8b\uff0c\u6211\u8fc1\u79fb\u4e86\u4e00\u4efd\u5230 gitee https://gitee.com/pengqinping/architecture-components-samples/tree/master/BasicSample \u5efa\u8bae \u5728 AS \u6253\u5f00\u9879\u76ee\u67e5\u770b 1. \u5728 ProductDao \u7f16\u5199\u67e5\u8be2 \u5e76\u5b9a\u4e49 searchAllProducts 2. \u5728 DataRepository \u4e2d\u8c03\u7528 searchAllProducts (\u67b6\u6784\u5206\u5c42 \u4e0d\u8d34\u4ee3\u7801) 3. \u5728 ProductListViewModel \u4e2d\u8c03\u7528 searchProducts (\u67b6\u6784\u5206\u5c42 \u4e0d\u8d34\u4ee3\u7801) 4. \u5728 ProductListFragment \u4e2d\u76d1\u542c LiveData","title":"\u5177\u4f53\u4f8b\u5b50"},{"location":"00Program/Android/LiveData/#1room-livedata","text":"// ROOM \u901a\u8fc7\u6ce8\u89e3 \u5728\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u751f\u6210\u5b9e\u73b0\u7c7b ProductDao_Impl @Query ( \"SELECT products.* FROM products JOIN productsFts ON (products.id = productsFts.rowid) \" + \"WHERE productsFts MATCH :query\" ) LiveData < List < ProductEntity >> searchAllProducts ( String query ); ProductDao_Impl \u76ee\u5f55\u7ed3\u6784, \u611f\u5174\u8da3\u53ef\u4ee5\u53bb\u770b\u770b\u5177\u4f53\u5b9e\u73b0, \u8fd9\u4e2a\u6587\u4ef6\u662f\u901a\u8fc7 annotationProcessor room.compiler \u4f9d\u8d56\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u901a\u8fc7\u6ce8\u89e3\u5f62\u6210\u3002","title":"1.ROOM \u8fd4\u56delivedata"},{"location":"00Program/Android/LiveData/#2-productlistfragmentjava-livedata","text":"// \u53ea\u8981\u6570\u636e\u53d8\u5316 mbinding \u4f1a\u81ea\u52a8\u53bb\u5237\u65b0UI \u4e0d\u7528\u6211\u4eec\u5728 setView setText \u7b49\u5f85\u4e00\u4e9b\u5217\u64cd\u4f5c private void subscribeUi ( LiveData < List < ProductEntity >> liveData ) { // Update the list when the data changes liveData . observe ( getViewLifecycleOwner (), myProducts -> { // \u66f4\u65b0UI\u64cd\u4f5c if ( myProducts != null ) { mBinding . setIsLoading ( false ); mProductAdapter . setProductList ( myProducts ); } else { mBinding . setIsLoading ( true ); } // espresso does not know how to wait for data binding's loop so we execute changes // sync. mBinding . executePendingBindings (); }); }","title":"2. ProductListFragment.java livedata \u76d1\u542c"},{"location":"00Program/Android/LiveData/#livedata_1","text":"\u6211\u4eec\u4ece\u4e0b\u9762\u51e0\u4e2a\u64cd\u4f5c\u4e0a\u6765\u770b LiveData \u7684\u5b9e\u73b0 1. \u6211\u4eec\u521b\u5efa\u666e\u901a\u7684 LiveData<T> \u4e00\u822c\u662f\u76f4\u63a5\u901a\u8fc7\u6784\u9020\u5668\u6765 \u521b\u5efa\u5bf9\u8c61 2. \u66f4\u65b0\u6570\u636e livedata.setValue(T) liveData.postValue(T) 3. observer LiveData \u7684\u53d8\u5316","title":"LiveData \u6e90\u7801\u6d45\u6790"},{"location":"00Program/Android/LiveData/#1-livedatat","text":"public LiveData ( T value ) { mData = value ; mVersion = START_VERSION + 1 ; }","title":"1. LiveData&lt;T&gt;()"},{"location":"00Program/Android/LiveData/#2-setvaluet","text":"// \u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u8c03\u7528 @MainThread protected void setValue ( T value ) { assertMainThread ( \"setValue\" ); mVersion ++ ; mData = value ; dispatchingValue ( null ); }","title":"2. setValue(T)"},{"location":"00Program/Android/LiveData/#3-postvaluet","text":"// \u53ef\u4ee5\u5728\u5b50\u7ebf\u7a0b\u8c03\u7528\uff0c\u8fd9\u91cc\u6709\u5207\u6362\u7ebf\u7a0b\u7684\u64cd\u4f5c protected void postValue ( T value ) { boolean postTask ; synchronized ( mDataLock ) { postTask = mPendingData == NOT_SET ; mPendingData = value ; } if ( ! postTask ) { return ; } // \u5207\u6362\u7ebf\u7a0b \u6700\u7ec8\u662f \u901a\u8fc7 DefaultTaskExecutor.postToMainThread() \u8fd9\u91cc\u9762\u4f1a\u521b\u5efa\u4e00\u4e2a MainHandler \u6700\u7ec8\u8fd8\u662f\u901a\u8fc7 handler \u53bb\u5b9e\u73b0\u7684\uff0c ArchTaskExecutor . getInstance (). postToMainThread ( mPostValueRunnable ); } // \u5176\u5b9e\u5c31\u505a\u4e86\u4e00\u4e2a\u540c\u6b65\u9501\uff0c\u6700\u7ec8\u8fd8\u662f\u901a\u8fc7 setValue\u6765\u66f4\u65b0\uff0c\u6240\u4ee5\u57fa\u672c\u6240\u6709\u7684 \u901a\u77e5\u66f4\u65b0 \u90fd\u5728 dispatchingValue() \u91cc\u9762 private final Runnable mPostValueRunnable = new Runnable () { @SuppressWarnings ( \"unchecked\" ) @Override public void run () { Object newValue ; synchronized ( mDataLock ) { newValue = mPendingData ; mPendingData = NOT_SET ; } setValue (( T ) newValue ); } };","title":"3. postValue(T)"},{"location":"00Program/Android/LiveData/#4-dispatchingvaluenullable-observerwrapper-initiator","text":"void dispatchingValue ( @Nullable ObserverWrapper initiator ) { if ( mDispatchingValue ) { mDispatchInvalidated = true ; return ; } mDispatchingValue = true ; do { mDispatchInvalidated = false ; if ( initiator != null ) { considerNotify ( initiator ); initiator = null ; } else { // \u904d\u5386 \u6240\u6709\u7684 mObserver \u53bb\u8fdb\u884c\u901a\u77e5 for ( Iterator < Map . Entry < Observer <? super T > , ObserverWrapper >> iterator = mObservers . iteratorWithAdditions (); iterator . hasNext (); ) { considerNotify ( iterator . next (). getValue ()); if ( mDispatchInvalidated ) { break ; } } } } while ( mDispatchInvalidated ); mDispatchingValue = false ; } private void considerNotify ( ObserverWrapper observer ) { if ( ! observer . mActive ) { return ; } // Check latest state b4 dispatch. Maybe it changed state but we didn't get the event yet. // // we still first check observer.active to keep it as the entrance for events. So even if // the observer moved to an active state, if we've not received that event, we better not // notify for a more predictable notification order. if ( ! observer . shouldBeActive ()) { observer . activeStateChanged ( false ); return ; } if ( observer . mLastVersion >= mVersion ) { return ; } observer . mLastVersion = mVersion ; // \u53d1\u5e03\u901a\u77e5 observer . mObserver . onChanged (( T ) mData ); } mObservers \u662f\u5728 \u53bb\u76d1\u542cLiveData\u7684\u65f6\u5019\u4f20\u5165\u7684liveData.observe(getViewLifecycleOwner(),Observer{}) @MainThread public void observe ( @NonNull LifecycleOwner owner , @NonNull Observer <? super T > observer ) { assertMainThread ( \"observe\" ); if ( owner . getLifecycle (). getCurrentState () == DESTROYED ) { // ignore return ; } // lifecycle\u76f8\u5173\u7684\u903b\u8f91\u4e5f\u53ea\u5728\u8fd9\u91cc\u5b9e\u73b0\u7684 // owner \u4e00\u822c\u662f Activity \u548c Fragment (\u6700\u597d\u662f androidx\u5305\u4e0b\u7684) // LifecycleBoundObserver wrapper = new LifecycleBoundObserver ( owner , observer ); ObserverWrapper existing = mObservers . putIfAbsent ( observer , wrapper ); if ( existing != null && ! existing . isAttachedTo ( owner )) { throw new IllegalArgumentException ( \"Cannot add the same observer\" + \" with different lifecycles\" ); } if ( existing != null ) { return ; } owner . getLifecycle (). addObserver ( wrapper ); } \u6e90\u7801\u5206\u6790\u5230\u6b64\u7ed3\u675f\uff0c\u611f\u5174\u8da3\u53ef\u81ea\u884c\u67e5\u770b\u66f4\u591a\u7ec6\u8282 @Override public void onStateChanged ( @NonNull LifecycleOwner source , @NonNull Lifecycle . Event event ) { // \u5f53 Activity \u6216\u8005 fragment destory \u540e \u79fb\u9664\u51fa\u6389 observer \u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0 destory \u540e liveData \u5728\u6536\u5230\u6d88\u606f\u7684\u60c5\u51b5 if ( mOwner . getLifecycle (). getCurrentState () == DESTROYED ) { removeObserver ( mObserver ); return ; } activeStateChanged ( shouldBeActive ()); }","title":"4. dispatchingValue(@Nullable ObserverWrapper initiator)"},{"location":"00Program/Android/LiveData/#transformationsmap-transformationsswitchmap","text":"\u4e3a\u4ec0\u4e48\u9700\u8981 Trasnformations \uff1f \u5982\u679c\u4f60\u7684\u754c\u9762\u9700\u8981\u663e\u793a\u4e00\u4e2a String \u63a5\u53e3\u7ed9\u4f60\u4e86\u4e00\u4e2a List<String> \uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u6211\u628a List<String> \u4f20\u8fc7\u53bb\u81ea\u5df1 \u622a\u53d6\u62fc\u63a5\u3002\u8fd9\u6837\u867d\u7136\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\uff0c\u4f60\u51ed\u501f\u51fa\u6765\u7684\u6570\u636e \u4e0d\u662f LiveData \u7c7b\u578b\u7684\u3002\u6ca1\u6cd5 Observers . \u8fd9\u4e2a\u65f6\u5019\u4f60\u5c31\u9700\u8981 Trasnformations Document: \u4e2d\u6587\u7248\u7684\u6211\u786c\u662f\u6ca1\u6709\u770b\u61c2 You may want to make changes to the value stored in a LiveData object before dispatching it to the observers, or you may need to return a different LiveData instance based on the value of another one. The Lifecycle package provides the Transformations class which includes helper methods that support these scenarios.","title":"Transformations.map() \u548c Transformations.switchMap()"},{"location":"00Program/Android/LiveData/#1-transformationsmap","text":"\u6587\u6863\u8bf4\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c31\u662f \u6211\u60f3\u8981\u5c55\u793a UserName\uff0c \u5b9e\u4f8b\u4e2d\u7684\u90fd\u662fLiveData\u4e0d\u53ef\u53d8\uff0c\u4e5f\u5c31\u662f\u521d\u59cb\u5316\u540e\u4e0d\u80fd\u6539\u53d8\u5b83\u7684\u503c val userLiveData : LiveData < User > = UserLiveData () val userName : LiveData < String > = Transformations . map ( userLiveData ) { user -> \" ${ user . name } ${ user . lastName } \" }","title":"1. Transformations.map()"},{"location":"00Program/Android/LiveData/#2-trasnformationsswitchmap","text":"\u6bd4\u5982\u6839\u636e\u4e00\u4e2aId\u53bb\u67e5\u8be2\u4e00\u4e2a\u5217\u8868\uff0c\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\uff0c\u5e76\u4e0d\u80fd\u4f53\u73b0\u51fa LiveData \u7684\u7279\u6027\uff0c\u8fd9\u4e2a\u65f6\u5019\u60f3\u76f4\u63a5\u628a\u67e5\u8be2\u7ed3\u679c\u4f5c\u4e3aLiveData\u7684\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981LiveData\u4e86 private fun getUser ( id : String ): LiveData < User > { ... // \u8fd9\u91cc\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f retrofit \u4e5f\u53ef\u4ee5\u662f ROOM \u76ee\u524d\u8fd9\u4e24\u4e2a\u90fd\u652f\u6301\u4e86\u76f4\u63a5\u8fd4\u56deLiveData } val userId : LiveData < String > = ... val user = Transformations . switchMap ( userId ) { id -> getUser ( id ) } \u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d \u6211\u6539\u53d8 liveGroupId \u6570\u636e\uff0clinks \u4f1a\u81ea\u52a8\u7684\u53bb\u66f4\u65b0 // ViewModel private val liveGroupId = MutableLiveData < Long > () val links = Transformations . switchMap ( liveGroupId ) { linkRepository . findLinksWithGroupId ( it ) } // Fragment linkViewModel . links . observe ( this , Observer { if ( it . isNullOrEmpty ()) { enableDeleteMenu () state_view . showEmptyView () } else { state_view . showContent () } // \u4e3a\u7a7a\u4e5f\u8981\u53bb\u6e05\u7406\u4e0b Adapter \u5426\u5219\u8fd8\u6709\u6570\u636e linkAdapter . setNewData ( it ) })","title":"2. Trasnformations.switchMap()"},{"location":"00Program/Android/Paging/","tags":"Paging","text":"Paging \u00b6 Google \u6587\u6863 https://developer.android.google.cn/topic/libraries/architecture/paging Github\u9879\u76ee\uff1a https://github.com/android/architecture-components-samples/tree/master/PagingSample Gitee\u9879\u76ee\uff1a https://gitee.com/pengqinping/architecture-components-samples/tree/master/PagingSample (developer \u6539 maven repo \u4e3a ali ) \u5f00\u59cb\u524d\u5148\u95ee\u81ea\u5df1\u51e0\u4e2a\u95ee\u9898\uff1a 1. \u5b98\u65b9\u4ecb\u7ecd\u8bf4\u662f\u7528\u6765\u505a\u6309\u9700\u52a0\u8f7d\uff1f\u90a3\u4e48\u548c\u4ee5\u524d\u7684 \u81ea\u5df1\u5199\u7684\u5206\u9875\u52a0\u8f7d(\u6839\u636e\u9875\u9762\u5224\u65ad\u6570\u636e\u662f\u52a0\u5728data\u5217\u8868\u7684\u5934\u8fd8\u662f\u5c3e)\u6709\u4ec0\u4e48\u533a\u522b 2. Paging \u89e3\u51b3\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f \u4f18\u52bf\u662f\u4ec0\u4e48\uff1f \u4ee3\u7801\u5206\u6790 \u00b6 // \u7ee7\u627f\u4e8e\u5217\u8868\uff0c\u90a3\u5c31\u662f\u5f53\u505a data\u5217\u8868\u7528 // \u52a0\u5165\u4e86 \u5237\u65b0\uff0c\u5f00\u59cb\uff0c\u4ecb\u7ecd \u4e09\u79cd\u7c7b\u578b\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u5bf9\u5e94\u4e0b\u9762\u7684\u4e94\u79cd\u72b6\u6001 // \u8fd9\u4e0d\u662f\u5206\u9875\u719f\u6089\u7684\u903b\u8f91\u5417\uff0c\u53ea\u4e0d\u8fc7\u4ee5\u524d\u662f\u5c01\u88c5\u5728View\u5c42\u7684\uff0c public abstract class PagedList < T > extends AbstractList < T > { public enum LoadType { REFRESH , START , END } public enum LoadState { IDLE , LOADING , DONE , ERROR , RETRYABLE_ERROR } } // \u6784\u9020\u5668 PagedList ( @NonNull PagedStorage < T > storage , @NonNull Executor mainThreadExecutor , @NonNull Executor backgroundThreadExecutor , @Nullable BoundaryCallback < T > boundaryCallback , @NonNull Config config ) { mStorage = storage ; // ContiguousPageList \u548c TiledPagedList \u9ed8\u8ba4\u503c\u90fd\u662f new PagedStorage<V>() mMainThreadExecutor = mainThreadExecutor ; // ui\u7ebf\u7a0b\u6c60 \u9ed8\u8ba4\u503c ArchTaskExecutor.getMainThreadExecutor() mBackgroundThreadExecutor = backgroundThreadExecutor ; // \u8017\u65f6\u7ebf\u7a0b\u6c60 \u9ed8\u8ba4\u503c\uff1a ArchTaskExecutor.getIOThreadExecutor() mBoundaryCallback = boundaryCallback ; // \u56de\u8c03 \u4f20\u5165 mConfig = config ; // \u5206\u9875\u914d\u7f6e \u4e00\u822c\u662f\u4f20\u5165 mRequiredRemainder = mConfig . prefetchDistance * 2 + mConfig . pageSize ; } PagingSample \u9879\u76ee\u89e3\u8bfb \u00b6 \u770b\u4e86\u57fa\u672c\u7684\u7ed3\u6784\uff0c\u63a5\u4e0b\u6765 \u770b\u5982\u5982\u4f55\u4f7f\u7528\uff0c\u65e2\u7136\u662f Pagin \u662fM\u5c42\uff0c\u90a3\u4e48\u5fc5\u5b9a\u662f\u5728 ViewModel \u91cc\u9762\u4f7f\u7528\uff0c\u914d\u5408 LiveData \u6765\u5b9e\u73b0\u53ef\u89c2\u5bdf \u5b9e\u65f6\u5237\u65b0 \u5148\u770b\u6570\u636e\u6e90 @Query ( \"SELECT * FROM Cheese ORDER BY name COLLATE NOCASE ASC\" ) fun allCheesesByName (): DataSource . Factory < Int , Cheese > \u4ed6\u6ca1\u6709\u76f4\u63a5\u8fd4\u56de PagedList \u800c\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a DataSource.Factory \uff0c \u5728 LivePagedList \u6269\u5c55\u4e86\u4e00\u4e2a DataSource.Factory<Key, Value>.toLiveData(config...) \u7684\u51fd\u6570 \u7528\u6765\u8fd4\u56de LiveData \u7c7b\u578b\u7684 PagedList CheeseDao_Impl.java \u4e2d\u5177\u4f53\u7684 DataSource.Factory \u5b9e\u73b0\u7c7b \u76f4\u63a5 new \u4e86 \u4e00\u4e2a\u533f\u540d\u7684\u62bd\u8c61\u6765 \u6765\u8fd4\u56de\u4e00\u4e2a LimitOffsetDataSource<Cheese> @Override public DataSource . Factory < Integer , Cheese > allCheesesByName () { final String _sql = \"SELECT * FROM Cheese ORDER BY name COLLATE NOCASE ASC\" ; final RoomSQLiteQuery _statement = RoomSQLiteQuery . acquire ( _sql , 0 ); return new DataSource . Factory < Integer , Cheese > () { @Override public LimitOffsetDataSource < Cheese > create () { return new LimitOffsetDataSource < Cheese > ( __db , _statement , false , \"Cheese\" ) { @Override protected List < Cheese > convertRows ( Cursor cursor ) { final int _cursorIndexOfId = CursorUtil . getColumnIndexOrThrow ( cursor , \"id\" ); final int _cursorIndexOfName = CursorUtil . getColumnIndexOrThrow ( cursor , \"name\" ); final List < Cheese > _res = new ArrayList < Cheese > ( cursor . getCount ()); while ( cursor . moveToNext ()) { final Cheese _item ; final int _tmpId ; _tmpId = cursor . getInt ( _cursorIndexOfId ); final String _tmpName ; _tmpName = cursor . getString ( _cursorIndexOfName ); _item = new Cheese ( _tmpId , _tmpName ); _res . add ( _item ); } return _res ; } }; } }; } CheeseViewModel \u901a\u8fc7 DataSource \u6765\u8fd4\u56de LiveData<PagedList<Value>> // \u4f20\u5165\u4e00\u4e2aConfig\uff0c\u4e3b\u8981\u914d\u7f6e \u6ca1\u6709\u7684\u6570\u91cf\uff0c\u5927\u5c0f\u7b49 val allCheeses = dao . allCheesesByName (). toLiveData ( Config ( pageSize = 60 , enablePlaceholders = true , maxSize = 200 )) // Config \u662f\u901a\u8fc7 PagedList.Config.Builder \u6784\u5efa\u51fa\u6765\u7684 fun Config ( pageSize : Int , prefetchDistance : Int = pageSize , enablePlaceholders : Boolean = true , initialLoadSizeHint : Int = pageSize * PagedList . Config . Builder . DEFAULT_INITIAL_PAGE_MULTIPLIER , maxSize : Int = PagedList . Config . MAX_SIZE_UNBOUNDED ): PagedList . Config { return PagedList . Config . Builder () . setPageSize ( pageSize ) . setPrefetchDistance ( prefetchDistance ) . setEnablePlaceholders ( enablePlaceholders ) . setInitialLoadSizeHint ( initialLoadSizeHint ) . setMaxSize ( maxSize ) . build () } LimitOffsetDataSource .toLiveData() \u76f4\u63a5\u5e26\u5165\u5b9e\u73b0\u7c7b\u6765\u5206\u6790 fun < Key , Value > DataSource . Factory < Key , Value > . toLiveData ( config : PagedList . Config , initialLoadKey = null , boundaryCallback = null , fetchExecutor : Executor = ArchTaskExecutor . getIOThreadExecutor () ): LiveData < PagedList < Value >> { return LivePagedListBuilder ( this , config ) . setInitialLoadKey ( initialLoadKey ) . setBoundaryCallback ( boundaryCallback ) . setFetchExecutor ( fetchExecutor ) . build () } // \u7ecf\u8fc7\u4e0b\u9762\u4e00\u4e9b\u5217\u7684\u5c01\u88c5\u4e3b\u8981\u505a \u4e24\u4e2a\u4e8b\u60c5 // 1. \u521b\u5efa LiveData // 2. \u521b\u5efa PagedList LivePagedListBuilder . build () LivePagedListBuilder . create ( key , PagedList . Config , PagedList . BoundaryCallback , DataSource . Factory < Key , Value > , Executor , Executor ) // LiveData \u521b\u5efa : LiveData = new ComputableLiveData<PagedList<Value>>() // PagedList = PagedList.Builder<>().build() // PagedList \u521b\u5efa : PagedList = PagedList.Builder<>().create(DataSource<K, T>, Executor,Executor, BoundaryCallback, Config, Key ) PagedList \u5230\u5e95\u600e\u4e48\u628a\u6570\u636e add \u5230\u81ea\u5df1\u7684\u5217\u8868\u7684\u5462\uff1f \u5728 PagedList.create() \u4e2d \u6700\u7ec8\u8fd4\u56de\u7684\u662f ContiguousPagedList \u6216\u8005 TiledPagedList \u901a\u8fc7\u6784\u9020\u6765\u521b\u5efa\u7684\u5bf9\u8c61\u3002 // ContiguousDataSource \u4e0e PositionalDataSource \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5e26\u5165 LimitOffsetDataSource \u6765\u5206\u6790 ContiguousDataSource < K , T > contigDataSource = ( ContiguousDataSource < K , T > ) dataSource ; return new ContiguousPagedList <> ( contigDataSource , notifyExecutor , fetchExecutor , boundaryCallback , config , key , lastLoad ); return new TiledPagedList <> (( PositionalDataSource < T > ) dataSource , notifyExecutor , fetchExecutor , boundaryCallback , config , ( key != null ) ? ( Integer ) key : 0 ); \u901a\u8fc7\u5206\u6790\u53ef\u77e5\uff0c\u6700\u540e\u8c03\u7528\u5230\u8fd9\u91cc\u8fdb\u884c\u4e86 \u628a \u6570\u636e\u7684\u6570\u636e \u88c5\u8f7d\u5230\u4e86 List \uff0c\u5e76\u4e14\u901a\u8fc7 Callback \u8fd4\u56de\u4e86\u3002 LimitOffsetDataSource.loadInitial(LoadInitialParams params,LoadInitialCallback<T> callback) LoadInitialCallbackImpl.OnResult() @Override public void onResult ( @NonNull List < T > data , int position , int totalCount ) { //... some code if ( mCountingEnabled ) { int trailingUnloadedCount = totalCount - position - data . size (); mCallbackHelper . dispatchResultToReceiver ( new PageResult <> ( data , position , trailingUnloadedCount , 0 )); } else { // Only occurs when wrapped as contiguous mCallbackHelper . dispatchResultToReceiver ( new PageResult <> ( data , position )); } //... some code } // LoadCallbackHelper.dispatchOnCurrentThread() void dispatchOnCurrentThread ( @Nullable PageResult < T > result , @Nullable Throwable error , boolean retryable ) { if ( result != null ) { mReceiver . onPageResult ( mResultType , result ); } else { mReceiver . onPageError ( mResultType , error , retryable ); } } ContiguousPagedList.mReceiver or TiledPagedList.mReceiver \u6700\u7ec8\u7684 mReceiver \u662f\u5b9a\u4e49\u5728\u8fd9\u4e24\u4e2a\u5b9e\u73b0\u7c7b\u91cc\u9762\u7684 \u53ef\u4ee5\u770b\u5230\u5728\u8fd9\u91cc\u5bf9\u5217\u8868 \u8fdb\u884c\u4e86\u6dfb\u52a0\u64cd\u4f5c\uff0c\u4ee5\u53ca PagedList \u4e00\u7cfb\u5217\u72b6\u6001\u7684\u7ba1\u7406\u3002 \u56de\u7b54\u6700\u5f00\u59cb\u7684\u51e0\u4e2a\u95ee\u9898 1. \u901a\u8fc7\u5206\u6790\u770b\u5230\uff0c\u4ee5\u524d\u81ea\u5df1\u5199\u7684\u5237\u65b0\u4e3b\u8981\u662f\u901a\u8fc7 \u5728 View \u5c42\u8fdb\u884c\u63a7\u5236\uff0c\u4ee5\u53ca\u52a0\u8f7d\u4e8b\u4ef6\u7684\u5904\u7406 \u52a0\u8f7d\uff0c\u5237\u65b0\u4ee5\u53ca\u72b6\u6001\u5904\u7406\u3002 \u901a\u8fc7 PagedList \u53ef\u4ee5\u770b\u5230 \u8fd9\u4e9b\u52a0\u8f7d\u903b\u8f91\u5168\u90e8\u653e\u5230\u4e86 M \u5c42\uff0c\u6570\u636e\u53d8\u5316\u540e\u81ea\u52a8\u4f1a\u53bb\u66f4\u65b0\uff08\u53ea\u7528\u4e8eRoom\u672c\u5730\u6570\u636e\u5e93\uff09 \u5728\u6211\u7684\u7406\u89e3\u770b\u6765 \u5b83\u89e3\u51b3\u7684\u4e3b\u8981\u662f\u7ed3\u5408 MVVM\u6846\u67b6\u800c\u5bf9M\u5c42\u5728\u6709\u6279\u91cf\u52a0\u8f7d\u7684\u65f6\u5019\u7528\u6765\u505a\u5206\u9875\u5904\u7406\uff0c\u597d\u5904\u6700\u660e\u663e\u7684\u5c31\u662f\u548c\u672c\u5730\u6570\u636e\u5e93\u914d\u5408\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u6613\u4e8e\u6269\u5f20\uff0c\u5982\u679c\u4f60\u5199\u8fc7 \u5206\u9875\u903b\u8f91\uff0c\u6bcf\u4e2a\u9875\u9762\u90fd\u662f\u5199\u4e00\u6b21 \u7b2c\u4e00\u9875 \u7ed3\u675f\u5237\u65b0\uff0c\u628a\u6570\u636e\u52a0\u5230\u5934\u90e8\uff0c\u4e0d\u662f\u7b2c\u4e00\u9875\u628a\u6570\u636e\u52a0\u5230 \u5217\u8868\u5c3e\u90e8\uff0c\u7ed3\u675f\u52a0\u8f7d\u66f4\u591a\uff0c\u8fd9\u4e2a\u4e5f\u8bb8\u4f1a\u6210\u4e3a\u4f60\u7684\u83dc\u3002","title":"Paging"},{"location":"00Program/Android/Paging/#paging","text":"Google \u6587\u6863 https://developer.android.google.cn/topic/libraries/architecture/paging Github\u9879\u76ee\uff1a https://github.com/android/architecture-components-samples/tree/master/PagingSample Gitee\u9879\u76ee\uff1a https://gitee.com/pengqinping/architecture-components-samples/tree/master/PagingSample (developer \u6539 maven repo \u4e3a ali ) \u5f00\u59cb\u524d\u5148\u95ee\u81ea\u5df1\u51e0\u4e2a\u95ee\u9898\uff1a 1. \u5b98\u65b9\u4ecb\u7ecd\u8bf4\u662f\u7528\u6765\u505a\u6309\u9700\u52a0\u8f7d\uff1f\u90a3\u4e48\u548c\u4ee5\u524d\u7684 \u81ea\u5df1\u5199\u7684\u5206\u9875\u52a0\u8f7d(\u6839\u636e\u9875\u9762\u5224\u65ad\u6570\u636e\u662f\u52a0\u5728data\u5217\u8868\u7684\u5934\u8fd8\u662f\u5c3e)\u6709\u4ec0\u4e48\u533a\u522b 2. Paging \u89e3\u51b3\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f \u4f18\u52bf\u662f\u4ec0\u4e48\uff1f","title":"Paging"},{"location":"00Program/Android/Paging/#_1","text":"// \u7ee7\u627f\u4e8e\u5217\u8868\uff0c\u90a3\u5c31\u662f\u5f53\u505a data\u5217\u8868\u7528 // \u52a0\u5165\u4e86 \u5237\u65b0\uff0c\u5f00\u59cb\uff0c\u4ecb\u7ecd \u4e09\u79cd\u7c7b\u578b\uff0c\u6bcf\u79cd\u7c7b\u578b\u90fd\u5bf9\u5e94\u4e0b\u9762\u7684\u4e94\u79cd\u72b6\u6001 // \u8fd9\u4e0d\u662f\u5206\u9875\u719f\u6089\u7684\u903b\u8f91\u5417\uff0c\u53ea\u4e0d\u8fc7\u4ee5\u524d\u662f\u5c01\u88c5\u5728View\u5c42\u7684\uff0c public abstract class PagedList < T > extends AbstractList < T > { public enum LoadType { REFRESH , START , END } public enum LoadState { IDLE , LOADING , DONE , ERROR , RETRYABLE_ERROR } } // \u6784\u9020\u5668 PagedList ( @NonNull PagedStorage < T > storage , @NonNull Executor mainThreadExecutor , @NonNull Executor backgroundThreadExecutor , @Nullable BoundaryCallback < T > boundaryCallback , @NonNull Config config ) { mStorage = storage ; // ContiguousPageList \u548c TiledPagedList \u9ed8\u8ba4\u503c\u90fd\u662f new PagedStorage<V>() mMainThreadExecutor = mainThreadExecutor ; // ui\u7ebf\u7a0b\u6c60 \u9ed8\u8ba4\u503c ArchTaskExecutor.getMainThreadExecutor() mBackgroundThreadExecutor = backgroundThreadExecutor ; // \u8017\u65f6\u7ebf\u7a0b\u6c60 \u9ed8\u8ba4\u503c\uff1a ArchTaskExecutor.getIOThreadExecutor() mBoundaryCallback = boundaryCallback ; // \u56de\u8c03 \u4f20\u5165 mConfig = config ; // \u5206\u9875\u914d\u7f6e \u4e00\u822c\u662f\u4f20\u5165 mRequiredRemainder = mConfig . prefetchDistance * 2 + mConfig . pageSize ; }","title":"\u4ee3\u7801\u5206\u6790"},{"location":"00Program/Android/Paging/#pagingsample","text":"\u770b\u4e86\u57fa\u672c\u7684\u7ed3\u6784\uff0c\u63a5\u4e0b\u6765 \u770b\u5982\u5982\u4f55\u4f7f\u7528\uff0c\u65e2\u7136\u662f Pagin \u662fM\u5c42\uff0c\u90a3\u4e48\u5fc5\u5b9a\u662f\u5728 ViewModel \u91cc\u9762\u4f7f\u7528\uff0c\u914d\u5408 LiveData \u6765\u5b9e\u73b0\u53ef\u89c2\u5bdf \u5b9e\u65f6\u5237\u65b0 \u5148\u770b\u6570\u636e\u6e90 @Query ( \"SELECT * FROM Cheese ORDER BY name COLLATE NOCASE ASC\" ) fun allCheesesByName (): DataSource . Factory < Int , Cheese > \u4ed6\u6ca1\u6709\u76f4\u63a5\u8fd4\u56de PagedList \u800c\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a DataSource.Factory \uff0c \u5728 LivePagedList \u6269\u5c55\u4e86\u4e00\u4e2a DataSource.Factory<Key, Value>.toLiveData(config...) \u7684\u51fd\u6570 \u7528\u6765\u8fd4\u56de LiveData \u7c7b\u578b\u7684 PagedList CheeseDao_Impl.java \u4e2d\u5177\u4f53\u7684 DataSource.Factory \u5b9e\u73b0\u7c7b \u76f4\u63a5 new \u4e86 \u4e00\u4e2a\u533f\u540d\u7684\u62bd\u8c61\u6765 \u6765\u8fd4\u56de\u4e00\u4e2a LimitOffsetDataSource<Cheese> @Override public DataSource . Factory < Integer , Cheese > allCheesesByName () { final String _sql = \"SELECT * FROM Cheese ORDER BY name COLLATE NOCASE ASC\" ; final RoomSQLiteQuery _statement = RoomSQLiteQuery . acquire ( _sql , 0 ); return new DataSource . Factory < Integer , Cheese > () { @Override public LimitOffsetDataSource < Cheese > create () { return new LimitOffsetDataSource < Cheese > ( __db , _statement , false , \"Cheese\" ) { @Override protected List < Cheese > convertRows ( Cursor cursor ) { final int _cursorIndexOfId = CursorUtil . getColumnIndexOrThrow ( cursor , \"id\" ); final int _cursorIndexOfName = CursorUtil . getColumnIndexOrThrow ( cursor , \"name\" ); final List < Cheese > _res = new ArrayList < Cheese > ( cursor . getCount ()); while ( cursor . moveToNext ()) { final Cheese _item ; final int _tmpId ; _tmpId = cursor . getInt ( _cursorIndexOfId ); final String _tmpName ; _tmpName = cursor . getString ( _cursorIndexOfName ); _item = new Cheese ( _tmpId , _tmpName ); _res . add ( _item ); } return _res ; } }; } }; } CheeseViewModel \u901a\u8fc7 DataSource \u6765\u8fd4\u56de LiveData<PagedList<Value>> // \u4f20\u5165\u4e00\u4e2aConfig\uff0c\u4e3b\u8981\u914d\u7f6e \u6ca1\u6709\u7684\u6570\u91cf\uff0c\u5927\u5c0f\u7b49 val allCheeses = dao . allCheesesByName (). toLiveData ( Config ( pageSize = 60 , enablePlaceholders = true , maxSize = 200 )) // Config \u662f\u901a\u8fc7 PagedList.Config.Builder \u6784\u5efa\u51fa\u6765\u7684 fun Config ( pageSize : Int , prefetchDistance : Int = pageSize , enablePlaceholders : Boolean = true , initialLoadSizeHint : Int = pageSize * PagedList . Config . Builder . DEFAULT_INITIAL_PAGE_MULTIPLIER , maxSize : Int = PagedList . Config . MAX_SIZE_UNBOUNDED ): PagedList . Config { return PagedList . Config . Builder () . setPageSize ( pageSize ) . setPrefetchDistance ( prefetchDistance ) . setEnablePlaceholders ( enablePlaceholders ) . setInitialLoadSizeHint ( initialLoadSizeHint ) . setMaxSize ( maxSize ) . build () } LimitOffsetDataSource .toLiveData() \u76f4\u63a5\u5e26\u5165\u5b9e\u73b0\u7c7b\u6765\u5206\u6790 fun < Key , Value > DataSource . Factory < Key , Value > . toLiveData ( config : PagedList . Config , initialLoadKey = null , boundaryCallback = null , fetchExecutor : Executor = ArchTaskExecutor . getIOThreadExecutor () ): LiveData < PagedList < Value >> { return LivePagedListBuilder ( this , config ) . setInitialLoadKey ( initialLoadKey ) . setBoundaryCallback ( boundaryCallback ) . setFetchExecutor ( fetchExecutor ) . build () } // \u7ecf\u8fc7\u4e0b\u9762\u4e00\u4e9b\u5217\u7684\u5c01\u88c5\u4e3b\u8981\u505a \u4e24\u4e2a\u4e8b\u60c5 // 1. \u521b\u5efa LiveData // 2. \u521b\u5efa PagedList LivePagedListBuilder . build () LivePagedListBuilder . create ( key , PagedList . Config , PagedList . BoundaryCallback , DataSource . Factory < Key , Value > , Executor , Executor ) // LiveData \u521b\u5efa : LiveData = new ComputableLiveData<PagedList<Value>>() // PagedList = PagedList.Builder<>().build() // PagedList \u521b\u5efa : PagedList = PagedList.Builder<>().create(DataSource<K, T>, Executor,Executor, BoundaryCallback, Config, Key ) PagedList \u5230\u5e95\u600e\u4e48\u628a\u6570\u636e add \u5230\u81ea\u5df1\u7684\u5217\u8868\u7684\u5462\uff1f \u5728 PagedList.create() \u4e2d \u6700\u7ec8\u8fd4\u56de\u7684\u662f ContiguousPagedList \u6216\u8005 TiledPagedList \u901a\u8fc7\u6784\u9020\u6765\u521b\u5efa\u7684\u5bf9\u8c61\u3002 // ContiguousDataSource \u4e0e PositionalDataSource \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5e26\u5165 LimitOffsetDataSource \u6765\u5206\u6790 ContiguousDataSource < K , T > contigDataSource = ( ContiguousDataSource < K , T > ) dataSource ; return new ContiguousPagedList <> ( contigDataSource , notifyExecutor , fetchExecutor , boundaryCallback , config , key , lastLoad ); return new TiledPagedList <> (( PositionalDataSource < T > ) dataSource , notifyExecutor , fetchExecutor , boundaryCallback , config , ( key != null ) ? ( Integer ) key : 0 ); \u901a\u8fc7\u5206\u6790\u53ef\u77e5\uff0c\u6700\u540e\u8c03\u7528\u5230\u8fd9\u91cc\u8fdb\u884c\u4e86 \u628a \u6570\u636e\u7684\u6570\u636e \u88c5\u8f7d\u5230\u4e86 List \uff0c\u5e76\u4e14\u901a\u8fc7 Callback \u8fd4\u56de\u4e86\u3002 LimitOffsetDataSource.loadInitial(LoadInitialParams params,LoadInitialCallback<T> callback) LoadInitialCallbackImpl.OnResult() @Override public void onResult ( @NonNull List < T > data , int position , int totalCount ) { //... some code if ( mCountingEnabled ) { int trailingUnloadedCount = totalCount - position - data . size (); mCallbackHelper . dispatchResultToReceiver ( new PageResult <> ( data , position , trailingUnloadedCount , 0 )); } else { // Only occurs when wrapped as contiguous mCallbackHelper . dispatchResultToReceiver ( new PageResult <> ( data , position )); } //... some code } // LoadCallbackHelper.dispatchOnCurrentThread() void dispatchOnCurrentThread ( @Nullable PageResult < T > result , @Nullable Throwable error , boolean retryable ) { if ( result != null ) { mReceiver . onPageResult ( mResultType , result ); } else { mReceiver . onPageError ( mResultType , error , retryable ); } } ContiguousPagedList.mReceiver or TiledPagedList.mReceiver \u6700\u7ec8\u7684 mReceiver \u662f\u5b9a\u4e49\u5728\u8fd9\u4e24\u4e2a\u5b9e\u73b0\u7c7b\u91cc\u9762\u7684 \u53ef\u4ee5\u770b\u5230\u5728\u8fd9\u91cc\u5bf9\u5217\u8868 \u8fdb\u884c\u4e86\u6dfb\u52a0\u64cd\u4f5c\uff0c\u4ee5\u53ca PagedList \u4e00\u7cfb\u5217\u72b6\u6001\u7684\u7ba1\u7406\u3002 \u56de\u7b54\u6700\u5f00\u59cb\u7684\u51e0\u4e2a\u95ee\u9898 1. \u901a\u8fc7\u5206\u6790\u770b\u5230\uff0c\u4ee5\u524d\u81ea\u5df1\u5199\u7684\u5237\u65b0\u4e3b\u8981\u662f\u901a\u8fc7 \u5728 View \u5c42\u8fdb\u884c\u63a7\u5236\uff0c\u4ee5\u53ca\u52a0\u8f7d\u4e8b\u4ef6\u7684\u5904\u7406 \u52a0\u8f7d\uff0c\u5237\u65b0\u4ee5\u53ca\u72b6\u6001\u5904\u7406\u3002 \u901a\u8fc7 PagedList \u53ef\u4ee5\u770b\u5230 \u8fd9\u4e9b\u52a0\u8f7d\u903b\u8f91\u5168\u90e8\u653e\u5230\u4e86 M \u5c42\uff0c\u6570\u636e\u53d8\u5316\u540e\u81ea\u52a8\u4f1a\u53bb\u66f4\u65b0\uff08\u53ea\u7528\u4e8eRoom\u672c\u5730\u6570\u636e\u5e93\uff09 \u5728\u6211\u7684\u7406\u89e3\u770b\u6765 \u5b83\u89e3\u51b3\u7684\u4e3b\u8981\u662f\u7ed3\u5408 MVVM\u6846\u67b6\u800c\u5bf9M\u5c42\u5728\u6709\u6279\u91cf\u52a0\u8f7d\u7684\u65f6\u5019\u7528\u6765\u505a\u5206\u9875\u5904\u7406\uff0c\u597d\u5904\u6700\u660e\u663e\u7684\u5c31\u662f\u548c\u672c\u5730\u6570\u636e\u5e93\u914d\u5408\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u6613\u4e8e\u6269\u5f20\uff0c\u5982\u679c\u4f60\u5199\u8fc7 \u5206\u9875\u903b\u8f91\uff0c\u6bcf\u4e2a\u9875\u9762\u90fd\u662f\u5199\u4e00\u6b21 \u7b2c\u4e00\u9875 \u7ed3\u675f\u5237\u65b0\uff0c\u628a\u6570\u636e\u52a0\u5230\u5934\u90e8\uff0c\u4e0d\u662f\u7b2c\u4e00\u9875\u628a\u6570\u636e\u52a0\u5230 \u5217\u8868\u5c3e\u90e8\uff0c\u7ed3\u675f\u52a0\u8f7d\u66f4\u591a\uff0c\u8fd9\u4e2a\u4e5f\u8bb8\u4f1a\u6210\u4e3a\u4f60\u7684\u83dc\u3002","title":"PagingSample \u9879\u76ee\u89e3\u8bfb"},{"location":"00Program/Android/ViewBinding/","tags":["ViewBinding"],"text":"DataBinding \u00b6 Google\u6587\u6863 https://developer.android.google.cn/topic/libraries/data-binding \u9879\u76ee\u6d89\u53ca\u4ee3\u7801\u5e93 https://gitee.com/pengqinping/architecture-components-samples/tree/master/BasicSample dataBinding https://gitee.com/pengqinping/databinding-samples databinding \u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355 \u00b6 1. app \u5f00\u542f dataBinding \u652f\u6301 buidle.gradle \u00b6 android { dataBinding { enabled = true } } 2. \u5b9a\u4e49xml\u6587\u4ef6\u652f\u6301dataBinding \u4ee5list_fragment.xml \u4e3a\u4f8b \u00b6 <!-- \u5173\u952e\u662flayout \u5305\u88f9\uff0c\u53ea\u6709Layout\u5305\u88f9 DataBinding\u624d\u4f1a\u53bb\u8bc6\u522b --> <layout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" > <data> <variable name= \"isLoading\" type= \"boolean\" /> </data> <!-- ... somecode --> <androidx.appcompat.widget.AppCompatEditText android:id= \"@+id/products_search_box\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" android:hint= \"@string/search_products_hint\" /> <ImageButton android:id= \"@+id/products_search_btn\" android:layout_width= \"48dp\" android:layout_height= \"48dp\" android:contentDescription= \"@string/cd_search_products\" app:srcCompat= \"@drawable/ic_search_black_24dp\" /> <!-- ... somecode --> </layout> 3. dataBinding \u5de5\u5177\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019 ListFragmentBinding.java \u6587\u4ef6 \u91cc\u9762\u6709\u63cf\u8ff0 \u5e03\u5c40\u7684\u4ee3\u7801 \u00b6 \u76ee\u5f55 app/buidl/generated/data_binding_base_class_source_out/{debug}/out/{packagname}/databinding/xxx.java //\u5217\u4e3e\u4e00\u5c0f\u90e8\u5206 public abstract class ListFragmentBinding extends ViewDataBinding { @NonNull public final AppCompatEditText productsSearchBox ; @NonNull public final ImageButton productsSearchBtn ; // ... some code 4. \u5728 fragment \u5b9e\u4f8b\u5316\u5bf9\u8c61 , \u5e76\u4e14\u4f7f\u7528 \u00b6 private ListFragmentBinding mBinding ; @Nullable @Override public View onCreateView ( @NonNull LayoutInflater inflater , @Nullable ViewGroup container , @Nullable Bundle savedInstanceState ) { mBinding = DataBindingUtil . inflate ( inflater , R . layout . list_fragment , container , false ); //... some code return mBinding . getRoot (); } @Override public void onViewCreated ( @NonNull View view , @Nullable Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ); // \u901a\u8fc7 binding \u5bf9\u8c61\u76f4\u63a5\u5f15\u7528 mBinding . productsSearchBtn . setOnClickListener ( v -> { Editable query = mBinding . productsSearchBox . getText (); viewModel . setQuery ( query ); }); } \u5728\u5e03\u5c40\u91cc\u9762\u5199Viewmodel\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\uff0c\u5199\u8fc7 vue angularjs \u524d\u7aef\u7684 \u8fd9\u4e9b\u5f88\u597d\u7406\u89e3\uff0c \u6570\u636e\u7ed1\u5b9a\u7684\u6982\u5ff5 BaseObservableField \u548c ViewModel \u5728 \u6570\u636e\u7ed1\u5b9a\u4e2d\u7684\u5f15\u7528 \u00b6 \u9879\u76ee\u5730\u5740 https://gitee.com/pengqinping/databinding-samples/tree/master 1. \u7528ObservableInt\u6f14\u793a \u00b6 a.\u5728Activity\u5b9a\u4e49 ObservableInt data class ObservableFieldProfile ( val name : String , val lastName : String , val likes : ObservableInt ) private val observableFieldProfile = ObservableFieldProfile ( \"Ada\" , \"Lovelace\" , ObservableInt ( 0 )) b.\u5728\u5e03\u5c40\u5b9a\u4e49\u5f15\u7528 <layout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" > <data> <import type= \"com.example.android.databinding.basicsample.R\" /> <import type= \"com.example.android.databinding.basicsample.util.ConverterUtil\" /> <!-- \u5b9a\u4e49\u540d\u8bcd\u548c\u7c7b\u578b --> <variable name= \"user\" type= \"com.example.android.databinding.basicsample.data.ObservableFieldProfile\" /> <!-- \u8bbe\u7f6e\u6587\u672c --> <xml android:text= \"@{user.name}\" /> <!-- \u8bbe\u7f6e\u8868\u8fbe\u5f0f --> <xml app:srcCompat= \"@{user.likes &lt; 4 ? R.drawable.ic_person_black_96dp : R.drawable.ic_whatshot_black_96dp }\" /> <!-- \u7c7b\u578b\u8f6c\u6362 --> <xml android:text= \"@{Integer.toString(user.likes)}\" /> <!-- \u4f1a\u81ea\u52a8\u8c03\u7528 Activity \u4e2d\u7684 fun OnLink \u51fd\u6570\uff0cGoogle \u4e0d\u63a8\u8350\u8fd9\u4e48\u5e72\uff0c\u6240\u4ee5\u6700\u597d\u4f7f\u7528ViewModel --> <button android:onClick= \"onLike\" /> </data> C. \u7ed1\u5b9a\u53ca\u8d4b\u503c val binding : ObservableFieldProfileBinding = DataBindingUtil . setContentView ( this , R . layout . observable_field_profile ) binding . user = observableFieldProfile 1.\u8fd9\u4e2aBaseObservableField\u53ea\u9002\u5408\u7b80\u5355\u903b\u8f91\uff0c\u52a0\u5165\u5224\u65ad\u6bd4\u8f83\u590d\u6742\u5c31\u5f88\u96be\u53d7\u4e86 2.\u666e\u901a\u7684BaseObservableFiled \u5bf9\u8c61\u6539\u53d8\u503c\u662f\u9700\u8981\u624b\u52a8\u53bbset\u66f4\u65b0\u7684 2. ViewModel+LiveData\u6f14\u793a \u00b6 \u770b\u4e86ViewModel \u4f60\u53ef\u80fd\u4f1a\u559c\u6b22\u4e0a\u4f7f\u7528\u8fd9\u4e2a\u4e1c\u897f * a. \u5b9a\u4e49ViewModel \u548c LiveData\u6f14\u793a class ProfileLiveDataViewModel : ViewModel () { private val _name = MutableLiveData ( \"Ada\" ) // LiveData \uff0c\u6570\u636e\u53d1\u751f\u53d8\u5316\u4f1a\u81ea\u52a8\u66f4\u65b0\u5e03\u5c40\uff0c\u4e0d\u7528\u5728\u91cd\u65b0\u62ffView \u53bbset\u6570\u636e private val _lastName = MutableLiveData ( \"Lovelace\" ) private val _likes = MutableLiveData ( 0 ) // \u8fd9\u91cc\u8f6c\u4e86\u4e00\u6b21\uff0c\u4e3b\u8981\u662f\u907f\u514d \u5728\u5176\u4ed6\u5730\u65b9\u64cd\u4f5c \u8fd9\u8fb9\u53d8\u91cf\uff0c\u5bf9\u5916\u81ea\u63d0\u4f9b \u53ef\u8bfb\u64cd\u4f5c\uff0c\u5185\u90e8\u5b9e\u73b0\u53ef\u5199\u64cd\u4f5c val name : LiveData < String > = _name val lastName : LiveData < String > = _lastName val likes : LiveData < Int > = _likes // popularity is exposed as LiveData using a Transformation instead of a @Bindable property. // \u6570\u636e\u8f6c\u6362 val popularity : LiveData < Popularity > = Transformations . map ( _likes ) { when { it > 9 -> Popularity . STAR it > 4 -> Popularity . POPULAR else -> Popularity . NORMAL } } // xml \u4e2d \u51fd\u6570\u8c03\u7528 fun onLike () { _likes . value = ( _likes . value ?: 0 ) + 1 } } b. \u5728\u5e03\u5c40\u4e2d\u5f15\u5165ViewModel <data> <variable name= \"viewmodel\" type= \"com.example.android.databinding.basicsample.data.ProfileLiveDataViewModel\" /> </data> <!-- \u53d8\u91cf --> <xml android:text= \"@{viewmodel.lastName}\" /> <!-- \u4e8b\u4ef6 --> <xml android:onClick= \"@{() -> viewmodel.onLike()}\" /> c. \u5728Activity\u4e2d\u7ed1\u5b9a // Obtain binding val binding : ViewmodelProfileBinding = DataBindingUtil . setContentView ( this , R . layout . viewmodel_profile ) // Bind layout with ViewModel binding . viewmodel = viewModel // LiveData needs the lifecycle owner binding . lifecycleOwner = this \u5b98\u65b9\u8fd8\u4ecb\u7ecd\u4e86\u4e00\u79cd \u66ff\u6362LiveData \u65b9\u5f0f\uff0c @Bindable \u00b6 https://developer.android.google.cn/topic/libraries/data-binding/observability","title":"ViewBinding"},{"location":"00Program/Android/ViewBinding/#databinding","text":"Google\u6587\u6863 https://developer.android.google.cn/topic/libraries/data-binding \u9879\u76ee\u6d89\u53ca\u4ee3\u7801\u5e93 https://gitee.com/pengqinping/architecture-components-samples/tree/master/BasicSample dataBinding https://gitee.com/pengqinping/databinding-samples","title":"DataBinding"},{"location":"00Program/Android/ViewBinding/#databinding_1","text":"","title":"databinding \u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355"},{"location":"00Program/Android/ViewBinding/#1-app-databinding-buidlegradle","text":"android { dataBinding { enabled = true } }","title":"1. app \u5f00\u542f dataBinding \u652f\u6301 buidle.gradle"},{"location":"00Program/Android/ViewBinding/#2-xmldatabinding-list_fragmentxml","text":"<!-- \u5173\u952e\u662flayout \u5305\u88f9\uff0c\u53ea\u6709Layout\u5305\u88f9 DataBinding\u624d\u4f1a\u53bb\u8bc6\u522b --> <layout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" > <data> <variable name= \"isLoading\" type= \"boolean\" /> </data> <!-- ... somecode --> <androidx.appcompat.widget.AppCompatEditText android:id= \"@+id/products_search_box\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" android:hint= \"@string/search_products_hint\" /> <ImageButton android:id= \"@+id/products_search_btn\" android:layout_width= \"48dp\" android:layout_height= \"48dp\" android:contentDescription= \"@string/cd_search_products\" app:srcCompat= \"@drawable/ic_search_black_24dp\" /> <!-- ... somecode --> </layout>","title":"2. \u5b9a\u4e49xml\u6587\u4ef6\u652f\u6301dataBinding \u4ee5list_fragment.xml \u4e3a\u4f8b"},{"location":"00Program/Android/ViewBinding/#3-databinding-listfragmentbindingjava","text":"\u76ee\u5f55 app/buidl/generated/data_binding_base_class_source_out/{debug}/out/{packagname}/databinding/xxx.java //\u5217\u4e3e\u4e00\u5c0f\u90e8\u5206 public abstract class ListFragmentBinding extends ViewDataBinding { @NonNull public final AppCompatEditText productsSearchBox ; @NonNull public final ImageButton productsSearchBtn ; // ... some code","title":"3. dataBinding \u5de5\u5177\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019 ListFragmentBinding.java \u6587\u4ef6 \u91cc\u9762\u6709\u63cf\u8ff0 \u5e03\u5c40\u7684\u4ee3\u7801"},{"location":"00Program/Android/ViewBinding/#4-fragment","text":"private ListFragmentBinding mBinding ; @Nullable @Override public View onCreateView ( @NonNull LayoutInflater inflater , @Nullable ViewGroup container , @Nullable Bundle savedInstanceState ) { mBinding = DataBindingUtil . inflate ( inflater , R . layout . list_fragment , container , false ); //... some code return mBinding . getRoot (); } @Override public void onViewCreated ( @NonNull View view , @Nullable Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ); // \u901a\u8fc7 binding \u5bf9\u8c61\u76f4\u63a5\u5f15\u7528 mBinding . productsSearchBtn . setOnClickListener ( v -> { Editable query = mBinding . productsSearchBox . getText (); viewModel . setQuery ( query ); }); } \u5728\u5e03\u5c40\u91cc\u9762\u5199Viewmodel\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\uff0c\u5199\u8fc7 vue angularjs \u524d\u7aef\u7684 \u8fd9\u4e9b\u5f88\u597d\u7406\u89e3\uff0c \u6570\u636e\u7ed1\u5b9a\u7684\u6982\u5ff5","title":"4. \u5728 fragment \u5b9e\u4f8b\u5316\u5bf9\u8c61 , \u5e76\u4e14\u4f7f\u7528"},{"location":"00Program/Android/ViewBinding/#baseobservablefield-viewmodel","text":"\u9879\u76ee\u5730\u5740 https://gitee.com/pengqinping/databinding-samples/tree/master","title":"BaseObservableField \u548c ViewModel \u5728 \u6570\u636e\u7ed1\u5b9a\u4e2d\u7684\u5f15\u7528"},{"location":"00Program/Android/ViewBinding/#1-observableint","text":"a.\u5728Activity\u5b9a\u4e49 ObservableInt data class ObservableFieldProfile ( val name : String , val lastName : String , val likes : ObservableInt ) private val observableFieldProfile = ObservableFieldProfile ( \"Ada\" , \"Lovelace\" , ObservableInt ( 0 )) b.\u5728\u5e03\u5c40\u5b9a\u4e49\u5f15\u7528 <layout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" > <data> <import type= \"com.example.android.databinding.basicsample.R\" /> <import type= \"com.example.android.databinding.basicsample.util.ConverterUtil\" /> <!-- \u5b9a\u4e49\u540d\u8bcd\u548c\u7c7b\u578b --> <variable name= \"user\" type= \"com.example.android.databinding.basicsample.data.ObservableFieldProfile\" /> <!-- \u8bbe\u7f6e\u6587\u672c --> <xml android:text= \"@{user.name}\" /> <!-- \u8bbe\u7f6e\u8868\u8fbe\u5f0f --> <xml app:srcCompat= \"@{user.likes &lt; 4 ? R.drawable.ic_person_black_96dp : R.drawable.ic_whatshot_black_96dp }\" /> <!-- \u7c7b\u578b\u8f6c\u6362 --> <xml android:text= \"@{Integer.toString(user.likes)}\" /> <!-- \u4f1a\u81ea\u52a8\u8c03\u7528 Activity \u4e2d\u7684 fun OnLink \u51fd\u6570\uff0cGoogle \u4e0d\u63a8\u8350\u8fd9\u4e48\u5e72\uff0c\u6240\u4ee5\u6700\u597d\u4f7f\u7528ViewModel --> <button android:onClick= \"onLike\" /> </data> C. \u7ed1\u5b9a\u53ca\u8d4b\u503c val binding : ObservableFieldProfileBinding = DataBindingUtil . setContentView ( this , R . layout . observable_field_profile ) binding . user = observableFieldProfile 1.\u8fd9\u4e2aBaseObservableField\u53ea\u9002\u5408\u7b80\u5355\u903b\u8f91\uff0c\u52a0\u5165\u5224\u65ad\u6bd4\u8f83\u590d\u6742\u5c31\u5f88\u96be\u53d7\u4e86 2.\u666e\u901a\u7684BaseObservableFiled \u5bf9\u8c61\u6539\u53d8\u503c\u662f\u9700\u8981\u624b\u52a8\u53bbset\u66f4\u65b0\u7684","title":"1. \u7528ObservableInt\u6f14\u793a"},{"location":"00Program/Android/ViewBinding/#2-viewmodellivedata","text":"\u770b\u4e86ViewModel \u4f60\u53ef\u80fd\u4f1a\u559c\u6b22\u4e0a\u4f7f\u7528\u8fd9\u4e2a\u4e1c\u897f * a. \u5b9a\u4e49ViewModel \u548c LiveData\u6f14\u793a class ProfileLiveDataViewModel : ViewModel () { private val _name = MutableLiveData ( \"Ada\" ) // LiveData \uff0c\u6570\u636e\u53d1\u751f\u53d8\u5316\u4f1a\u81ea\u52a8\u66f4\u65b0\u5e03\u5c40\uff0c\u4e0d\u7528\u5728\u91cd\u65b0\u62ffView \u53bbset\u6570\u636e private val _lastName = MutableLiveData ( \"Lovelace\" ) private val _likes = MutableLiveData ( 0 ) // \u8fd9\u91cc\u8f6c\u4e86\u4e00\u6b21\uff0c\u4e3b\u8981\u662f\u907f\u514d \u5728\u5176\u4ed6\u5730\u65b9\u64cd\u4f5c \u8fd9\u8fb9\u53d8\u91cf\uff0c\u5bf9\u5916\u81ea\u63d0\u4f9b \u53ef\u8bfb\u64cd\u4f5c\uff0c\u5185\u90e8\u5b9e\u73b0\u53ef\u5199\u64cd\u4f5c val name : LiveData < String > = _name val lastName : LiveData < String > = _lastName val likes : LiveData < Int > = _likes // popularity is exposed as LiveData using a Transformation instead of a @Bindable property. // \u6570\u636e\u8f6c\u6362 val popularity : LiveData < Popularity > = Transformations . map ( _likes ) { when { it > 9 -> Popularity . STAR it > 4 -> Popularity . POPULAR else -> Popularity . NORMAL } } // xml \u4e2d \u51fd\u6570\u8c03\u7528 fun onLike () { _likes . value = ( _likes . value ?: 0 ) + 1 } } b. \u5728\u5e03\u5c40\u4e2d\u5f15\u5165ViewModel <data> <variable name= \"viewmodel\" type= \"com.example.android.databinding.basicsample.data.ProfileLiveDataViewModel\" /> </data> <!-- \u53d8\u91cf --> <xml android:text= \"@{viewmodel.lastName}\" /> <!-- \u4e8b\u4ef6 --> <xml android:onClick= \"@{() -> viewmodel.onLike()}\" /> c. \u5728Activity\u4e2d\u7ed1\u5b9a // Obtain binding val binding : ViewmodelProfileBinding = DataBindingUtil . setContentView ( this , R . layout . viewmodel_profile ) // Bind layout with ViewModel binding . viewmodel = viewModel // LiveData needs the lifecycle owner binding . lifecycleOwner = this","title":"2. ViewModel+LiveData\u6f14\u793a"},{"location":"00Program/Android/ViewBinding/#livedata-bindable","text":"https://developer.android.google.cn/topic/libraries/data-binding/observability","title":"\u5b98\u65b9\u8fd8\u4ecb\u7ecd\u4e86\u4e00\u79cd \u66ff\u6362LiveData \u65b9\u5f0f\uff0c @Bindable"},{"location":"00Program/Android/ViewModel/","tags":["ViewModel"],"text":"ViewModel \u662f\u600e\u6837\u88ab\u521b\u5efa\u7684\uff1f \u00b6 \u4ecb\u7ecd \u00b6 Google\u4ecb\u7ecd\uff1a https://developer.android.google.cn/topic/libraries/architecture/viewmodel Deprecated ViewModelProviders.of() \u8be5\u65b9\u6cd5\u8fc7\u671f\uff0c\u4f7f\u7528 new ViewModleProvider() \u6765\u66ff\u6362 ViewModelProvider Documents: https://developer.android.google.cn/reference/androidx/lifecycle/ViewModelProvider?hl=en architecutre \u9879\u76ee ViewModel \u521b\u5efa \u5206\u6790 \u00b6 ViewModel \u662f\u901a\u8fc7 ViewProvider \u521b\u5efa\u51fa\u6765\u7684 ViewModelProvider() \u00b6 // \u6784\u9020\u5668\u751f\u6210\u4e86\u4e24\u4e2a\u5bf9\u8c61\uff0c // Class\u7684newInstance \u6765\u521b\u5efa ViewModel\u5bf9\u8c61 fragment \u548c Activity \u8fd4\u56de\u7684\u65f6 SavedStateViewModelFactory \u7684\u5bf9\u8c61 private final Factory mFactory ; // \u7528\u6765\u5728Activity\u6216\u8005 Fragment \u7f13\u5b58 ViewModel\u7528\uff0c\u5982\u679c\u6709\u591a\u4e2a ViewModel \u5c31\u4f1a\u8fdb\u884c\u7f13\u5b58 private final ViewModelStore mViewModelStore ; // \u6784\u9020\u5668 public ViewModelProvider ( @NonNull ViewModelStoreOwner owner ) { this ( owner . getViewModelStore (), owner instanceof HasDefaultViewModelProviderFactory ? (( HasDefaultViewModelProviderFactory ) owner ). getDefaultViewModelProviderFactory () : NewInstanceFactory . getInstance ()); } * ViewModelStoreOwner \u63a5\u53e3 getViewModelStore \u7528\u6765\u8fd4\u56de ViewModelStore \u5bf9\u8c61\uff0c Fragment \u548c ComponentActivity \u4e2d\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3, * HasDefaultViewModelProviderFactory \u63a5\u53e3 getDefaultViewModelProviderFactory \u5c31\u8fd4\u56de\u4e86\u4e00\u4e2a factory , Fragment \u548c ComponentActivity \u4e2d\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3 * \u7531\u6b64\u53ef\u89c1ViewModel\u4e2d\u7684\u4e24\u4e2a\u4e1c\u897f\u5176\u5b9e\u90fd\u5728 fragment \u6216 ComponentActivity \u4e2d\u8fd4\u56de\u7684 // Component.getViewModelStore() public ViewModelStore getViewModelStore () { if ( getApplication () == null ) { throw new IllegalStateException ( \"Your activity is not yet attached to the \" + \"Application instance. You can't request ViewModel before onCreate call.\" ); } if ( mViewModelStore == null ) { NonConfigurationInstances nc = ( NonConfigurationInstances ) getLastNonConfigurationInstance (); if ( nc != null ) { // Restore the ViewModelStore from NonConfigurationInstances mViewModelStore = nc . viewModelStore ; } if ( mViewModelStore == null ) { mViewModelStore = new ViewModelStore (); } } return mViewModelStore ; } // FragmentManagerViewModel.getViewModelStore() ViewModelStore getViewModelStore ( @NonNull Fragment f ) { // mViewModelStores \u662f \u4e00\u4e2aMap \u7528\u6765\u5b58\u653e viewModel, FragmentManager \u53ef\u4ee5\u5b58\u653e\u591a\u4e2afragment // mWho = UUID.randomUUID().toString();frament \u6807\u793a ViewModelStore viewModelStore = mViewModelStores . get ( f . mWho ); if ( viewModelStore == null ) { viewModelStore = new ViewModelStore (); mViewModelStores . put ( f . mWho , viewModelStore ); } return viewModelStore ; } // Fragment.getDefaultViewModelProviderFactory // ComponentActivity.getDefaultViewModelProviderFactory // \u8fd9\u4e24\u4e2a\u7684\u5b9e\u73b0\u5dee\u4e0d\u591a\uff0c\u90fd\u4f1a\u521b\u5efa SavedStateViewModelFactory \u5bf9\u8c61 @NonNull @Override public ViewModelProvider . Factory getDefaultViewModelProviderFactory () { // ... some code if ( mDefaultFactory == null ) { mDefaultFactory = new SavedStateViewModelFactory ( getApplication (), this , getIntent () != null ? getIntent (). getExtras () : null ); } return mDefaultFactory ; } viewModelProvider.get(ViewModel.class) \u00b6 get\u91cc\u9762\u65e0\u975e\u5c31\u662f\u8c03\u7528 factory.create \u6765\u521b\u5efa\u5bf9\u8c61ViewModel // ViewModelProvider.get() public < T extends ViewModel > T get ( @NonNull String key , @NonNull Class < T > modelClass ) { ViewModel viewModel = mViewModelStore . get ( key ); // some code ... if ( mFactory instanceof KeyedFactory ) { viewModel = (( KeyedFactory ) ( mFactory )). create ( key , modelClass ); } else { viewModel = ( mFactory ). create ( modelClass ); } mViewModelStore . put ( key , viewModel ); return ( T ) viewModel ; } SavedStateViewModelFactory.create(key, modelClass) \u00b6 ProductViewModel \u7ee7\u627f\u4e8e AndroidViewModel findMatchingConstructor \u662f\u7528\u6765\u5224\u65ad\u662f\u5426\u5b58\u5728 \u4e24\u4e2a\u53c2\u6570\u7684\u6784\u9020\u5668 (Application, SavedStateHandle) \u5982\u679c\u6709\u4f1a\u5e26\u5165 SavedStateHandle \u8fd9\u4e2a\u5bf9\u8c61 \u4e5f\u5c31\u662f SavedStateHandleController.getHandle() public < T extends ViewModel > T create ( @NonNull String key , @NonNull Class < T > modelClass ) { boolean isAndroidViewModel = AndroidViewModel . class . isAssignableFrom ( modelClass ); Constructor < T > constructor ; if ( isAndroidViewModel ) { constructor = findMatchingConstructor ( modelClass , ANDROID_VIEWMODEL_SIGNATURE ); } else { constructor = findMatchingConstructor ( modelClass , VIEWMODEL_SIGNATURE ); } // doesn't need SavedStateHandle if ( constructor == null ) { return mFactory . create ( modelClass ); } SavedStateHandleController controller = SavedStateHandleController . create ( mSavedStateRegistry , mLifecycle , key , mDefaultArgs ); /// some code ... T viewmodel ; if ( isAndroidViewModel ) { viewmodel = constructor . newInstance ( mApplication , controller . getHandle ()); } else { viewmodel = constructor . newInstance ( controller . getHandle ()); } viewmodel . setTagIfAbsent ( TAG_SAVED_STATE_HANDLE_CONTROLLER , controller ); return viewmodel ; /// some code ... } \u6574\u4e2aViewModel\u7684\u521b\u5efa \u65e0\u975e\u5c31\u662f\u4f7f\u7528\u4e86\u5de5\u5382\u6a21\u5f0f\uff0c\u5728Fragment\u548cActivity\u4e2d\u5b9e\u73b0\u4e86\u5de5\u5382\uff0c \u4f46\u662f\u5bf9\u8c61\u88ab\u521b\u5efa\u51fa\u6765\u4e86\uff0c\u6298\u817e\u4e86\u8fd9\u4e48\u5927\u4e00\u4e2a\u5708\u5b50\uff0c\u7136\u540e\u600e\u4e48\u4f7f\u7528\u5462\uff1f \u5b98\u7f51\u7684\u8bbe\u8ba1ViewModel\u7406\u5ff5\u662f\uff1a ViewModel \u7c7b\u65e8\u5728\u4ee5\u6ce8\u91cd\u751f\u547d\u5468\u671f\u7684\u65b9\u5f0f\u5b58\u50a8\u548c\u7ba1\u7406\u754c\u9762\u76f8\u5173\u7684\u6570\u636e\u3002ViewModel \u7c7b\u8ba9\u6570\u636e\u53ef\u5728\u53d1\u751f\u5c4f\u5e55\u65cb\u8f6c\u7b49\u914d\u7f6e\u66f4\u6539\u540e\u7ee7\u7eed\u5b58\u5728\u3002 \u90a3\u4e48\u662f\u5982\u4f55\u53d1\u6325\u8fd9\u4e2a\u4f5c\u7528\u7684\u5462\uff1f ViewModelStore \u5e26\u6765\u7684\u5b58\u50a8 \u00b6 // Activity.onRetainNonConfigurationInstance() // \u8fd9\u4e2a\u51fd\u6570\u7684\u89e3\u91ca\u662f\u8bf4 \u5728config\u548c\u9875\u9762destory\u7684\u65f6\u5019\u56de\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0cCompotentActivity \u91cd\u5199\u4e86\u8fd9\u4e2a\u65b9\u6cd5 \u628a viewModelStore \u7f13\u5b58\u8d77\u6765\u4e86,\u7136\u540e\u9875\u9762\u91cd\u5efa\u540e \u4f1a\u901a\u8fc7 getLastNonConfigurationInstance() \u6765\u83b7\u53d6 /*Called by the system, as part of destroying an * activity due to a configuration change, when it is known that a new * instance will immediately be created for the new configuration. You * can return any object you like here, including the activity instance * itself, which can later be retrieved by calling * {@link #getLastNonConfigurationInstance()} in the new activity * instance. */ public final Object onRetainNonConfigurationInstance () { Object custom = onRetainCustomNonConfigurationInstance (); ViewModelStore viewModelStore = mViewModelStore ; if ( viewModelStore == null ) { // No one called getViewModelStore(), so see if there was an existing // ViewModelStore from our last NonConfigurationInstance NonConfigurationInstances nc = ( NonConfigurationInstances ) getLastNonConfigurationInstance (); if ( nc != null ) { viewModelStore = nc . viewModelStore ; } } if ( viewModelStore == null && custom == null ) { return null ; } NonConfigurationInstances nci = new NonConfigurationInstances (); nci . custom = custom ; nci . viewModelStore = viewModelStore ; return nci ; }","title":"ViewModel"},{"location":"00Program/Android/ViewModel/#viewmodel","text":"","title":"ViewModel \u662f\u600e\u6837\u88ab\u521b\u5efa\u7684\uff1f"},{"location":"00Program/Android/ViewModel/#_1","text":"Google\u4ecb\u7ecd\uff1a https://developer.android.google.cn/topic/libraries/architecture/viewmodel Deprecated ViewModelProviders.of() \u8be5\u65b9\u6cd5\u8fc7\u671f\uff0c\u4f7f\u7528 new ViewModleProvider() \u6765\u66ff\u6362 ViewModelProvider Documents: https://developer.android.google.cn/reference/androidx/lifecycle/ViewModelProvider?hl=en","title":"\u4ecb\u7ecd"},{"location":"00Program/Android/ViewModel/#architecutre-viewmodel","text":"ViewModel \u662f\u901a\u8fc7 ViewProvider \u521b\u5efa\u51fa\u6765\u7684","title":"architecutre \u9879\u76ee ViewModel \u521b\u5efa \u5206\u6790"},{"location":"00Program/Android/ViewModel/#viewmodelprovider","text":"// \u6784\u9020\u5668\u751f\u6210\u4e86\u4e24\u4e2a\u5bf9\u8c61\uff0c // Class\u7684newInstance \u6765\u521b\u5efa ViewModel\u5bf9\u8c61 fragment \u548c Activity \u8fd4\u56de\u7684\u65f6 SavedStateViewModelFactory \u7684\u5bf9\u8c61 private final Factory mFactory ; // \u7528\u6765\u5728Activity\u6216\u8005 Fragment \u7f13\u5b58 ViewModel\u7528\uff0c\u5982\u679c\u6709\u591a\u4e2a ViewModel \u5c31\u4f1a\u8fdb\u884c\u7f13\u5b58 private final ViewModelStore mViewModelStore ; // \u6784\u9020\u5668 public ViewModelProvider ( @NonNull ViewModelStoreOwner owner ) { this ( owner . getViewModelStore (), owner instanceof HasDefaultViewModelProviderFactory ? (( HasDefaultViewModelProviderFactory ) owner ). getDefaultViewModelProviderFactory () : NewInstanceFactory . getInstance ()); } * ViewModelStoreOwner \u63a5\u53e3 getViewModelStore \u7528\u6765\u8fd4\u56de ViewModelStore \u5bf9\u8c61\uff0c Fragment \u548c ComponentActivity \u4e2d\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3, * HasDefaultViewModelProviderFactory \u63a5\u53e3 getDefaultViewModelProviderFactory \u5c31\u8fd4\u56de\u4e86\u4e00\u4e2a factory , Fragment \u548c ComponentActivity \u4e2d\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3 * \u7531\u6b64\u53ef\u89c1ViewModel\u4e2d\u7684\u4e24\u4e2a\u4e1c\u897f\u5176\u5b9e\u90fd\u5728 fragment \u6216 ComponentActivity \u4e2d\u8fd4\u56de\u7684 // Component.getViewModelStore() public ViewModelStore getViewModelStore () { if ( getApplication () == null ) { throw new IllegalStateException ( \"Your activity is not yet attached to the \" + \"Application instance. You can't request ViewModel before onCreate call.\" ); } if ( mViewModelStore == null ) { NonConfigurationInstances nc = ( NonConfigurationInstances ) getLastNonConfigurationInstance (); if ( nc != null ) { // Restore the ViewModelStore from NonConfigurationInstances mViewModelStore = nc . viewModelStore ; } if ( mViewModelStore == null ) { mViewModelStore = new ViewModelStore (); } } return mViewModelStore ; } // FragmentManagerViewModel.getViewModelStore() ViewModelStore getViewModelStore ( @NonNull Fragment f ) { // mViewModelStores \u662f \u4e00\u4e2aMap \u7528\u6765\u5b58\u653e viewModel, FragmentManager \u53ef\u4ee5\u5b58\u653e\u591a\u4e2afragment // mWho = UUID.randomUUID().toString();frament \u6807\u793a ViewModelStore viewModelStore = mViewModelStores . get ( f . mWho ); if ( viewModelStore == null ) { viewModelStore = new ViewModelStore (); mViewModelStores . put ( f . mWho , viewModelStore ); } return viewModelStore ; } // Fragment.getDefaultViewModelProviderFactory // ComponentActivity.getDefaultViewModelProviderFactory // \u8fd9\u4e24\u4e2a\u7684\u5b9e\u73b0\u5dee\u4e0d\u591a\uff0c\u90fd\u4f1a\u521b\u5efa SavedStateViewModelFactory \u5bf9\u8c61 @NonNull @Override public ViewModelProvider . Factory getDefaultViewModelProviderFactory () { // ... some code if ( mDefaultFactory == null ) { mDefaultFactory = new SavedStateViewModelFactory ( getApplication (), this , getIntent () != null ? getIntent (). getExtras () : null ); } return mDefaultFactory ; }","title":"ViewModelProvider()"},{"location":"00Program/Android/ViewModel/#viewmodelprovidergetviewmodelclass","text":"get\u91cc\u9762\u65e0\u975e\u5c31\u662f\u8c03\u7528 factory.create \u6765\u521b\u5efa\u5bf9\u8c61ViewModel // ViewModelProvider.get() public < T extends ViewModel > T get ( @NonNull String key , @NonNull Class < T > modelClass ) { ViewModel viewModel = mViewModelStore . get ( key ); // some code ... if ( mFactory instanceof KeyedFactory ) { viewModel = (( KeyedFactory ) ( mFactory )). create ( key , modelClass ); } else { viewModel = ( mFactory ). create ( modelClass ); } mViewModelStore . put ( key , viewModel ); return ( T ) viewModel ; }","title":"viewModelProvider.get(ViewModel.class)"},{"location":"00Program/Android/ViewModel/#savedstateviewmodelfactorycreatekey-modelclass","text":"ProductViewModel \u7ee7\u627f\u4e8e AndroidViewModel findMatchingConstructor \u662f\u7528\u6765\u5224\u65ad\u662f\u5426\u5b58\u5728 \u4e24\u4e2a\u53c2\u6570\u7684\u6784\u9020\u5668 (Application, SavedStateHandle) \u5982\u679c\u6709\u4f1a\u5e26\u5165 SavedStateHandle \u8fd9\u4e2a\u5bf9\u8c61 \u4e5f\u5c31\u662f SavedStateHandleController.getHandle() public < T extends ViewModel > T create ( @NonNull String key , @NonNull Class < T > modelClass ) { boolean isAndroidViewModel = AndroidViewModel . class . isAssignableFrom ( modelClass ); Constructor < T > constructor ; if ( isAndroidViewModel ) { constructor = findMatchingConstructor ( modelClass , ANDROID_VIEWMODEL_SIGNATURE ); } else { constructor = findMatchingConstructor ( modelClass , VIEWMODEL_SIGNATURE ); } // doesn't need SavedStateHandle if ( constructor == null ) { return mFactory . create ( modelClass ); } SavedStateHandleController controller = SavedStateHandleController . create ( mSavedStateRegistry , mLifecycle , key , mDefaultArgs ); /// some code ... T viewmodel ; if ( isAndroidViewModel ) { viewmodel = constructor . newInstance ( mApplication , controller . getHandle ()); } else { viewmodel = constructor . newInstance ( controller . getHandle ()); } viewmodel . setTagIfAbsent ( TAG_SAVED_STATE_HANDLE_CONTROLLER , controller ); return viewmodel ; /// some code ... } \u6574\u4e2aViewModel\u7684\u521b\u5efa \u65e0\u975e\u5c31\u662f\u4f7f\u7528\u4e86\u5de5\u5382\u6a21\u5f0f\uff0c\u5728Fragment\u548cActivity\u4e2d\u5b9e\u73b0\u4e86\u5de5\u5382\uff0c \u4f46\u662f\u5bf9\u8c61\u88ab\u521b\u5efa\u51fa\u6765\u4e86\uff0c\u6298\u817e\u4e86\u8fd9\u4e48\u5927\u4e00\u4e2a\u5708\u5b50\uff0c\u7136\u540e\u600e\u4e48\u4f7f\u7528\u5462\uff1f \u5b98\u7f51\u7684\u8bbe\u8ba1ViewModel\u7406\u5ff5\u662f\uff1a ViewModel \u7c7b\u65e8\u5728\u4ee5\u6ce8\u91cd\u751f\u547d\u5468\u671f\u7684\u65b9\u5f0f\u5b58\u50a8\u548c\u7ba1\u7406\u754c\u9762\u76f8\u5173\u7684\u6570\u636e\u3002ViewModel \u7c7b\u8ba9\u6570\u636e\u53ef\u5728\u53d1\u751f\u5c4f\u5e55\u65cb\u8f6c\u7b49\u914d\u7f6e\u66f4\u6539\u540e\u7ee7\u7eed\u5b58\u5728\u3002 \u90a3\u4e48\u662f\u5982\u4f55\u53d1\u6325\u8fd9\u4e2a\u4f5c\u7528\u7684\u5462\uff1f","title":"SavedStateViewModelFactory.create(key, modelClass)"},{"location":"00Program/Android/ViewModel/#viewmodelstore","text":"// Activity.onRetainNonConfigurationInstance() // \u8fd9\u4e2a\u51fd\u6570\u7684\u89e3\u91ca\u662f\u8bf4 \u5728config\u548c\u9875\u9762destory\u7684\u65f6\u5019\u56de\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0cCompotentActivity \u91cd\u5199\u4e86\u8fd9\u4e2a\u65b9\u6cd5 \u628a viewModelStore \u7f13\u5b58\u8d77\u6765\u4e86,\u7136\u540e\u9875\u9762\u91cd\u5efa\u540e \u4f1a\u901a\u8fc7 getLastNonConfigurationInstance() \u6765\u83b7\u53d6 /*Called by the system, as part of destroying an * activity due to a configuration change, when it is known that a new * instance will immediately be created for the new configuration. You * can return any object you like here, including the activity instance * itself, which can later be retrieved by calling * {@link #getLastNonConfigurationInstance()} in the new activity * instance. */ public final Object onRetainNonConfigurationInstance () { Object custom = onRetainCustomNonConfigurationInstance (); ViewModelStore viewModelStore = mViewModelStore ; if ( viewModelStore == null ) { // No one called getViewModelStore(), so see if there was an existing // ViewModelStore from our last NonConfigurationInstance NonConfigurationInstances nc = ( NonConfigurationInstances ) getLastNonConfigurationInstance (); if ( nc != null ) { viewModelStore = nc . viewModelStore ; } } if ( viewModelStore == null && custom == null ) { return null ; } NonConfigurationInstances nci = new NonConfigurationInstances (); nci . custom = custom ; nci . viewModelStore = viewModelStore ; return nci ; }","title":"ViewModelStore \u5e26\u6765\u7684\u5b58\u50a8"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/","tags":["Kotlin"],"text":"\u672c\u6587\u53c2\u8003\u5730\u5740 http://www.runoob.com/kotlin/kotlin-basic-syntax.html \u672c\u6587\u53c2\u8003\u5730\u5740 https://www.kotlincn.net/docs/tutorials/getting-started.html \u5305\u7533\u660e \u00b6 package com.twp.kontlin.demo \u51fd\u6570\u5b9a\u4e49 \u00b6 \u51fd\u6570\u5b9a\u4e49\u4f7f\u7528\u5173\u952e\u5b57 fun\uff0c\u53c2\u6570\u683c\u5f0f\u4e3a\uff1a\u53c2\u6570 : \u7c7b\u578b , \u8bed\u6cd5\u6709\u70b9\u50cfoc fun sum ( a : Int , b : Int ): Int { return a + b ; } //\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\u4f53\uff0c\u8fd4\u56de\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad\uff1a a+b \u4e3a\u8868\u8fbe\u5f0f,\u4f5c\u4e3a\u4e86\u51fd\u6570\u7684\u8fd4\u56de fun sum1 ( a : Int , b : Int ) = a + b // public \u65b9\u6cd5\u5219\u5fc5\u987b\u660e\u786e\u5199\u51fa\u8fd4\u56de\u7c7b\u578b public fun sum2 ( a : Int , b : Int ): Int = a + b //\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570(\u7c7b\u4f3cJava\u4e2d\u7684void)\uff1a fun printSum ( a : Int , b : Int ): Unit { println ( \"not public method \" + ( a + b )) } // \u5982\u679c\u662f\u8fd4\u56de Unit\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u7701\u7565(\u5bf9\u4e8epublic\u65b9\u6cd5\u4e5f\u662f\u8fd9\u6837)\uff1a public fun printSum1 ( a : Int , b : Int ) { println ( \"public method \" + ( a + b )) } lambda \u00b6 //lambda\u8868\u8fbe\u5f0f\u4f7f\u7528\u5b9e\u4f8b val sumLambda : ( Int , Int ) -> Int = { x , y -> x + y } val voidLambda : ( Int , Int ) -> Unit = { x , y -> x + y ; println ( \" this is unit return method\" )} println ( \"lambda:\" + sumLambda ( 10 , 10 )); voidLambda ( 1 , 2 ); \u5e38\u91cf&\u53d8\u91cf \u00b6 //\u5e38\u91cf\u548c\u53d8\u91cf //\u53d8\u91cf: var <\u6807\u8bc6\u7b26>:<\u7c7b\u578b>=<\u521d\u59cb\u5316\u503c> val firstval : Int = 100 ; val secondVal = 200 ; val thirdVal = \"ddd\" ; //\u5e38\u91cf: val <\u6807\u8bc6\u7b26>:<\u7c7b\u578b>=<\u521d\u59cb\u5316\u503c> var finalVar = 5 ; \u5b57\u7b26\u6a21\u677f \u00b6 //\u5b57\u7b26\u4e32\u6a21\u677f fun stringMode (): Unit { var firstString = 1 // \u6a21\u677f\u4e2d\u7684\u7b80\u5355\u540d\u79f0\uff1a val s1 = \"firstString is $firstString\" println ( s1 ) firstString = 2 ; // \u6a21\u677f\u4e2d\u7684\u4efb\u610f\u8868\u8fbe\u5f0f\uff1a val s2 = \"${s1.replace(\" is \", \" was \")}, but now is $firstString\" println ( s2 ) } NULL\u68c0\u67e5\u673a\u5236 \u00b6 Kotlin\u7684\u7a7a\u5b89\u5168\u8bbe\u8ba1\u5bf9\u4e8e\u58f0\u660e\u53ef\u4e3a\u7a7a\u7684\u53c2\u6570\uff0c\u5728\u4f7f\u7528\u65f6\u8981\u8fdb\u884c\u7a7a\u5224\u65ad\u5904\u7406\uff0c\u6709\u4e24\u79cd\u5904\u7406\u65b9\u5f0f\uff0c\u5b57\u6bb5\u540e\u52a0!!\u50cfJava\u4e00\u6837\u629b\u51fa\u7a7a\u5f02\u5e38\uff0c\u53e6\u4e00\u79cd\u5b57\u6bb5\u540e\u52a0?\u53ef\u4e0d\u505a\u5904\u7406\u8fd4\u56de\u503c\u4e3a null\u6216\u914d\u5408?:\u505a\u7a7a\u5224\u65ad\u5904\u7406 fun main ( args : Array < String > ) { //\u7c7b\u578b\u540e\u9762\u52a0?\u8868\u793a\u53ef\u4e3a\u7a7a //var age: String? = \"aa\" // var age: String? = \"1\" var age : String ? = null //\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38 try { val ages = age !! . toInt () println ( \"ages:\" + ages ) } catch ( e : KotlinNullPointerException ){ println ( \"parse has exception \" ) } //\u4e0d\u505a\u5904\u7406\u8fd4\u56de null val ages1 = age ? . toInt () //age\u4e3a\u7a7a\u8fd4\u56de-1 val ages2 = age ? . toInt () ? : - 1 println ( \"age:\" + age ) println ( \"ages1:\" + ages1 ) println ( \"ages2:\" + ages2 ) } age = null \u8f93\u51fa parse has exception age : null ages1 : null ages2 : - 1 age = \"aa\" \u6240\u6709\u7684 toInt()\u90fd\u4f1a\u62a5\u9519 NumberFormatException fun parseInt ( str : String ): Int ? { try { return str . toInt () } catch ( e : NumberFormatException ){ return null } } fun main ( args : Array < String > ){ val x = parseInt ( \"3\" ) val y = parseInt ( \"4\" ) if ( x != null && y != null ){ //\u51fd\u6570parseInt \u58f0\u660e\u4e86\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3aNULL\u6240\u4ee5\u9700\u8981\u5bf9x,y\u8fdb\u884c\u7a7a\u5224\u65ad println ( x * y ) } } \u8f93\u51fa \uff1a 12 \u533a\u95f4 \u00b6 fun main ( args : Array < String > ) { // i >=1 && i<=4 print ( \"for in 1..4 \" ) for ( i in 1..4 ){ print ( i ) print ( \",\" ) } println () // .. \u8868\u793a\u4ece\u5c0f\u5230\u5927,\u6240\u4ee5\u8fd9\u4e2a\u6761\u4ef6\u4e0b\u662f\u6ca1\u6709\u8303\u56f4\u7684 println ( \"for in 4..1 \" ) for ( i in 4..1 ){ print ( i ) print ( \",\" ) } println () // downTo \u8868\u793a\u4ece\u5927\u5230\u5c0f, println ( \"for in 4 downTo 1 \" ) for ( i in 4 downTo 1 ){ print ( i ) print ( \",\" ) } //step \u6307\u5b9a\u6b65\u957f println () println ( \"for in 4 downTo 1 step 2\" ) for ( i in 4 downTo 1 step 2 ){ print ( i ) print ( \",\" ) } // \u4f7f\u7528 until \u51fd\u6570\u6392\u9664\u7ed3\u675f\u5143\u7d20 println ( \"for in 1 until 10\" ) for ( i in 1 until 10 ) { // i in [1, 10) \u6392\u9664\u4e86 10 print ( i ) } // until \u4e0d\u533a\u5206\u6b63\u53cd println ( \"for in 10 until 1\" ) for ( i in 1 until 10 ) { // i in [1, 10) \u6392\u9664\u4e86 10 print ( i ) } } Kotlin \u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 Kotlin \u7684\u57fa\u672c\u6570\u503c\u7c7b\u578b\u5305\u62ec Byte\u3001Short\u3001Int\u3001Long\u3001Float\u3001Double \u7b49\u3002\u4e0d\u540c\u4e8eJava\u7684\u662f\uff0c\u5b57\u7b26\u4e0d\u5c5e\u4e8e\u6570\u503c\u7c7b\u578b\uff0c\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u6570\u636e\u7c7b\u578b\u3002 \u7c7b\u578b \u4f4d\u5bbd\u5ea6 Double 64 Float 32 Long 64 Int 32 Short 16 Byte 8 \u6570\u5b57 \u00b6 \u5728 Java \u5e73\u53f0\u6570\u5b57\u662f\u7269\u7406\u5b58\u50a8\u4e3a JVM \u7684\u539f\u751f\u7c7b\u578b\uff0c\u9664\u975e\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u7a7a\u7684\u5f15\u7528\uff08\u5982 Int?\uff09\u6216\u6cdb\u578b\u3002 \u540e\u8005\u60c5\u51b5\u4e0b\u4f1a\u628a\u6570\u5b57\u88c5\u7bb1\u3002 \u5728 Kotlin \u4e2d\uff0c \u4e09\u4e2a\u7b49\u53f7 === \u8868\u793a\u6bd4\u8f83\u5bf9\u8c61\u5730\u5740\uff0c\u4e24\u4e2a == \u8868\u793a\u6bd4\u8f83\u4e24\u4e2a\u503c\u5927\u5c0f\u3002 fun main ( args : Array < String > ) { val a : Int = 10000 val b : Int = 10000 println ( a === a ) // true\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u76f8\u7b49 println ( a === b ) // true\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u76f8\u7b49 println ( a == b ) // true\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u76f8\u7b49 \u8fd9\u4e2a\u65f6\u5019\u7684 a \u548c b \u662f\u6ca1\u6709\u7ecf\u8fc7\u88c5\u7bb1\u7684,\u7a7a\u5f15\u7528\u548c\u6cdb\u578b\u624d\u4f1a\u88c5\u7bb1 //\u7ecf\u8fc7\u4e86\u88c5\u7bb1\uff0c\u521b\u5efa\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61 val boxedA : Int ? = a val anotherBoxedA : Int ? = a //\u867d\u7136\u7ecf\u8fc7\u4e86\u88c5\u7bb1\uff0c\u4f46\u662f\u503c\u662f\u76f8\u7b49\u7684\uff0c\u90fd\u662f10000 println ( boxedA === anotherBoxedA ) // false\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u4e0d\u4e00\u6837 println ( boxedA == anotherBoxedA ) // true\uff0c\u503c\u76f8\u7b49 } \u56e0\u6b64\u8f83\u5c0f\u7684\u7c7b\u578b\u4e0d\u80fd\u9690\u5f0f\u8f6c\u6362\u4e3a\u8f83\u5927\u7684\u7c7b\u578b\u3002 \u8fd9\u610f\u5473\u7740\u5728\u4e0d\u8fdb\u884c\u663e\u5f0f\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u80fd\u628a Byte \u578b\u503c\u8d4b\u7ed9\u4e00\u4e2a Int \u53d8\u91cf\u3002 val b : Byte = 1 // OK, \u5b57\u9762\u503c\u662f\u9759\u6001\u68c0\u6d4b\u7684 val i : Int = b // \u9519\u8bef //\u6211\u4eec\u53ef\u4ee5\u663e\u5f0f\u8f6c\u6362\u6765\u62d3\u5bbd\u6570\u5b57 val i : Int = b . toInt () // OK: \u663e\u5f0f\u62d3\u5bbd","title":"2.Kotlin\u57fa\u7840\u8bed\u6cd5"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#_1","text":"package com.twp.kontlin.demo","title":"\u5305\u7533\u660e"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#_2","text":"\u51fd\u6570\u5b9a\u4e49\u4f7f\u7528\u5173\u952e\u5b57 fun\uff0c\u53c2\u6570\u683c\u5f0f\u4e3a\uff1a\u53c2\u6570 : \u7c7b\u578b , \u8bed\u6cd5\u6709\u70b9\u50cfoc fun sum ( a : Int , b : Int ): Int { return a + b ; } //\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\u4f53\uff0c\u8fd4\u56de\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad\uff1a a+b \u4e3a\u8868\u8fbe\u5f0f,\u4f5c\u4e3a\u4e86\u51fd\u6570\u7684\u8fd4\u56de fun sum1 ( a : Int , b : Int ) = a + b // public \u65b9\u6cd5\u5219\u5fc5\u987b\u660e\u786e\u5199\u51fa\u8fd4\u56de\u7c7b\u578b public fun sum2 ( a : Int , b : Int ): Int = a + b //\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570(\u7c7b\u4f3cJava\u4e2d\u7684void)\uff1a fun printSum ( a : Int , b : Int ): Unit { println ( \"not public method \" + ( a + b )) } // \u5982\u679c\u662f\u8fd4\u56de Unit\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u7701\u7565(\u5bf9\u4e8epublic\u65b9\u6cd5\u4e5f\u662f\u8fd9\u6837)\uff1a public fun printSum1 ( a : Int , b : Int ) { println ( \"public method \" + ( a + b )) }","title":"\u51fd\u6570\u5b9a\u4e49"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#lambda","text":"//lambda\u8868\u8fbe\u5f0f\u4f7f\u7528\u5b9e\u4f8b val sumLambda : ( Int , Int ) -> Int = { x , y -> x + y } val voidLambda : ( Int , Int ) -> Unit = { x , y -> x + y ; println ( \" this is unit return method\" )} println ( \"lambda:\" + sumLambda ( 10 , 10 )); voidLambda ( 1 , 2 );","title":"lambda"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#_3","text":"//\u5e38\u91cf\u548c\u53d8\u91cf //\u53d8\u91cf: var <\u6807\u8bc6\u7b26>:<\u7c7b\u578b>=<\u521d\u59cb\u5316\u503c> val firstval : Int = 100 ; val secondVal = 200 ; val thirdVal = \"ddd\" ; //\u5e38\u91cf: val <\u6807\u8bc6\u7b26>:<\u7c7b\u578b>=<\u521d\u59cb\u5316\u503c> var finalVar = 5 ;","title":"\u5e38\u91cf&amp;\u53d8\u91cf"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#_4","text":"//\u5b57\u7b26\u4e32\u6a21\u677f fun stringMode (): Unit { var firstString = 1 // \u6a21\u677f\u4e2d\u7684\u7b80\u5355\u540d\u79f0\uff1a val s1 = \"firstString is $firstString\" println ( s1 ) firstString = 2 ; // \u6a21\u677f\u4e2d\u7684\u4efb\u610f\u8868\u8fbe\u5f0f\uff1a val s2 = \"${s1.replace(\" is \", \" was \")}, but now is $firstString\" println ( s2 ) }","title":"\u5b57\u7b26\u6a21\u677f"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#null","text":"Kotlin\u7684\u7a7a\u5b89\u5168\u8bbe\u8ba1\u5bf9\u4e8e\u58f0\u660e\u53ef\u4e3a\u7a7a\u7684\u53c2\u6570\uff0c\u5728\u4f7f\u7528\u65f6\u8981\u8fdb\u884c\u7a7a\u5224\u65ad\u5904\u7406\uff0c\u6709\u4e24\u79cd\u5904\u7406\u65b9\u5f0f\uff0c\u5b57\u6bb5\u540e\u52a0!!\u50cfJava\u4e00\u6837\u629b\u51fa\u7a7a\u5f02\u5e38\uff0c\u53e6\u4e00\u79cd\u5b57\u6bb5\u540e\u52a0?\u53ef\u4e0d\u505a\u5904\u7406\u8fd4\u56de\u503c\u4e3a null\u6216\u914d\u5408?:\u505a\u7a7a\u5224\u65ad\u5904\u7406 fun main ( args : Array < String > ) { //\u7c7b\u578b\u540e\u9762\u52a0?\u8868\u793a\u53ef\u4e3a\u7a7a //var age: String? = \"aa\" // var age: String? = \"1\" var age : String ? = null //\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38 try { val ages = age !! . toInt () println ( \"ages:\" + ages ) } catch ( e : KotlinNullPointerException ){ println ( \"parse has exception \" ) } //\u4e0d\u505a\u5904\u7406\u8fd4\u56de null val ages1 = age ? . toInt () //age\u4e3a\u7a7a\u8fd4\u56de-1 val ages2 = age ? . toInt () ? : - 1 println ( \"age:\" + age ) println ( \"ages1:\" + ages1 ) println ( \"ages2:\" + ages2 ) } age = null \u8f93\u51fa parse has exception age : null ages1 : null ages2 : - 1 age = \"aa\" \u6240\u6709\u7684 toInt()\u90fd\u4f1a\u62a5\u9519 NumberFormatException fun parseInt ( str : String ): Int ? { try { return str . toInt () } catch ( e : NumberFormatException ){ return null } } fun main ( args : Array < String > ){ val x = parseInt ( \"3\" ) val y = parseInt ( \"4\" ) if ( x != null && y != null ){ //\u51fd\u6570parseInt \u58f0\u660e\u4e86\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3aNULL\u6240\u4ee5\u9700\u8981\u5bf9x,y\u8fdb\u884c\u7a7a\u5224\u65ad println ( x * y ) } } \u8f93\u51fa \uff1a 12","title":"NULL\u68c0\u67e5\u673a\u5236"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#_5","text":"fun main ( args : Array < String > ) { // i >=1 && i<=4 print ( \"for in 1..4 \" ) for ( i in 1..4 ){ print ( i ) print ( \",\" ) } println () // .. \u8868\u793a\u4ece\u5c0f\u5230\u5927,\u6240\u4ee5\u8fd9\u4e2a\u6761\u4ef6\u4e0b\u662f\u6ca1\u6709\u8303\u56f4\u7684 println ( \"for in 4..1 \" ) for ( i in 4..1 ){ print ( i ) print ( \",\" ) } println () // downTo \u8868\u793a\u4ece\u5927\u5230\u5c0f, println ( \"for in 4 downTo 1 \" ) for ( i in 4 downTo 1 ){ print ( i ) print ( \",\" ) } //step \u6307\u5b9a\u6b65\u957f println () println ( \"for in 4 downTo 1 step 2\" ) for ( i in 4 downTo 1 step 2 ){ print ( i ) print ( \",\" ) } // \u4f7f\u7528 until \u51fd\u6570\u6392\u9664\u7ed3\u675f\u5143\u7d20 println ( \"for in 1 until 10\" ) for ( i in 1 until 10 ) { // i in [1, 10) \u6392\u9664\u4e86 10 print ( i ) } // until \u4e0d\u533a\u5206\u6b63\u53cd println ( \"for in 10 until 1\" ) for ( i in 1 until 10 ) { // i in [1, 10) \u6392\u9664\u4e86 10 print ( i ) } }","title":"\u533a\u95f4"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#kotlin","text":"Kotlin \u7684\u57fa\u672c\u6570\u503c\u7c7b\u578b\u5305\u62ec Byte\u3001Short\u3001Int\u3001Long\u3001Float\u3001Double \u7b49\u3002\u4e0d\u540c\u4e8eJava\u7684\u662f\uff0c\u5b57\u7b26\u4e0d\u5c5e\u4e8e\u6570\u503c\u7c7b\u578b\uff0c\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u6570\u636e\u7c7b\u578b\u3002 \u7c7b\u578b \u4f4d\u5bbd\u5ea6 Double 64 Float 32 Long 64 Int 32 Short 16 Byte 8","title":"Kotlin \u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"00Program/Kotlin/2017-08-13-2kotlin-grammar/#_6","text":"\u5728 Java \u5e73\u53f0\u6570\u5b57\u662f\u7269\u7406\u5b58\u50a8\u4e3a JVM \u7684\u539f\u751f\u7c7b\u578b\uff0c\u9664\u975e\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u7a7a\u7684\u5f15\u7528\uff08\u5982 Int?\uff09\u6216\u6cdb\u578b\u3002 \u540e\u8005\u60c5\u51b5\u4e0b\u4f1a\u628a\u6570\u5b57\u88c5\u7bb1\u3002 \u5728 Kotlin \u4e2d\uff0c \u4e09\u4e2a\u7b49\u53f7 === \u8868\u793a\u6bd4\u8f83\u5bf9\u8c61\u5730\u5740\uff0c\u4e24\u4e2a == \u8868\u793a\u6bd4\u8f83\u4e24\u4e2a\u503c\u5927\u5c0f\u3002 fun main ( args : Array < String > ) { val a : Int = 10000 val b : Int = 10000 println ( a === a ) // true\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u76f8\u7b49 println ( a === b ) // true\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u76f8\u7b49 println ( a == b ) // true\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u76f8\u7b49 \u8fd9\u4e2a\u65f6\u5019\u7684 a \u548c b \u662f\u6ca1\u6709\u7ecf\u8fc7\u88c5\u7bb1\u7684,\u7a7a\u5f15\u7528\u548c\u6cdb\u578b\u624d\u4f1a\u88c5\u7bb1 //\u7ecf\u8fc7\u4e86\u88c5\u7bb1\uff0c\u521b\u5efa\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61 val boxedA : Int ? = a val anotherBoxedA : Int ? = a //\u867d\u7136\u7ecf\u8fc7\u4e86\u88c5\u7bb1\uff0c\u4f46\u662f\u503c\u662f\u76f8\u7b49\u7684\uff0c\u90fd\u662f10000 println ( boxedA === anotherBoxedA ) // false\uff0c\u503c\u76f8\u7b49\uff0c\u5bf9\u8c61\u5730\u5740\u4e0d\u4e00\u6837 println ( boxedA == anotherBoxedA ) // true\uff0c\u503c\u76f8\u7b49 } \u56e0\u6b64\u8f83\u5c0f\u7684\u7c7b\u578b\u4e0d\u80fd\u9690\u5f0f\u8f6c\u6362\u4e3a\u8f83\u5927\u7684\u7c7b\u578b\u3002 \u8fd9\u610f\u5473\u7740\u5728\u4e0d\u8fdb\u884c\u663e\u5f0f\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u80fd\u628a Byte \u578b\u503c\u8d4b\u7ed9\u4e00\u4e2a Int \u53d8\u91cf\u3002 val b : Byte = 1 // OK, \u5b57\u9762\u503c\u662f\u9759\u6001\u68c0\u6d4b\u7684 val i : Int = b // \u9519\u8bef //\u6211\u4eec\u53ef\u4ee5\u663e\u5f0f\u8f6c\u6362\u6765\u62d3\u5bbd\u6570\u5b57 val i : Int = b . toInt () // OK: \u663e\u5f0f\u62d3\u5bbd","title":"\u6570\u5b57"},{"location":"00Program/Kotlin/Kotlin-Class/","tags":"Kotlin","text":"\u7c7b \u00b6 \u5173\u952e\u5b57 class \u7c7b\u7533\u660e\u7531\u7c7b\u540d\u3001\u7c7b\u5934(\u6307\u5b9a\u5176\u7c7b\u578b\u53c2\u6570\uff0c\u4e3b\u6784\u9020\u51fd\u6570)\u548c\u7531\u5927\u62ec\u53f7\u5305\u62ec\u7684\u7c7b\u4f53\u6784\u6210\u3002 class Empty //\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9e\u4f53\uff0c\u53ef\u4ee5\u7701\u7565\u82b1\u62ec\u53f7 class Invoice {} \u6784\u9020\u51fd\u6570 \u00b6 \u4e3b\u6784\u9020\u5668\u8ddf\u5728\u7c7b\u540d\u540e class Person constructor ( firstName : String ){ } //\u4e3b\u6784\u9020\u5668\u6ca1\u6709\u5176\u4ed6\u6ce8\u89e3\u548c\u53ef\u89c1\u6027\u7684\u4fee\u9970\u7b26\uff0c\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2aconstructor class Person ( firstName : String ) //\u521d\u59cb\u5316\u4ee3\u7801\u53ef\u4ee5\u653e\u5230`init`\u7684\u521d\u59cb\u5316\u5feb\u4e2d class Customer ( name : String ){ init { print ( \"init class\" ) } } \u6b21\u6784\u9020\u5668 class Person { constructor ( parent : Person ){ parent . children . add ( this ) } } \u5982\u679c\u7c7b\u6709\u4e00\u4e2a\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u6bcf\u4e2a\u6b21\u6784\u9020\u51fd\u6570\u9700\u8981\u59d4\u6258\u7ed9\u4e3b\u6784\u9020\u51fd\u6570\uff0c \u53ef\u4ee5\u76f4\u63a5\u59d4\u6258\u6216\u8005\u901a\u8fc7\u522b\u7684\u6b21\u6784\u9020\u51fd\u6570\u95f4\u63a5\u59d4\u6258\u3002\u59d4\u6258\u5230\u540c\u4e00\u4e2a\u7c7b\u7684\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u7528 this \u5173\u952e\u5b57\u5373\u53ef class Person ( val name : String ) { constructor ( name : String , parent : Person ) : this ( name ) { parent . children . add ( this ) } } \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b \u8981\u521b\u5efa\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6211\u4eec\u5c31\u50cf\u666e\u901a\u51fd\u6570\u4e00\u6837\u8c03\u7528\u6784\u9020\u51fd\u6570\uff1a val invoice = Invoice () val customer = Customer ( \"Joe Smith\" ) \u7c7b\u6210\u5458 \u5305\u542b\uff1a -- \u6784\u9020\u5668\u51fd\u6570\u548c\u521d\u59cb\u5316\u5757 -- \u51fd\u6570(\u6210\u5458\u51fd\u6570) -- \u5c5e\u6027(\u6210\u5458\u51fd\u6570) -- \u5d4c\u5957\u7c7b\u548c\u5185\u90e8\u7c7b -- \u5bf9\u8c61\u58f0\u660e \u7ee7\u627f \u00b6 \u5728Kotlin\u4e2d\u6240\u6709\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u8d85\u7c7b Any \u5bf9\u4e8e\u6ca1\u6709\u8d85\u7c7b\u578b\u7533\u660e\u7684\u7c7b\u662f\u9ed8\u8ba4\u8d85\u7c7b Any \u53ea\u6709\u4e09\u4e2a\u6210\u5458\u51fd\u6570 equals \u3001 hashCode \u3001 toString //open \u6807\u6ce8 \u8868\u793a\u5141\u8bb8\u5176\u4ed6\u7c7b\u4ece\u8fd9\u4e2a\u7c7b\u7ee7\u627f\uff0c\u9ed8\u8ba4\u90fd\u662ffinal \u4e0d\u5141\u8bb8\u7ee7\u627f\u7684\u3002 open class Base ( p : Int ) //\u58f0\u660e\u4e00\u4e2a\u663e\u793a\u7684\u8d85\u7c7b class Drived ( p : Int ) : Base ( p )","title":"Kotlin\u7684class"},{"location":"00Program/Kotlin/Kotlin-Class/#_1","text":"\u5173\u952e\u5b57 class \u7c7b\u7533\u660e\u7531\u7c7b\u540d\u3001\u7c7b\u5934(\u6307\u5b9a\u5176\u7c7b\u578b\u53c2\u6570\uff0c\u4e3b\u6784\u9020\u51fd\u6570)\u548c\u7531\u5927\u62ec\u53f7\u5305\u62ec\u7684\u7c7b\u4f53\u6784\u6210\u3002 class Empty //\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9e\u4f53\uff0c\u53ef\u4ee5\u7701\u7565\u82b1\u62ec\u53f7 class Invoice {}","title":"\u7c7b"},{"location":"00Program/Kotlin/Kotlin-Class/#_2","text":"\u4e3b\u6784\u9020\u5668\u8ddf\u5728\u7c7b\u540d\u540e class Person constructor ( firstName : String ){ } //\u4e3b\u6784\u9020\u5668\u6ca1\u6709\u5176\u4ed6\u6ce8\u89e3\u548c\u53ef\u89c1\u6027\u7684\u4fee\u9970\u7b26\uff0c\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2aconstructor class Person ( firstName : String ) //\u521d\u59cb\u5316\u4ee3\u7801\u53ef\u4ee5\u653e\u5230`init`\u7684\u521d\u59cb\u5316\u5feb\u4e2d class Customer ( name : String ){ init { print ( \"init class\" ) } } \u6b21\u6784\u9020\u5668 class Person { constructor ( parent : Person ){ parent . children . add ( this ) } } \u5982\u679c\u7c7b\u6709\u4e00\u4e2a\u4e3b\u6784\u9020\u51fd\u6570\uff0c\u6bcf\u4e2a\u6b21\u6784\u9020\u51fd\u6570\u9700\u8981\u59d4\u6258\u7ed9\u4e3b\u6784\u9020\u51fd\u6570\uff0c \u53ef\u4ee5\u76f4\u63a5\u59d4\u6258\u6216\u8005\u901a\u8fc7\u522b\u7684\u6b21\u6784\u9020\u51fd\u6570\u95f4\u63a5\u59d4\u6258\u3002\u59d4\u6258\u5230\u540c\u4e00\u4e2a\u7c7b\u7684\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u7528 this \u5173\u952e\u5b57\u5373\u53ef class Person ( val name : String ) { constructor ( name : String , parent : Person ) : this ( name ) { parent . children . add ( this ) } } \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b \u8981\u521b\u5efa\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6211\u4eec\u5c31\u50cf\u666e\u901a\u51fd\u6570\u4e00\u6837\u8c03\u7528\u6784\u9020\u51fd\u6570\uff1a val invoice = Invoice () val customer = Customer ( \"Joe Smith\" ) \u7c7b\u6210\u5458 \u5305\u542b\uff1a -- \u6784\u9020\u5668\u51fd\u6570\u548c\u521d\u59cb\u5316\u5757 -- \u51fd\u6570(\u6210\u5458\u51fd\u6570) -- \u5c5e\u6027(\u6210\u5458\u51fd\u6570) -- \u5d4c\u5957\u7c7b\u548c\u5185\u90e8\u7c7b -- \u5bf9\u8c61\u58f0\u660e","title":"\u6784\u9020\u51fd\u6570"},{"location":"00Program/Kotlin/Kotlin-Class/#_3","text":"\u5728Kotlin\u4e2d\u6240\u6709\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u8d85\u7c7b Any \u5bf9\u4e8e\u6ca1\u6709\u8d85\u7c7b\u578b\u7533\u660e\u7684\u7c7b\u662f\u9ed8\u8ba4\u8d85\u7c7b Any \u53ea\u6709\u4e09\u4e2a\u6210\u5458\u51fd\u6570 equals \u3001 hashCode \u3001 toString //open \u6807\u6ce8 \u8868\u793a\u5141\u8bb8\u5176\u4ed6\u7c7b\u4ece\u8fd9\u4e2a\u7c7b\u7ee7\u627f\uff0c\u9ed8\u8ba4\u90fd\u662ffinal \u4e0d\u5141\u8bb8\u7ee7\u627f\u7684\u3002 open class Base ( p : Int ) //\u58f0\u660e\u4e00\u4e2a\u663e\u793a\u7684\u8d85\u7c7b class Drived ( p : Int ) : Base ( p )","title":"\u7ee7\u627f"},{"location":"00Program/Project/2016-04-20-android-eventbus-1.register%E5%88%86%E6%9E%90/","tags":["Android","EventBus","fork Project"],"text":"Eventbus: Android optimized event bus that simplifies communication between Activities, Fragments, Threads, Services, etc. Less code, better quality. \u5b98\u65b9\u7f51\u5740: http://greenrobot.org/eventbus/ github: https://github.com/greenrobot/EventBus Eventbus\u7ed3\u6784\uff0c\u6d41\u7a0b\uff0c\u6838\u5fc3\u7c7b\u5206\u6790 codekk\u5206\u6790 \u81ea\u5df1\u6d4b\u8bd5demo 1.EventBus.register(Object subcriber) \u00b6 \u5206\u6790\u601d\u8def\uff0c\u4ee5\u542f\u52a8\u6d41\u7a0b\u7684\u903b\u8f91\u6765\u5206\u6790\uff0c\u6ca1\u6709\u4efb\u4f55\u524d\u7f6e\u6761\u4ef6\u3002\u5982\u679c\u5728\u8d8a\u5230\u53d8\u91cf\u503c\u7684\u95ee\u9898\uff0c\u90fd\u4ee5\u8fd9\u4e2a\u573a\u666f\u4e0b\u7684\u9ed8\u8ba4\u503c\u5e26\u5165 /** * Registers the given subscriber to receive events. Subscribers must call {@link #unregister(Object)} once they * are no longer interested in receiving events. * <p/> * Subscribers have event handling methods that must be annotated by {@link Subscribe}. * The {@link Subscribe} annotation also allows configuration like {@link * ThreadMode} and priority. * \u4e2d\u6587\uff1a\u6ce8\u518csuberscriber\u5bf9\u8c61\u5c06\u4f1a\u6536\u5230\u6d88\u606f\uff0c\u8ba2\u9605\u8005\u5982\u679c\u4e0d\u60f3\u6536\u5230\u6d88\u606f\u9700\u8981\u8c03\u7528 {@link #unregister(Object)} \u65b9\u6cd5\u53d6\u6d88, * \u8ba2\u9605\u8005\u5904\u7406\u63a5\u53d7\u5230\u7684\u4e8b\u4ef6\u5fc5\u987b\u4f7f\u7528\u6ce8\u89e3 {@link Subscribe} \u6765\u63cf\u8ff0\u65b9\u6cd5\uff0c * {@link Subscribe} \u6ce8\u89e3\u540c\u6837\u5bb9\u8bb8\u914d\u7f6e {@link * ThreadMode} \u548c \u4f18\u5148\u7ea7 */ public void register ( Object subscriber ) { // subsriberClass \u8868\u793a\u8ba2\u9605\u8005\u5bf9\u8c61\u7684 class Class <?> subscriberClass = subscriber . getClass (); // \u5bf9\u5e94 subscriberClass \u6240\u6709 \u53ef\u4ee5\u63a5\u53d7\u53d1\u5e03\u8005\u53d1\u5e03\u7684\u6d88\u606f \u7684\u6709 Subscribe \u6ce8\u89e3\u7684\u65b9\u6cd5\u7684\u96c6\u5408\u3002 List < SubscriberMethod > subscriberMethods = subscriberMethodFinder . findSubscriberMethods ( subscriberClass ); synchronized ( this ) { for ( SubscriberMethod subscriberMethod : subscriberMethods ) { subscribe ( subscriber , subscriberMethod ); } } } \u9996\u5148\u770b\u5230\u8ba2\u9605\u8005\u63a5\u53d7\u6d88\u606f\u7684\u65b9\u6cd5\u96c6\u5408\u901a\u8fc7 subscriberMethodFinder.findSubscriberMethods \u6765\u83b7\u53d6\uff0c\u6211\u4eec\u770b\u770b**subscriberMethodFinder** \u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316, \u662f\u5728 EventBus \u7684\u6784\u9020\u5668\u4e2d\u8fdb\u884c\u6ce8\u518c\u7684\u5e76\u4e14\u63a5\u53d7\u4e86 builer\u4e2d\u76843\u4e2a\u53c2\u6570 builder.subscriberInfoIndexes , builder.strictMethodVerification , builder.ignoreGeneratedIndex EventBusBuilder \u5b9e\u4f8b\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u770b\u770b\u5c31\u77e5\u9053\uff0c DEFAULT_BUILDER \u662f\u4e2a\u9759\u6001\u5b9e\u4f8b, private static final EventBusBuilder DEFAULT_BUILDER = new EventBusBuilder(); public EventBus () { this ( DEFAULT_BUILDER ); } EventBus ( EventBusBuilder builder ) { subscriptionsByEventType = new HashMap <> (); typesBySubscriber = new HashMap <> (); stickyEvents = new ConcurrentHashMap <> (); mainThreadPoster = new HandlerPoster ( this , Looper . getMainLooper (), 10 ); backgroundPoster = new BackgroundPoster ( this ); asyncPoster = new AsyncPoster ( this ); indexCount = builder . subscriberInfoIndexes != null ? builder . subscriberInfoIndexes . size () : 0 ; subscriberMethodFinder = new SubscriberMethodFinder ( builder . subscriberInfoIndexes , builder . strictMethodVerification , builder . ignoreGeneratedIndex ); logSubscriberExceptions = builder . logSubscriberExceptions ; logNoSubscriberMessages = builder . logNoSubscriberMessages ; sendSubscriberExceptionEvent = builder . sendSubscriberExceptionEvent ; sendNoSubscriberEvent = builder . sendNoSubscriberEvent ; throwSubscriberException = builder . throwSubscriberException ; eventInheritance = builder . eventInheritance ; executorService = builder . executorService ; } \u7ee7\u7eed\u770b\u770b SubscriberMethodFinder \u7684\u6784\u9020\u5668\u4e2d\u521d\u59cb\u5316\u4e86\u90a3\u4e9b\u4e1c\u897f\uff0c\u90a3\u4e9b\u662f\u9700\u8981\u83b7\u53d6 subscriberMethods \u8fd9\u4e2a\u96c6\u5408\u4f7f\u7528\u7684 \u9996\u5148\u770b\u770b\u5165\u53c2\u503c\uff0c\u53c2\u6570\u503c\u6765\u6e90\u4e8e EventBusBuiler \u7684 DEFAULT_BUILDER \u5bf9\u8c61 so DEFAULT_BUILDER \u7684\u53d6\u503c\u5982\u4e0b builder.subscriberInfoIndexes = null, builder.strictMethodVerification = false; builder.ignoreGeneratedIndex = false; \u90a3\u4e48 EnventBus.getDefault().subscriberMethodFinder \u53d6\u503c \u6ce8\u610f\u5176\u4e2d strictMethodVerification,ignoreGeneratedIndex \u4e3a final\u4fee\u9970\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u56fa\u5b9a\u4e86\u5b83\u7684\u53d6\u503c subscriberMethodFinder.subscriberInfoIndexes = null, subscriberMethodFinder.strictMethodVerification = false; subscriberMethodFinder.ignoreGeneratedIndex = false; 2.SubscriberMethodFinder.findSubscriberMethods(Class<?> subscriberClass) \u00b6 \u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5f00\u59cb\uff0c\u624d\u5f00\u59cb\u67e5\u627e\u7684\u7b2c\u4e00\u6b65\uff0c findSubscriberMethods \u4e2d\u4e5f\u4ec5\u4ec5\u662f\u505a\u4e86\u7f13\u5b58\u8bfb\u53d6\uff0c\u548c\u7a7a\u5224\u65ad\uff0c\u4ee5\u53ca\u4ece\u5176\u4ed6\u65b9\u6cd5\u83b7\u53d6\u7ed3\u679c\u540e\u5b58\u5165\u7f13\u5b58\uff0c\u5176\u4e2d\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6 subscriberMethods \u7684\u65b9\u5f0f\uff0c\u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\u4f1a\u5728\u7a0d\u540e\u89e3\u7b54\u3002 List < SubscriberMethod > findSubscriberMethods ( Class <?> subscriberClass ) { //\u7b2c\u4e00\u6b21\u8fdb\u5165\u80af\u5b9a\u6ca1\u6709\u7f13\u5b58\uff0c\u9700\u8981\u5173\u5fc3\u653e\u5230\u7f13\u51b2\u4e2d\u7684\u4e1c\u897f\u662f\u4ec0\u4e48\uff0c\u600e\u4e48\u6765\u7684\uff1f List < SubscriberMethod > subscriberMethods = METHOD_CACHE . get ( subscriberClass ); if ( subscriberMethods != null ) { return subscriberMethods ; } //\u6839\u636e\u524d\u7f6e\u6761\u4ef6\uff0c\u8fd9\u91cc\u7b2c\u4e00\u6b21\u4e3afalse\uff0c\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u901a\u8fc7\u8fd9\u91cc\u5c31\u80fd\u83b7\u53d6\u5230\u4e86 SubscriberMethod\u7684\u96c6\u5408 if ( ignoreGeneratedIndex ) { subscriberMethods = findUsingReflection ( subscriberClass ); } else { subscriberMethods = findUsingInfo ( subscriberClass ); } if ( subscriberMethods . isEmpty ()) { throw new EventBusException ( \"Subscriber \" + subscriberClass + \" and its super classes have no public methods with the @Subscribe annotation\" ); } else { METHOD_CACHE . put ( subscriberClass , subscriberMethods ); return subscriberMethods ; } } private List < SubscriberMethod > findUsingInfo ( Class <?> subscriberClass ) { FindState findState = prepareFindState (); findState . initForSubscriber ( subscriberClass ); while ( findState . clazz != null ) { //\u901a\u8fc7\u5224\u65ad\u8fd9\u91cc\u4e00\u822c\u60c5\u51b5\u4e0b \u83b7\u53d6\u7684 findState.subscriberInfo == null; findState . subscriberInfo = getSubscriberInfo ( findState ); if ( findState . subscriberInfo != null ) { SubscriberMethod [] array = findState . subscriberInfo . getSubscriberMethods (); for ( SubscriberMethod subscriberMethod : array ) { if ( findState . checkAdd ( subscriberMethod . method , subscriberMethod . eventType )) { findState . subscriberMethods . add ( subscriberMethod ); } } } else { findUsingReflectionInSingleClass ( findState ); } findState . moveToSuperclass (); } return getMethodsAndRelease ( findState ); } So ,\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u90fd\u662f\u901a\u8fc7 findUsingReflectionInSingleClass \u8fd9\u4e2a\u65b9\u6cd5\u53bb\u83b7\u53d6\u8ba2\u9605\u8005\u4e2d\uff0c\u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\u3002 oh oh oh \u771f\u6b63\u7684\u64cd\u4f5c\u5e94\u8be5\u5c31\u662f findUsingReflectionInSingleClass \u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4e86\uff0c\u679c\u7136\u4e5f\u662f\u901a\u8fc7\u53cd\u5c04\u673a\u5236\uff0c\u9996\u5148\u5173\u4e8egetDeclaredMethods()\u81ea\u884c\u8c03\u8bd5\u770b\u4e0b\u5c31\u77e5\u9053\u662f\u90a3\u4e9b\u65b9\u6cd5\u4e86\u3002 private void findUsingReflectionInSingleClass ( FindState findState ) { Method [] methods ; try { // This is faster than getMethods, especially when subscribers are fat classes like Activities // findState.class == subscriberClass , about getDeclaredMethods method using baidu.com and google methods = findState . clazz . getDeclaredMethods (); } catch ( Throwable th ) { // Workaround for java.lang.NoClassDefFoundError, see https://github.com/greenrobot/EventBus/issues/149 methods = findState . clazz . getMethods (); findState . skipSuperClasses = true ; } for ( Method method : methods ) { int modifiers = method . getModifiers (); //\u4e24\u4e2a\u4e3a\u64cd\u4f5c\u7b26\u4fdd\u8bc1\u4e86\u65b9\u6cd5\u7684\u4fee\u9970\u7b26\u5fc5\u987b\u662f public, and non-static and non-abstract, if (( modifiers & Modifier . PUBLIC ) != 0 && ( modifiers & MODIFIERS_IGNORE ) == 0 ) { //\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u96c6\u5408 Class <?>[] parameterTypes = method . getParameterTypes (); //\u539f\u5219\u4e0a\u53ea\u80fd\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u53c2\u6570\u4e00\u822c\u662f \u6d88\u606f\u8f7d\u4f53 Event,\u4e5f\u53ef\u4ee5\u53eb\u505a\u8ba2\u9605\u6d88\u606f\u3002 if ( parameterTypes . length == 1 ) { //\u83b7\u53d6\u65b9\u6cd5\u7684\u6ce8\u89e3\u63cf\u8ff0 Subscribe subscribeAnnotation = method . getAnnotation ( Subscribe . class ); if ( subscribeAnnotation != null ) { //eventType\u8868\u793a\u4e8b\u4ef6\u7c7b\u578b Class <?> eventType = parameterTypes [ 0 ] ; if ( findState . checkAdd ( method , eventType )) { //\u83b7\u53d6\u7ebf\u7a0b\uff0cfindState.chackAdd\u7684\u65f6\u5019\u53ea\u6709\u5728\u7b2c\u4e00\u6b21\u68c0\u6d4b\u7684\u65f6\u5019\u624d\u4f1a\u8fd4\u56detrue,\u5176\u4ed6\u65f6\u5019\u90fd\u662ffalse ThreadMode threadMode = subscribeAnnotation . threadMode (); //\u8fd9\u91cc\u7ec8\u4e8e\u521b\u5efa\u4e86 SubscriberMethod \u5bf9\u8c61\uff0c\u5e76\u4e14\u653e\u5230\u4e86 findState\u5bf9\u8c61\u4e2d\u7684 subscriberMethods \u4e2d\u3002 findState . subscriberMethods . add ( new SubscriberMethod ( method , eventType , threadMode , subscribeAnnotation . priority (), subscribeAnnotation . sticky ())); } } } else if ( strictMethodVerification && method . isAnnotationPresent ( Subscribe . class )) { String methodName = method . getDeclaringClass (). getName () + \".\" + method . getName (); throw new EventBusException ( \"@Subscribe method \" + methodName + \"must have exactly 1 parameter but has \" + parameterTypes . length ); } } else if ( strictMethodVerification && method . isAnnotationPresent ( Subscribe . class )) { String methodName = method . getDeclaringClass (). getName () + \".\" + method . getName (); throw new EventBusException ( methodName + \" is a illegal @Subscribe method: must be public, non-static, and non-abstract\" ); } } } 2.EventBus.subscribe(Object subscriber,SubscriberMethod subscriberMethod); \u00b6 \u901a\u8fc7\u6ce8\u89e3\u62ff\u5230\u6240\u6709\u7684\u6d88\u606f\u63a5\u53d7\u7684\u65b9\u6cd5\u540e\uff0c\u8fd9\u91cc\u904d\u5386\u6240\u6709\u7684 subcriberMethods, \u8c03\u7528EventBus.subcriber\u5f00\u59cb\u6ce8\u518c\uff0c\u662f\u5728register\u5f00\u59cb\u5b8c\u6210\u7684\u3002 // Must be called in synchronized block private void subscribe ( Object subscriber , SubscriberMethod subscriberMethod ) { //eventType \u8fd9\u91cc\u6307\u7684\u662f \u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\u7684\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u3002 //\u4f8b\u5982 \u5728\u4e0b\u9762\u7684\u65b9\u6cd5\u4e2d eventType = MessageEvent.class /* @Subscribe public void onMessageEvent(MessageEvent event){ Toast.makeText(getApplicationContext(),\"received message \"+event.message,Toast.LENGTH_LONG).show(); }*/ Class <?> eventType = subscriberMethod . eventType ; //Subscription \u662f\u8ba2\u9605\u5bf9\u8c61\uff0c\u5305\u6db5\u4e86 subscriber:\u8ba2\u9605\u8005\u7c7b\uff0csubscriberMethod:\u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\uff0c Subscription newSubscription = new Subscription ( subscriber , subscriberMethod ); //\u901a\u8fc7\u7c7b\u578b\u83b7\u53d6\u5230\uff0c\u7c7b\u578b\u76f8\u5173\u7684\u591a\u6709\u7684 Subcription\u5bf9\u8c61\u96c6\u5408\uff0c CopyOnWriteArrayList < Subscription > subscriptions = subscriptionsByEventType . get ( eventType ); if ( subscriptions == null ) { //\u6ca1\u6709\u7684\u65f6\u5019\u624d\u53bb\u52a0\u5165\uff0c\u6709\u7684\u8bdd\u76f4\u63a5\u62a5\u9519\uff0c\u8fd9\u91cc\u8bf4\u660e\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u540c\u4e00\u4e2a\u8ba2\u9605\u4e2d\u51fa\u73b0\u4e24\u4e2a\u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\u7684\u53c2\u6570\u7684\u7c7b\u578b\u662f\u4e00\u6837\u7684\u4f1a\u62a5\u9519\uff0c:) \u8fd9\u90fd\u53d1\u73b0\u4e86\uff0c\u5929\u624d\u554a\u3002 subscriptions = new CopyOnWriteArrayList <> (); subscriptionsByEventType . put ( eventType , subscriptions ); } else { if ( subscriptions . contains ( newSubscription )) { throw new EventBusException ( \"Subscriber \" + subscriber . getClass () + \" already registered to event \" + eventType ); } } int size = subscriptions . size (); //\u8fd9\u91ccsize = 0 ,\u4f46\u662ffor\u5faa\u73af\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u6070\u597d\u91cc\u9762\u7684if\u662f\u53ef\u4ee5\u6267\u884c\u7684\u3002 \u8fd9\u6837subscriptionsByEventType\u4e2d\u7684 subscriptions \u5c31\u6709\u503c\u4e86\u3002 for ( int i = 0 ; i <= size ; i ++ ) { if ( i == size || subscriberMethod . priority > subscriptions . get ( i ). subscriberMethod . priority ) { subscriptions . add ( i , newSubscription ); break ; } } List < Class <?>> subscribedEvents = typesBySubscriber . get ( subscriber ); if ( subscribedEvents == null ) { subscribedEvents = new ArrayList <> (); typesBySubscriber . put ( subscriber , subscribedEvents ); } subscribedEvents . add ( eventType ); //\u53ea\u6709\u6dfb\u52a0\u4e86 sticky\u6ce8\u89e3\u7684\u624d\u6709\u8d70\u8fd9\u91cc\uff0c sticky \u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f //Sticky \u4e8b\u4ef6\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5f53\u4e8b\u4ef6\u53d1\u5e03\u540e\uff0c\u518d\u6709\u8ba2\u9605\u8005\u5f00\u59cb\u8ba2\u9605\u8be5\u7c7b\u578b\u4e8b\u4ef6\uff0c\u4f9d\u7136\u80fd\u6536\u5230\u8be5\u7c7b\u578b\u4e8b\u4ef6\u6700\u8fd1\u4e00\u4e2a Sticky \u4e8b\u4ef6\u3002 //\u6240\u4ee5\u8fd9\u91cc\u5982\u679c\u662f sticky\u4e8b\u4ef6\uff0c\u8fd9\u91cc\u5c31\u5f00\u59cb\u53d1\u9001\u7ed9\u8ba2\u9605\u8005\uff0c\u5373\u4f7f\u8fd8\u6ca1\u6709post(event) \u8fd9\u91cc\u7684event\u90a3\u91cc\u6765\u7684\u5462\uff1fsticky \u7684\u610f\u4e49\u5c31\u6765\u4e86\uff0c\u4ed6\u662f\u53d1\u5e03\u4e8b\u4ef6\u540e\uff0c\u5728\u6709\u8ba2\u9605\u8005 //\u4e5f\u5c31\u662f \u4e4b\u524d\u5c31\u5e94\u8be5\u6709\u53d1\u5e03\u8fc7\u4e8b\u4ef6\uff0c\u8fd9\u91cc\u662f\u80fd\u591f\u53d6\u5230\u4e8b\u4ef6\u5bf9\u8c61\u7684\u3002 if ( subscriberMethod . sticky ) { if ( eventInheritance ) { // Existing sticky events of all subclasses of eventType have to be considered. // Note: Iterating over all events may be inefficient with lots of sticky events, // thus data structure should be changed to allow a more efficient lookup // (e.g. an additional map storing sub classes of super classes: Class -> List<Class>). Set < Map . Entry < Class <?> , Object >> entries = stickyEvents . entrySet (); for ( Map . Entry < Class <?> , Object > entry : entries ) { Class <?> candidateEventType = entry . getKey (); if ( eventType . isAssignableFrom ( candidateEventType )) { Object stickyEvent = entry . getValue (); checkPostStickyEventToSubscription ( newSubscription , stickyEvent ); } } } else { Object stickyEvent = stickyEvents . get ( eventType ); checkPostStickyEventToSubscription ( newSubscription , stickyEvent ); } } } 3.EventBus.post(Object subcriber) \u00b6 \u5230\u8fd9\u4e00\u6b65\u540e\u8ba2\u9605\u8005\u6240\u6709\u7684\u63a5\u53d7\u6d88\u606f\u7684\u65b9\u6cd5\u90fd\u653e\u5728\u4e86**subscriberMethods**\u4e2d\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u7ee7\u7eed\u5206\u6790 \u53d1\u9001\u6d88\u606f\u7684\u6d41\u7a0b\u3002post\u7684\u673a\u5236\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u5728 post\u65b9\u6cd5\u4e2d\u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u7a0b\u5b89\u5168\u7684\u63a7\u5236\u7136\u540e\u904d\u5386 \u961f\u5217\uff0c\u901a\u8fc7 **postSingleEvent**\u6765\u5904\u7406\u5355\u4e2a\u6d88\u606f\u3002 private void postSingleEvent ( Object event , PostingThreadState postingState ) throws Error { //\u8fd9\u91cc\u7684event\u5c31\u662f\u6d88\u606f\uff0c Class <?> eventClass = event . getClass (); boolean subscriptionFound = false ; //\u9ed8\u8ba4\u7684Builde\u5bf9\u8c61\u4e2d\uff0ceventInheritance = true; if ( eventInheritance ) { //\u83b7\u53d6 List < Class <?>> eventTypes = lookupAllEventTypes ( eventClass ); int countTypes = eventTypes . size (); for ( int h = 0 ; h < countTypes ; h ++ ) { Class <?> clazz = eventTypes . get ( h ); subscriptionFound |= postSingleEventForEventType ( event , postingState , clazz ); } } else { subscriptionFound = postSingleEventForEventType ( event , postingState , eventClass ); } if ( ! subscriptionFound ) { if ( logNoSubscriberMessages ) { Log . d ( TAG , \"No subscribers registered for event \" + eventClass ); } if ( sendNoSubscriberEvent && eventClass != NoSubscriberEvent . class && eventClass != SubscriberExceptionEvent . class ) { post ( new NoSubscriberEvent ( this , event )); } } } \u6700\u7ec8\u662f\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u7684\u3002 //\u4f7f\u7528\u53cd\u5c04\u7684\u65b9\u6cd5\u8c03\u7528 \u8ba2\u9605\u6d88\u606f\u7684\u63a5\u53d7\u8005\uff0c\u5e76\u4e14\u4f20\u5165 event \u5bf9\u8c61 void invokeSubscriber ( Subscription subscription , Object event ) { try { subscription . subscriberMethod . method . invoke ( subscription . subscriber , event ); } catch ( InvocationTargetException e ) { handleSubscriberException ( subscription , event , e . getCause ()); } catch ( IllegalAccessException e ) { throw new IllegalStateException ( \"Unexpected exception\" , e ); } }","title":"Android.EventBus[\u6e90\u7801\u5206\u6790]"},{"location":"00Program/Project/2016-04-20-android-eventbus-1.register%E5%88%86%E6%9E%90/#1eventbusregisterobject-subcriber","text":"\u5206\u6790\u601d\u8def\uff0c\u4ee5\u542f\u52a8\u6d41\u7a0b\u7684\u903b\u8f91\u6765\u5206\u6790\uff0c\u6ca1\u6709\u4efb\u4f55\u524d\u7f6e\u6761\u4ef6\u3002\u5982\u679c\u5728\u8d8a\u5230\u53d8\u91cf\u503c\u7684\u95ee\u9898\uff0c\u90fd\u4ee5\u8fd9\u4e2a\u573a\u666f\u4e0b\u7684\u9ed8\u8ba4\u503c\u5e26\u5165 /** * Registers the given subscriber to receive events. Subscribers must call {@link #unregister(Object)} once they * are no longer interested in receiving events. * <p/> * Subscribers have event handling methods that must be annotated by {@link Subscribe}. * The {@link Subscribe} annotation also allows configuration like {@link * ThreadMode} and priority. * \u4e2d\u6587\uff1a\u6ce8\u518csuberscriber\u5bf9\u8c61\u5c06\u4f1a\u6536\u5230\u6d88\u606f\uff0c\u8ba2\u9605\u8005\u5982\u679c\u4e0d\u60f3\u6536\u5230\u6d88\u606f\u9700\u8981\u8c03\u7528 {@link #unregister(Object)} \u65b9\u6cd5\u53d6\u6d88, * \u8ba2\u9605\u8005\u5904\u7406\u63a5\u53d7\u5230\u7684\u4e8b\u4ef6\u5fc5\u987b\u4f7f\u7528\u6ce8\u89e3 {@link Subscribe} \u6765\u63cf\u8ff0\u65b9\u6cd5\uff0c * {@link Subscribe} \u6ce8\u89e3\u540c\u6837\u5bb9\u8bb8\u914d\u7f6e {@link * ThreadMode} \u548c \u4f18\u5148\u7ea7 */ public void register ( Object subscriber ) { // subsriberClass \u8868\u793a\u8ba2\u9605\u8005\u5bf9\u8c61\u7684 class Class <?> subscriberClass = subscriber . getClass (); // \u5bf9\u5e94 subscriberClass \u6240\u6709 \u53ef\u4ee5\u63a5\u53d7\u53d1\u5e03\u8005\u53d1\u5e03\u7684\u6d88\u606f \u7684\u6709 Subscribe \u6ce8\u89e3\u7684\u65b9\u6cd5\u7684\u96c6\u5408\u3002 List < SubscriberMethod > subscriberMethods = subscriberMethodFinder . findSubscriberMethods ( subscriberClass ); synchronized ( this ) { for ( SubscriberMethod subscriberMethod : subscriberMethods ) { subscribe ( subscriber , subscriberMethod ); } } } \u9996\u5148\u770b\u5230\u8ba2\u9605\u8005\u63a5\u53d7\u6d88\u606f\u7684\u65b9\u6cd5\u96c6\u5408\u901a\u8fc7 subscriberMethodFinder.findSubscriberMethods \u6765\u83b7\u53d6\uff0c\u6211\u4eec\u770b\u770b**subscriberMethodFinder** \u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316, \u662f\u5728 EventBus \u7684\u6784\u9020\u5668\u4e2d\u8fdb\u884c\u6ce8\u518c\u7684\u5e76\u4e14\u63a5\u53d7\u4e86 builer\u4e2d\u76843\u4e2a\u53c2\u6570 builder.subscriberInfoIndexes , builder.strictMethodVerification , builder.ignoreGeneratedIndex EventBusBuilder \u5b9e\u4f8b\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u770b\u770b\u5c31\u77e5\u9053\uff0c DEFAULT_BUILDER \u662f\u4e2a\u9759\u6001\u5b9e\u4f8b, private static final EventBusBuilder DEFAULT_BUILDER = new EventBusBuilder(); public EventBus () { this ( DEFAULT_BUILDER ); } EventBus ( EventBusBuilder builder ) { subscriptionsByEventType = new HashMap <> (); typesBySubscriber = new HashMap <> (); stickyEvents = new ConcurrentHashMap <> (); mainThreadPoster = new HandlerPoster ( this , Looper . getMainLooper (), 10 ); backgroundPoster = new BackgroundPoster ( this ); asyncPoster = new AsyncPoster ( this ); indexCount = builder . subscriberInfoIndexes != null ? builder . subscriberInfoIndexes . size () : 0 ; subscriberMethodFinder = new SubscriberMethodFinder ( builder . subscriberInfoIndexes , builder . strictMethodVerification , builder . ignoreGeneratedIndex ); logSubscriberExceptions = builder . logSubscriberExceptions ; logNoSubscriberMessages = builder . logNoSubscriberMessages ; sendSubscriberExceptionEvent = builder . sendSubscriberExceptionEvent ; sendNoSubscriberEvent = builder . sendNoSubscriberEvent ; throwSubscriberException = builder . throwSubscriberException ; eventInheritance = builder . eventInheritance ; executorService = builder . executorService ; } \u7ee7\u7eed\u770b\u770b SubscriberMethodFinder \u7684\u6784\u9020\u5668\u4e2d\u521d\u59cb\u5316\u4e86\u90a3\u4e9b\u4e1c\u897f\uff0c\u90a3\u4e9b\u662f\u9700\u8981\u83b7\u53d6 subscriberMethods \u8fd9\u4e2a\u96c6\u5408\u4f7f\u7528\u7684 \u9996\u5148\u770b\u770b\u5165\u53c2\u503c\uff0c\u53c2\u6570\u503c\u6765\u6e90\u4e8e EventBusBuiler \u7684 DEFAULT_BUILDER \u5bf9\u8c61 so DEFAULT_BUILDER \u7684\u53d6\u503c\u5982\u4e0b builder.subscriberInfoIndexes = null, builder.strictMethodVerification = false; builder.ignoreGeneratedIndex = false; \u90a3\u4e48 EnventBus.getDefault().subscriberMethodFinder \u53d6\u503c \u6ce8\u610f\u5176\u4e2d strictMethodVerification,ignoreGeneratedIndex \u4e3a final\u4fee\u9970\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u56fa\u5b9a\u4e86\u5b83\u7684\u53d6\u503c subscriberMethodFinder.subscriberInfoIndexes = null, subscriberMethodFinder.strictMethodVerification = false; subscriberMethodFinder.ignoreGeneratedIndex = false;","title":"1.EventBus.register(Object subcriber)"},{"location":"00Program/Project/2016-04-20-android-eventbus-1.register%E5%88%86%E6%9E%90/#2subscribermethodfinderfindsubscribermethodsclass-subscriberclass","text":"\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5f00\u59cb\uff0c\u624d\u5f00\u59cb\u67e5\u627e\u7684\u7b2c\u4e00\u6b65\uff0c findSubscriberMethods \u4e2d\u4e5f\u4ec5\u4ec5\u662f\u505a\u4e86\u7f13\u5b58\u8bfb\u53d6\uff0c\u548c\u7a7a\u5224\u65ad\uff0c\u4ee5\u53ca\u4ece\u5176\u4ed6\u65b9\u6cd5\u83b7\u53d6\u7ed3\u679c\u540e\u5b58\u5165\u7f13\u5b58\uff0c\u5176\u4e2d\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6 subscriberMethods \u7684\u65b9\u5f0f\uff0c\u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\u4f1a\u5728\u7a0d\u540e\u89e3\u7b54\u3002 List < SubscriberMethod > findSubscriberMethods ( Class <?> subscriberClass ) { //\u7b2c\u4e00\u6b21\u8fdb\u5165\u80af\u5b9a\u6ca1\u6709\u7f13\u5b58\uff0c\u9700\u8981\u5173\u5fc3\u653e\u5230\u7f13\u51b2\u4e2d\u7684\u4e1c\u897f\u662f\u4ec0\u4e48\uff0c\u600e\u4e48\u6765\u7684\uff1f List < SubscriberMethod > subscriberMethods = METHOD_CACHE . get ( subscriberClass ); if ( subscriberMethods != null ) { return subscriberMethods ; } //\u6839\u636e\u524d\u7f6e\u6761\u4ef6\uff0c\u8fd9\u91cc\u7b2c\u4e00\u6b21\u4e3afalse\uff0c\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u901a\u8fc7\u8fd9\u91cc\u5c31\u80fd\u83b7\u53d6\u5230\u4e86 SubscriberMethod\u7684\u96c6\u5408 if ( ignoreGeneratedIndex ) { subscriberMethods = findUsingReflection ( subscriberClass ); } else { subscriberMethods = findUsingInfo ( subscriberClass ); } if ( subscriberMethods . isEmpty ()) { throw new EventBusException ( \"Subscriber \" + subscriberClass + \" and its super classes have no public methods with the @Subscribe annotation\" ); } else { METHOD_CACHE . put ( subscriberClass , subscriberMethods ); return subscriberMethods ; } } private List < SubscriberMethod > findUsingInfo ( Class <?> subscriberClass ) { FindState findState = prepareFindState (); findState . initForSubscriber ( subscriberClass ); while ( findState . clazz != null ) { //\u901a\u8fc7\u5224\u65ad\u8fd9\u91cc\u4e00\u822c\u60c5\u51b5\u4e0b \u83b7\u53d6\u7684 findState.subscriberInfo == null; findState . subscriberInfo = getSubscriberInfo ( findState ); if ( findState . subscriberInfo != null ) { SubscriberMethod [] array = findState . subscriberInfo . getSubscriberMethods (); for ( SubscriberMethod subscriberMethod : array ) { if ( findState . checkAdd ( subscriberMethod . method , subscriberMethod . eventType )) { findState . subscriberMethods . add ( subscriberMethod ); } } } else { findUsingReflectionInSingleClass ( findState ); } findState . moveToSuperclass (); } return getMethodsAndRelease ( findState ); } So ,\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u90fd\u662f\u901a\u8fc7 findUsingReflectionInSingleClass \u8fd9\u4e2a\u65b9\u6cd5\u53bb\u83b7\u53d6\u8ba2\u9605\u8005\u4e2d\uff0c\u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\u3002 oh oh oh \u771f\u6b63\u7684\u64cd\u4f5c\u5e94\u8be5\u5c31\u662f findUsingReflectionInSingleClass \u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4e86\uff0c\u679c\u7136\u4e5f\u662f\u901a\u8fc7\u53cd\u5c04\u673a\u5236\uff0c\u9996\u5148\u5173\u4e8egetDeclaredMethods()\u81ea\u884c\u8c03\u8bd5\u770b\u4e0b\u5c31\u77e5\u9053\u662f\u90a3\u4e9b\u65b9\u6cd5\u4e86\u3002 private void findUsingReflectionInSingleClass ( FindState findState ) { Method [] methods ; try { // This is faster than getMethods, especially when subscribers are fat classes like Activities // findState.class == subscriberClass , about getDeclaredMethods method using baidu.com and google methods = findState . clazz . getDeclaredMethods (); } catch ( Throwable th ) { // Workaround for java.lang.NoClassDefFoundError, see https://github.com/greenrobot/EventBus/issues/149 methods = findState . clazz . getMethods (); findState . skipSuperClasses = true ; } for ( Method method : methods ) { int modifiers = method . getModifiers (); //\u4e24\u4e2a\u4e3a\u64cd\u4f5c\u7b26\u4fdd\u8bc1\u4e86\u65b9\u6cd5\u7684\u4fee\u9970\u7b26\u5fc5\u987b\u662f public, and non-static and non-abstract, if (( modifiers & Modifier . PUBLIC ) != 0 && ( modifiers & MODIFIERS_IGNORE ) == 0 ) { //\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u96c6\u5408 Class <?>[] parameterTypes = method . getParameterTypes (); //\u539f\u5219\u4e0a\u53ea\u80fd\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u53c2\u6570\u4e00\u822c\u662f \u6d88\u606f\u8f7d\u4f53 Event,\u4e5f\u53ef\u4ee5\u53eb\u505a\u8ba2\u9605\u6d88\u606f\u3002 if ( parameterTypes . length == 1 ) { //\u83b7\u53d6\u65b9\u6cd5\u7684\u6ce8\u89e3\u63cf\u8ff0 Subscribe subscribeAnnotation = method . getAnnotation ( Subscribe . class ); if ( subscribeAnnotation != null ) { //eventType\u8868\u793a\u4e8b\u4ef6\u7c7b\u578b Class <?> eventType = parameterTypes [ 0 ] ; if ( findState . checkAdd ( method , eventType )) { //\u83b7\u53d6\u7ebf\u7a0b\uff0cfindState.chackAdd\u7684\u65f6\u5019\u53ea\u6709\u5728\u7b2c\u4e00\u6b21\u68c0\u6d4b\u7684\u65f6\u5019\u624d\u4f1a\u8fd4\u56detrue,\u5176\u4ed6\u65f6\u5019\u90fd\u662ffalse ThreadMode threadMode = subscribeAnnotation . threadMode (); //\u8fd9\u91cc\u7ec8\u4e8e\u521b\u5efa\u4e86 SubscriberMethod \u5bf9\u8c61\uff0c\u5e76\u4e14\u653e\u5230\u4e86 findState\u5bf9\u8c61\u4e2d\u7684 subscriberMethods \u4e2d\u3002 findState . subscriberMethods . add ( new SubscriberMethod ( method , eventType , threadMode , subscribeAnnotation . priority (), subscribeAnnotation . sticky ())); } } } else if ( strictMethodVerification && method . isAnnotationPresent ( Subscribe . class )) { String methodName = method . getDeclaringClass (). getName () + \".\" + method . getName (); throw new EventBusException ( \"@Subscribe method \" + methodName + \"must have exactly 1 parameter but has \" + parameterTypes . length ); } } else if ( strictMethodVerification && method . isAnnotationPresent ( Subscribe . class )) { String methodName = method . getDeclaringClass (). getName () + \".\" + method . getName (); throw new EventBusException ( methodName + \" is a illegal @Subscribe method: must be public, non-static, and non-abstract\" ); } } }","title":"2.SubscriberMethodFinder.findSubscriberMethods(Class&lt;?&gt; subscriberClass)"},{"location":"00Program/Project/2016-04-20-android-eventbus-1.register%E5%88%86%E6%9E%90/#2eventbussubscribeobject-subscribersubscribermethod-subscribermethod","text":"\u901a\u8fc7\u6ce8\u89e3\u62ff\u5230\u6240\u6709\u7684\u6d88\u606f\u63a5\u53d7\u7684\u65b9\u6cd5\u540e\uff0c\u8fd9\u91cc\u904d\u5386\u6240\u6709\u7684 subcriberMethods, \u8c03\u7528EventBus.subcriber\u5f00\u59cb\u6ce8\u518c\uff0c\u662f\u5728register\u5f00\u59cb\u5b8c\u6210\u7684\u3002 // Must be called in synchronized block private void subscribe ( Object subscriber , SubscriberMethod subscriberMethod ) { //eventType \u8fd9\u91cc\u6307\u7684\u662f \u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\u7684\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u3002 //\u4f8b\u5982 \u5728\u4e0b\u9762\u7684\u65b9\u6cd5\u4e2d eventType = MessageEvent.class /* @Subscribe public void onMessageEvent(MessageEvent event){ Toast.makeText(getApplicationContext(),\"received message \"+event.message,Toast.LENGTH_LONG).show(); }*/ Class <?> eventType = subscriberMethod . eventType ; //Subscription \u662f\u8ba2\u9605\u5bf9\u8c61\uff0c\u5305\u6db5\u4e86 subscriber:\u8ba2\u9605\u8005\u7c7b\uff0csubscriberMethod:\u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\uff0c Subscription newSubscription = new Subscription ( subscriber , subscriberMethod ); //\u901a\u8fc7\u7c7b\u578b\u83b7\u53d6\u5230\uff0c\u7c7b\u578b\u76f8\u5173\u7684\u591a\u6709\u7684 Subcription\u5bf9\u8c61\u96c6\u5408\uff0c CopyOnWriteArrayList < Subscription > subscriptions = subscriptionsByEventType . get ( eventType ); if ( subscriptions == null ) { //\u6ca1\u6709\u7684\u65f6\u5019\u624d\u53bb\u52a0\u5165\uff0c\u6709\u7684\u8bdd\u76f4\u63a5\u62a5\u9519\uff0c\u8fd9\u91cc\u8bf4\u660e\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u540c\u4e00\u4e2a\u8ba2\u9605\u4e2d\u51fa\u73b0\u4e24\u4e2a\u63a5\u53d7\u8ba2\u9605\u6d88\u606f\u7684\u65b9\u6cd5\u7684\u53c2\u6570\u7684\u7c7b\u578b\u662f\u4e00\u6837\u7684\u4f1a\u62a5\u9519\uff0c:) \u8fd9\u90fd\u53d1\u73b0\u4e86\uff0c\u5929\u624d\u554a\u3002 subscriptions = new CopyOnWriteArrayList <> (); subscriptionsByEventType . put ( eventType , subscriptions ); } else { if ( subscriptions . contains ( newSubscription )) { throw new EventBusException ( \"Subscriber \" + subscriber . getClass () + \" already registered to event \" + eventType ); } } int size = subscriptions . size (); //\u8fd9\u91ccsize = 0 ,\u4f46\u662ffor\u5faa\u73af\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u6070\u597d\u91cc\u9762\u7684if\u662f\u53ef\u4ee5\u6267\u884c\u7684\u3002 \u8fd9\u6837subscriptionsByEventType\u4e2d\u7684 subscriptions \u5c31\u6709\u503c\u4e86\u3002 for ( int i = 0 ; i <= size ; i ++ ) { if ( i == size || subscriberMethod . priority > subscriptions . get ( i ). subscriberMethod . priority ) { subscriptions . add ( i , newSubscription ); break ; } } List < Class <?>> subscribedEvents = typesBySubscriber . get ( subscriber ); if ( subscribedEvents == null ) { subscribedEvents = new ArrayList <> (); typesBySubscriber . put ( subscriber , subscribedEvents ); } subscribedEvents . add ( eventType ); //\u53ea\u6709\u6dfb\u52a0\u4e86 sticky\u6ce8\u89e3\u7684\u624d\u6709\u8d70\u8fd9\u91cc\uff0c sticky \u662f\u505a\u4ec0\u4e48\u7684\u5462\uff1f //Sticky \u4e8b\u4ef6\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5f53\u4e8b\u4ef6\u53d1\u5e03\u540e\uff0c\u518d\u6709\u8ba2\u9605\u8005\u5f00\u59cb\u8ba2\u9605\u8be5\u7c7b\u578b\u4e8b\u4ef6\uff0c\u4f9d\u7136\u80fd\u6536\u5230\u8be5\u7c7b\u578b\u4e8b\u4ef6\u6700\u8fd1\u4e00\u4e2a Sticky \u4e8b\u4ef6\u3002 //\u6240\u4ee5\u8fd9\u91cc\u5982\u679c\u662f sticky\u4e8b\u4ef6\uff0c\u8fd9\u91cc\u5c31\u5f00\u59cb\u53d1\u9001\u7ed9\u8ba2\u9605\u8005\uff0c\u5373\u4f7f\u8fd8\u6ca1\u6709post(event) \u8fd9\u91cc\u7684event\u90a3\u91cc\u6765\u7684\u5462\uff1fsticky \u7684\u610f\u4e49\u5c31\u6765\u4e86\uff0c\u4ed6\u662f\u53d1\u5e03\u4e8b\u4ef6\u540e\uff0c\u5728\u6709\u8ba2\u9605\u8005 //\u4e5f\u5c31\u662f \u4e4b\u524d\u5c31\u5e94\u8be5\u6709\u53d1\u5e03\u8fc7\u4e8b\u4ef6\uff0c\u8fd9\u91cc\u662f\u80fd\u591f\u53d6\u5230\u4e8b\u4ef6\u5bf9\u8c61\u7684\u3002 if ( subscriberMethod . sticky ) { if ( eventInheritance ) { // Existing sticky events of all subclasses of eventType have to be considered. // Note: Iterating over all events may be inefficient with lots of sticky events, // thus data structure should be changed to allow a more efficient lookup // (e.g. an additional map storing sub classes of super classes: Class -> List<Class>). Set < Map . Entry < Class <?> , Object >> entries = stickyEvents . entrySet (); for ( Map . Entry < Class <?> , Object > entry : entries ) { Class <?> candidateEventType = entry . getKey (); if ( eventType . isAssignableFrom ( candidateEventType )) { Object stickyEvent = entry . getValue (); checkPostStickyEventToSubscription ( newSubscription , stickyEvent ); } } } else { Object stickyEvent = stickyEvents . get ( eventType ); checkPostStickyEventToSubscription ( newSubscription , stickyEvent ); } } }","title":"2.EventBus.subscribe(Object subscriber,SubscriberMethod subscriberMethod);"},{"location":"00Program/Project/2016-04-20-android-eventbus-1.register%E5%88%86%E6%9E%90/#3eventbuspostobject-subcriber","text":"\u5230\u8fd9\u4e00\u6b65\u540e\u8ba2\u9605\u8005\u6240\u6709\u7684\u63a5\u53d7\u6d88\u606f\u7684\u65b9\u6cd5\u90fd\u653e\u5728\u4e86**subscriberMethods**\u4e2d\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u7ee7\u7eed\u5206\u6790 \u53d1\u9001\u6d88\u606f\u7684\u6d41\u7a0b\u3002post\u7684\u673a\u5236\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u5728 post\u65b9\u6cd5\u4e2d\u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u7a0b\u5b89\u5168\u7684\u63a7\u5236\u7136\u540e\u904d\u5386 \u961f\u5217\uff0c\u901a\u8fc7 **postSingleEvent**\u6765\u5904\u7406\u5355\u4e2a\u6d88\u606f\u3002 private void postSingleEvent ( Object event , PostingThreadState postingState ) throws Error { //\u8fd9\u91cc\u7684event\u5c31\u662f\u6d88\u606f\uff0c Class <?> eventClass = event . getClass (); boolean subscriptionFound = false ; //\u9ed8\u8ba4\u7684Builde\u5bf9\u8c61\u4e2d\uff0ceventInheritance = true; if ( eventInheritance ) { //\u83b7\u53d6 List < Class <?>> eventTypes = lookupAllEventTypes ( eventClass ); int countTypes = eventTypes . size (); for ( int h = 0 ; h < countTypes ; h ++ ) { Class <?> clazz = eventTypes . get ( h ); subscriptionFound |= postSingleEventForEventType ( event , postingState , clazz ); } } else { subscriptionFound = postSingleEventForEventType ( event , postingState , eventClass ); } if ( ! subscriptionFound ) { if ( logNoSubscriberMessages ) { Log . d ( TAG , \"No subscribers registered for event \" + eventClass ); } if ( sendNoSubscriberEvent && eventClass != NoSubscriberEvent . class && eventClass != SubscriberExceptionEvent . class ) { post ( new NoSubscriberEvent ( this , event )); } } } \u6700\u7ec8\u662f\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u7684\u3002 //\u4f7f\u7528\u53cd\u5c04\u7684\u65b9\u6cd5\u8c03\u7528 \u8ba2\u9605\u6d88\u606f\u7684\u63a5\u53d7\u8005\uff0c\u5e76\u4e14\u4f20\u5165 event \u5bf9\u8c61 void invokeSubscriber ( Subscription subscription , Object event ) { try { subscription . subscriberMethod . method . invoke ( subscription . subscriber , event ); } catch ( InvocationTargetException e ) { handleSubscriberException ( subscription , event , e . getCause ()); } catch ( IllegalAccessException e ) { throw new IllegalStateException ( \"Unexpected exception\" , e ); } }","title":"3.EventBus.post(Object subcriber)"},{"location":"00Program/Project/2016-11-19-greendao3/","tags":["Android","GreenDao"],"text":"\u76f8\u5173\u7f51\u5740 \u00b6 1. \u5b98\u65b9\u6587\u6863\u7f51\u5740 2. Github\u4e0aGreenDao\u5730\u5740 3. \u5173\u4e8eGreenDAO 3.0 \u7684\u4f7f\u7528,\u7f51\u53cb\u89e3\u91ca\u7684\u6bd4\u8f83\u597d\u7684\u535a\u5ba2","title":"GreenDAO3"},{"location":"00Program/Project/2016-11-19-greendao3/#_1","text":"1. \u5b98\u65b9\u6587\u6863\u7f51\u5740 2. Github\u4e0aGreenDao\u5730\u5740 3. \u5173\u4e8eGreenDAO 3.0 \u7684\u4f7f\u7528,\u7f51\u53cb\u89e3\u91ca\u7684\u6bd4\u8f83\u597d\u7684\u535a\u5ba2","title":"\u76f8\u5173\u7f51\u5740"},{"location":"00Program/Project/LeakCanary/","tags":["Android","LeakCanary","fork Project"],"text":"\u5f88\u7ed9\u529b\u7684\u5206\u6790\u5de5\u5177\uff0c\u57fa\u672c\u4e0a\u80fd\u591f\u89e3\u51b3\u5185\u5b58\u6cc4\u9732\u7684\u5927\u90e8\u5206\u573a\u666f\uff0c\u6bd4MAT\u770b\u8d77\u6765\u6e05\u6670\u3002 \u5e38\u89c1\u7684\u5185\u5b58\u6cc4\u9732\u7684\u51e0\u79cd\u573a\u666f \u00b6 \u6570\u636e\u5e93\u4e2d\u7684 Cursor \u6ca1\u6709\u5173\u95ed; \u5e7f\u64ad\u63a5\u6536\u5668\u6ca1\u6709\u9500\u6bc1; IO \u64cd\u4f5c\u6ca1\u6709\u8fdb\u884c\u5173\u95ed Bitmap\u6ca1\u6709\u9500\u6bc1 context \u6cc4\u9732 Handler \u6cc4\u9732 \u7ebf\u7a0b\u6cc4\u9732 Adapter \u6bcf\u6b21\u90fd\u76f4\u63a5 new View \u8fd4\u56de\u3002 LeakCanary \u4f7f\u7528\uff1a \u00b6 \u9996\u5148\u8d34\u4e0b github\u7684\u5730\u5740\uff1a https://github.com/square/leakcanary \u4f7f\u7528\u65b9\u6cd5\u53c2\u8003README.md\u6587\u4ef6\u3002 \u6709\u7f51\u7edc\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5c31\u5f88\u65b9\u4fbf\u4e86\u3002like this dependencies { debugCompile ' com . squareup . leakcanary : leakcanary - android : 1.3.1 ' // or 1.4-beta1 releaseCompile ' com . squareup . leakcanary : leakcanary - android - no - op : 1.3.1 ' // or 1.4-beta1 testCompile ' com . squareup . leakcanary : leakcanary - android - no - op : 1.3.1 ' // or 1.4-beta1 } debugCompile \u8868\u793a\u53ea\u4f1a\u5728debug\u6a21\u5f0f\u4e0b\u624d\u4f1a\u53bb\u4f7f\u7528\u8fd9\u4e2a\u4f9d\u8d56\uff0c releaseCompile \u8868\u793a\u53ea\u5728\u53d1\u5e03\u6b63\u5f0f\u7248\u672c\u7684\u65f6\u5019\u533a\u4f7f\u7528\u8fd9\u4e2a\u4f9d\u8d56\u3002\u8fd9\u79cd\u6a21\u5f0f\u975e\u5e38\u65b9\u4fbf\u6211\u4eec\u5728\u53d1\u5e03\u4e0d\u540c\u7684\u5305\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539\u4ee3\u7801\u800c\u53d6\u6d88\u5230\u67d0\u4e9b\u529f\u80fd\u3002 \u6ca1\u6709\u7f51\u7edc\u7684\u5f00\u53d1\u73af\u5883\u5c31\u5f88\u8f9b\u82e6\u4e86\u9700\u8981\u81ea\u5df1\u4e0b\u8f7djar\u3002\u8fd9\u91cc\u6211\u6253\u5305\u4e86leakcanary-jar-1.3\u7684\u5305\uff0c\u5305\u62echaha \u5305\u3002 \u4e0b\u8f7d \u4e0b\u8f7d\u4e4b\u540e\u901a\u8fc7 import library project with jar/aar \u5373\u53ef\u3002 leak Canary \u6848\u4f8b\u5206\u6790 demo\u76f4\u63a5\u4f7f\u7528 liaohuqiu \u7684demo, \u00b6 \u9759\u6001\u6301\u6709 activity fragment \u7b49\u751f\u547d\u5468\u671f\u77ed\u7684 \u89c6\u56fe\u63a7\u4ef6 TestActivity.java @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_test ); TextView textView = ( TextView ) findViewById ( R . id . test_text_view ); TestDataModel . getInstance (). setRetainedTextView ( textView ); } TestDataModel private static TestDataModel sInstance ; private TextView mRetainedTextView ; public static TestDataModel getInstance () { if ( sInstance == null ) { sInstance = new TestDataModel (); } return sInstance ; } public void setRetainedTextView ( TextView textView ) { mRetainedTextView = textView ; } \u8fd9\u6837\u5c31\u4f1a\u6709\u4e00\u4e2a\u6cc4\u9732\uff0cTestDataModel\u7684\u5355\u4f8b\u5bf9\u8c61\u4f1a\u6301\u6709TestActivity \u7684 textView\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5982\u679c\u8fd9\u4e2a\u5355\u4f8b\u65e0\u6cd5\u9500\u6bc1\u5c31\u4f1a\u6709\u5185\u5b58\u6cc4\u9732\uff0c\u8fd9\u4e2a\u4f7f\u7528\u53ea\u9700\u8981\u8fdb\u5165 TestActivity\u540e\u5728\u9000\u51faleakcanary \u5c31\u4f1a\u68c0\u6d4b\u5230\u5185\u5b58\u6cc4\u9732\u3002\u5e76\u4e14\u6709\u76f8\u5173\u7684\u63cf\u8ff0 2.handler \u53d1\u9001\u6d88\u606f\u5728activity destory\u7684\u65f6\u5019\u6ca1\u6709\u505c\u6b62\uff0c\u5bfc\u81f4activity\u4e0d\u80fd\u88ab\u91ca\u653e\uff0c HandlerLeakAcivity.java protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_handler_leak ); mHandler . postDelayed ( loopRunable , 4000l ); } private Handler mHandler = new Handler (); private Runnable loopRunable = new Runnable () { @Override public void run () { Log . d ( \"lll\" , \"loopRunnable is Running\" ); mHandler . postDelayed ( this , 3000L ); } }; \u8d76\u7d27\u4e3a\u4f60\u7684\u9879\u76ee\u6dfb\u52a0 leakcanary \u68c0\u6d4b\u4e0b\u662f\u5426\u6709\u5185\u5b58\u6cc4\u9732\u5427","title":"LeakCanary"},{"location":"00Program/Project/LeakCanary/#_1","text":"\u6570\u636e\u5e93\u4e2d\u7684 Cursor \u6ca1\u6709\u5173\u95ed; \u5e7f\u64ad\u63a5\u6536\u5668\u6ca1\u6709\u9500\u6bc1; IO \u64cd\u4f5c\u6ca1\u6709\u8fdb\u884c\u5173\u95ed Bitmap\u6ca1\u6709\u9500\u6bc1 context \u6cc4\u9732 Handler \u6cc4\u9732 \u7ebf\u7a0b\u6cc4\u9732 Adapter \u6bcf\u6b21\u90fd\u76f4\u63a5 new View \u8fd4\u56de\u3002","title":"\u5e38\u89c1\u7684\u5185\u5b58\u6cc4\u9732\u7684\u51e0\u79cd\u573a\u666f"},{"location":"00Program/Project/LeakCanary/#leakcanary","text":"\u9996\u5148\u8d34\u4e0b github\u7684\u5730\u5740\uff1a https://github.com/square/leakcanary \u4f7f\u7528\u65b9\u6cd5\u53c2\u8003README.md\u6587\u4ef6\u3002 \u6709\u7f51\u7edc\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u5c31\u5f88\u65b9\u4fbf\u4e86\u3002like this dependencies { debugCompile ' com . squareup . leakcanary : leakcanary - android : 1.3.1 ' // or 1.4-beta1 releaseCompile ' com . squareup . leakcanary : leakcanary - android - no - op : 1.3.1 ' // or 1.4-beta1 testCompile ' com . squareup . leakcanary : leakcanary - android - no - op : 1.3.1 ' // or 1.4-beta1 } debugCompile \u8868\u793a\u53ea\u4f1a\u5728debug\u6a21\u5f0f\u4e0b\u624d\u4f1a\u53bb\u4f7f\u7528\u8fd9\u4e2a\u4f9d\u8d56\uff0c releaseCompile \u8868\u793a\u53ea\u5728\u53d1\u5e03\u6b63\u5f0f\u7248\u672c\u7684\u65f6\u5019\u533a\u4f7f\u7528\u8fd9\u4e2a\u4f9d\u8d56\u3002\u8fd9\u79cd\u6a21\u5f0f\u975e\u5e38\u65b9\u4fbf\u6211\u4eec\u5728\u53d1\u5e03\u4e0d\u540c\u7684\u5305\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539\u4ee3\u7801\u800c\u53d6\u6d88\u5230\u67d0\u4e9b\u529f\u80fd\u3002 \u6ca1\u6709\u7f51\u7edc\u7684\u5f00\u53d1\u73af\u5883\u5c31\u5f88\u8f9b\u82e6\u4e86\u9700\u8981\u81ea\u5df1\u4e0b\u8f7djar\u3002\u8fd9\u91cc\u6211\u6253\u5305\u4e86leakcanary-jar-1.3\u7684\u5305\uff0c\u5305\u62echaha \u5305\u3002 \u4e0b\u8f7d \u4e0b\u8f7d\u4e4b\u540e\u901a\u8fc7 import library project with jar/aar \u5373\u53ef\u3002","title":"LeakCanary \u4f7f\u7528\uff1a"},{"location":"00Program/Project/LeakCanary/#leak-canary-demoliaohuqiudemo","text":"\u9759\u6001\u6301\u6709 activity fragment \u7b49\u751f\u547d\u5468\u671f\u77ed\u7684 \u89c6\u56fe\u63a7\u4ef6 TestActivity.java @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_test ); TextView textView = ( TextView ) findViewById ( R . id . test_text_view ); TestDataModel . getInstance (). setRetainedTextView ( textView ); } TestDataModel private static TestDataModel sInstance ; private TextView mRetainedTextView ; public static TestDataModel getInstance () { if ( sInstance == null ) { sInstance = new TestDataModel (); } return sInstance ; } public void setRetainedTextView ( TextView textView ) { mRetainedTextView = textView ; } \u8fd9\u6837\u5c31\u4f1a\u6709\u4e00\u4e2a\u6cc4\u9732\uff0cTestDataModel\u7684\u5355\u4f8b\u5bf9\u8c61\u4f1a\u6301\u6709TestActivity \u7684 textView\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5982\u679c\u8fd9\u4e2a\u5355\u4f8b\u65e0\u6cd5\u9500\u6bc1\u5c31\u4f1a\u6709\u5185\u5b58\u6cc4\u9732\uff0c\u8fd9\u4e2a\u4f7f\u7528\u53ea\u9700\u8981\u8fdb\u5165 TestActivity\u540e\u5728\u9000\u51faleakcanary \u5c31\u4f1a\u68c0\u6d4b\u5230\u5185\u5b58\u6cc4\u9732\u3002\u5e76\u4e14\u6709\u76f8\u5173\u7684\u63cf\u8ff0 2.handler \u53d1\u9001\u6d88\u606f\u5728activity destory\u7684\u65f6\u5019\u6ca1\u6709\u505c\u6b62\uff0c\u5bfc\u81f4activity\u4e0d\u80fd\u88ab\u91ca\u653e\uff0c HandlerLeakAcivity.java protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_handler_leak ); mHandler . postDelayed ( loopRunable , 4000l ); } private Handler mHandler = new Handler (); private Runnable loopRunable = new Runnable () { @Override public void run () { Log . d ( \"lll\" , \"loopRunnable is Running\" ); mHandler . postDelayed ( this , 3000L ); } }; \u8d76\u7d27\u4e3a\u4f60\u7684\u9879\u76ee\u6dfb\u52a0 leakcanary \u68c0\u6d4b\u4e0b\u662f\u5426\u6709\u5185\u5b58\u6cc4\u9732\u5427","title":"leak Canary \u6848\u4f8b\u5206\u6790 demo\u76f4\u63a5\u4f7f\u7528liaohuqiu\u7684demo,"},{"location":"00Program/Project/butterknife840/","text":"\u76f8\u5173\u5730\u5740: \u00b6 ButterKnife \u5b98\u7f51\u5730\u5740 ButterKnife Github ButterKnife \u7f16\u8bd1\u65f6\u6ce8\u89e3,\u89e3\u91ca\u6bd4\u8f83\u8be6\u7ec6\u7684\u4e00\u4e2a\u535a\u5ba2 \u4f7f\u7528\u7b80\u4ecb: \u00b6 \u4f7f\u7528butterKnife\u4e4b\u540e\u4f60\u4f1a\u611f\u89c9\u5f88\u8212\u670d,\u7ed3\u5408 Android-studio \u7684\u63d2\u4ef6 Android Butterknife Zelezny \u4f1a\u66f4\u597d \u4e0d\u7528\u518d\u8f93\u5165 findViewById(ResId) getResource(R.[string][color].resId) \u7b49\u4ee3\u7801 ,\u8fd9\u4e2a\u4f7f\u7528\u7684\u6700\u591a \u7b80\u5316\u4e8b\u4ef6\u54cd\u5e94\u6d41\u7a0b \u4f7f\u7528\u6d41\u7a0b \u00b6 \u8fd9\u4e2a\u6d41\u7a0b\u5bf9\u5e94\u7684\u662f com.jakewharton:butterknife:8.4.0 \u7684\u7248\u672c ,\u8fd9\u4e2a\u5e93\u671f\u95f4\u66f4\u65b0\u8fc7\u597d\u51e0\u6b21\u914d\u7f6e,\u6211\u76f4\u63a5\u63cf\u8ff0\u6700\u65b0\u914d\u7f6e,\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\u7248\u672c\u5bf9\u5e94,\u5426\u5219\u4f1a\u7f16\u8bd1\u62a5\u9519 1.project \u4e2d\u7684 build.gradle \u6dfb\u52a0 butterknife-gradle-plugin \u76848.4.0\u7684\u7248\u672c, buildscript { repositories { mavenCentral () } dependencies { classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0' } } 2.\u5728\u4f7f\u7528\u7684module\u7684**build.grale**\u4e2d\u6dfb\u52a0plugin \u4f9d\u8d56\u548c\u5e93\u4f9d\u8d56 apply plugin: 'com.jakewharton.butterknife' dependencies { compile 'com.jakewharton:butterknife:8.4.0' annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0' } 3.\u5f00\u59cb\u5728\u9879\u76ee\u4e2d\u4f7f\u7528**ButterKnife** // View UI @BindView ( R . id . login_progress ) ProgressBar mProgressView ; @BindView ( R . id . login_form ) ScrollView mLoginFormView ; @BindView ( R . id . email_login_form ) LinearLayout emailLoginForm ; @BindView ( R . id . email ) AutoCompleteTextView mEmailView ; @BindView ( R . id . password ) EditText mPasswordView ; @BindView ( R . id . keystore ) EditText mKeystore ; //click event @OnClick ( R . id . email_sign_in_button ) void onEmailSignInButtonClick () { //TODO implement } @OnLongClick ( R . id . email_sign_in_button ) boolean onEmailSignInButtonLongClick () { //TODO implement attemptLogin (); return true ; } \u5e38\u89c1\u9519\u8bef \u00b6 NullPointException \u57fa\u672c\u5c31\u662f\u7248\u672c\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684.","title":"ButterKnife"},{"location":"00Program/Project/butterknife840/#_1","text":"ButterKnife \u5b98\u7f51\u5730\u5740 ButterKnife Github ButterKnife \u7f16\u8bd1\u65f6\u6ce8\u89e3,\u89e3\u91ca\u6bd4\u8f83\u8be6\u7ec6\u7684\u4e00\u4e2a\u535a\u5ba2","title":"\u76f8\u5173\u5730\u5740:"},{"location":"00Program/Project/butterknife840/#_2","text":"\u4f7f\u7528butterKnife\u4e4b\u540e\u4f60\u4f1a\u611f\u89c9\u5f88\u8212\u670d,\u7ed3\u5408 Android-studio \u7684\u63d2\u4ef6 Android Butterknife Zelezny \u4f1a\u66f4\u597d \u4e0d\u7528\u518d\u8f93\u5165 findViewById(ResId) getResource(R.[string][color].resId) \u7b49\u4ee3\u7801 ,\u8fd9\u4e2a\u4f7f\u7528\u7684\u6700\u591a \u7b80\u5316\u4e8b\u4ef6\u54cd\u5e94\u6d41\u7a0b","title":"\u4f7f\u7528\u7b80\u4ecb:"},{"location":"00Program/Project/butterknife840/#_3","text":"\u8fd9\u4e2a\u6d41\u7a0b\u5bf9\u5e94\u7684\u662f com.jakewharton:butterknife:8.4.0 \u7684\u7248\u672c ,\u8fd9\u4e2a\u5e93\u671f\u95f4\u66f4\u65b0\u8fc7\u597d\u51e0\u6b21\u914d\u7f6e,\u6211\u76f4\u63a5\u63cf\u8ff0\u6700\u65b0\u914d\u7f6e,\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\u7248\u672c\u5bf9\u5e94,\u5426\u5219\u4f1a\u7f16\u8bd1\u62a5\u9519 1.project \u4e2d\u7684 build.gradle \u6dfb\u52a0 butterknife-gradle-plugin \u76848.4.0\u7684\u7248\u672c, buildscript { repositories { mavenCentral () } dependencies { classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0' } } 2.\u5728\u4f7f\u7528\u7684module\u7684**build.grale**\u4e2d\u6dfb\u52a0plugin \u4f9d\u8d56\u548c\u5e93\u4f9d\u8d56 apply plugin: 'com.jakewharton.butterknife' dependencies { compile 'com.jakewharton:butterknife:8.4.0' annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0' } 3.\u5f00\u59cb\u5728\u9879\u76ee\u4e2d\u4f7f\u7528**ButterKnife** // View UI @BindView ( R . id . login_progress ) ProgressBar mProgressView ; @BindView ( R . id . login_form ) ScrollView mLoginFormView ; @BindView ( R . id . email_login_form ) LinearLayout emailLoginForm ; @BindView ( R . id . email ) AutoCompleteTextView mEmailView ; @BindView ( R . id . password ) EditText mPasswordView ; @BindView ( R . id . keystore ) EditText mKeystore ; //click event @OnClick ( R . id . email_sign_in_button ) void onEmailSignInButtonClick () { //TODO implement } @OnLongClick ( R . id . email_sign_in_button ) boolean onEmailSignInButtonLongClick () { //TODO implement attemptLogin (); return true ; }","title":"\u4f7f\u7528\u6d41\u7a0b"},{"location":"00Program/Project/butterknife840/#_4","text":"NullPointException \u57fa\u672c\u5c31\u662f\u7248\u672c\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684.","title":"\u5e38\u89c1\u9519\u8bef"},{"location":"00Program/Python/Pythone-Basic/","tags":"python","text":"","title":"Python Basic"},{"location":"00Program/Web/2016-11-19-grunt/","tags":["Grunt","JavaScript"],"text":"\u76f8\u5173\u77e5\u8bc6 \u00b6 Grunt JavaScript \u4e16\u754c\u7684\u6784\u5efa\u5de5\u5177 \u8fd9\u662f\u5b66\u4e60JavaScript \u7684\u5fc5\u5907\u6280\u80fd .\u5173\u4e8eNPM\u7684\u77e5\u8bc6\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4e86\u89e3,\u4e0d\u4e86\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb,\u6309\u7167\u547d\u4ee4\u6267\u884c\u5c31\u884c\u4e86. \u5b98\u7f51\u4ecb\u7ecd \u73af\u5883\u642d\u5efa,\u5feb\u901f\u5f00\u59cb \u5b9e\u4f8b,\u6211\u4ee5\u8fd9\u4e2a\u535a\u5ba2\u4e3a\u4f8b,\u5176\u4e2d\u7528\u5230\u4e86**GruntFile** \u6765\u7f16\u8bd1\u538b\u7f29Js,css module . exports = function ( grunt ) { // Project configuration. grunt . initConfig ({ pkg : grunt . file . readJSON ( 'package.json' ), uglify : { main : { src : 'js/hux-blog.js' , dest : 'js/hux-blog.min.js' } }, less : { expanded : { options : { paths : [ \"css\" ] }, files : { // general less/hux-blog.less to css/hux-blog.css file. \"css/hux-blog.css\" : \"less/hux-blog.less\" } }, minified : { options : { paths : [ \"css\" ], cleancss : true , compress : true //\u53bb\u6389\u7a7a\u683c\u548c\u6362\u884c }, files : { \"css/hux-blog.min.css\" : \"less/hux-blog.less\" } } }, //\u6dfb\u52a0\u7f16\u8bd1\u6587\u4ef6\u9876\u90e8\u6ce8\u91ca banner : '/*!\\n' + ' * <%= pkg.title %> v<%= pkg.version %> (<%= pkg.homepage %>)\\n' + ' * Copyright <%= grunt.template.today(\"yyyy\") %> <%= pkg.author %>\\n' + ' */\\n' , usebanner : { dist : { options : { position : 'top' , banner : '<%= banner %>' }, files : { src : [ 'css/hux-blog.css' , 'css/hux-blog.min.css' , 'js/hux-blog.min.js' ] } } }, watch : { scripts : { files : [ 'js/hux-blog.js' ], tasks : [ 'uglify' ], options : { spawn : false , }, }, less : { files : [ 'less/*.less' ], tasks : [ 'less' ], options : { spawn : false , } }, }, }); // Load the plugins. grunt . loadNpmTasks ( 'grunt-contrib-uglify' ); grunt . loadNpmTasks ( 'grunt-contrib-less' ); grunt . loadNpmTasks ( 'grunt-banner' ); grunt . loadNpmTasks ( 'grunt-contrib-watch' ); // Default task(s). grunt . registerTask ( 'default' , [ 'uglify' , 'less' , 'usebanner' ]); grunt . registerTask ( 'lessMinicss' , 'less:minified' ); }; grunt.registerTask('lessMinicss','less:minified'); \u4e3e\u4f8b,\u5b9a\u4e49\u4e00\u4e2a task lessMinicss \u7136\u540e\u4f1a\u6267\u884c\u6211\u4eec less\u4e0b\u9762\u7684minified \u8fd9\u4e2a\u662fgrunt\u4e2d\u7684less\u63d2\u4ef6,\u9488\u5bf9less\u8bed\u6cd5\u7684\u7f16\u8bd1\u4e3acss\u6587\u4ef6\u548c\u5bf9css\u6587\u4ef6\u7684\u538b\u7f29.","title":"Grunt"},{"location":"00Program/Web/2016-11-19-grunt/#_1","text":"Grunt JavaScript \u4e16\u754c\u7684\u6784\u5efa\u5de5\u5177 \u8fd9\u662f\u5b66\u4e60JavaScript \u7684\u5fc5\u5907\u6280\u80fd .\u5173\u4e8eNPM\u7684\u77e5\u8bc6\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4e86\u89e3,\u4e0d\u4e86\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb,\u6309\u7167\u547d\u4ee4\u6267\u884c\u5c31\u884c\u4e86. \u5b98\u7f51\u4ecb\u7ecd \u73af\u5883\u642d\u5efa,\u5feb\u901f\u5f00\u59cb \u5b9e\u4f8b,\u6211\u4ee5\u8fd9\u4e2a\u535a\u5ba2\u4e3a\u4f8b,\u5176\u4e2d\u7528\u5230\u4e86**GruntFile** \u6765\u7f16\u8bd1\u538b\u7f29Js,css module . exports = function ( grunt ) { // Project configuration. grunt . initConfig ({ pkg : grunt . file . readJSON ( 'package.json' ), uglify : { main : { src : 'js/hux-blog.js' , dest : 'js/hux-blog.min.js' } }, less : { expanded : { options : { paths : [ \"css\" ] }, files : { // general less/hux-blog.less to css/hux-blog.css file. \"css/hux-blog.css\" : \"less/hux-blog.less\" } }, minified : { options : { paths : [ \"css\" ], cleancss : true , compress : true //\u53bb\u6389\u7a7a\u683c\u548c\u6362\u884c }, files : { \"css/hux-blog.min.css\" : \"less/hux-blog.less\" } } }, //\u6dfb\u52a0\u7f16\u8bd1\u6587\u4ef6\u9876\u90e8\u6ce8\u91ca banner : '/*!\\n' + ' * <%= pkg.title %> v<%= pkg.version %> (<%= pkg.homepage %>)\\n' + ' * Copyright <%= grunt.template.today(\"yyyy\") %> <%= pkg.author %>\\n' + ' */\\n' , usebanner : { dist : { options : { position : 'top' , banner : '<%= banner %>' }, files : { src : [ 'css/hux-blog.css' , 'css/hux-blog.min.css' , 'js/hux-blog.min.js' ] } } }, watch : { scripts : { files : [ 'js/hux-blog.js' ], tasks : [ 'uglify' ], options : { spawn : false , }, }, less : { files : [ 'less/*.less' ], tasks : [ 'less' ], options : { spawn : false , } }, }, }); // Load the plugins. grunt . loadNpmTasks ( 'grunt-contrib-uglify' ); grunt . loadNpmTasks ( 'grunt-contrib-less' ); grunt . loadNpmTasks ( 'grunt-banner' ); grunt . loadNpmTasks ( 'grunt-contrib-watch' ); // Default task(s). grunt . registerTask ( 'default' , [ 'uglify' , 'less' , 'usebanner' ]); grunt . registerTask ( 'lessMinicss' , 'less:minified' ); }; grunt.registerTask('lessMinicss','less:minified'); \u4e3e\u4f8b,\u5b9a\u4e49\u4e00\u4e2a task lessMinicss \u7136\u540e\u4f1a\u6267\u884c\u6211\u4eec less\u4e0b\u9762\u7684minified \u8fd9\u4e2a\u662fgrunt\u4e2d\u7684less\u63d2\u4ef6,\u9488\u5bf9less\u8bed\u6cd5\u7684\u7f16\u8bd1\u4e3acss\u6587\u4ef6\u548c\u5bf9css\u6587\u4ef6\u7684\u538b\u7f29.","title":"\u76f8\u5173\u77e5\u8bc6"},{"location":"00Program/iOS/2016-05-11-ios.1%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/","tags":["objective c"],"text":"\u8bed\u8a00\u5bf9\u5e94\u7684\u522b\u540d language aliases Markdown \u65e0\u522b\u540d,\u6ce8\u610f\u533a\u5206\u5927\u5c0f\u5199 HTML xhtml JavaScript js,node C \u65e0\u522b\u540d\uff0c\u6ce8\u610f\u533a\u5206\u5927\u5c0f\u5199 C++ cpp Objective-C obj-c\u3001objc\u3001objectivec VimL vim\u3001nvim main.m \u6587\u4ef6 #import <Foundation/Foundation.h> int main ( int argc , const char * argv []) { @autoreleasepool { // insert code here... NSLog ( @\"Hello, World!\" ); } return 0 ; } \u8f93\u51fa hello world","title":"IOS \u7b2c\u4e00\u4e2a\u7a0b\u5e8f"},{"location":"01Note/2016-03-06-life-%E6%80%81%E5%BA%A6/","tags":["life","\u611f\u60f3"],"text":"\u65f6\u95f4\u4e45\u7684\u6211\u90fd\u5fd8\u8bb0\u4e86gitpage \u4e2d\u521b\u5efa\u4e00\u4e2aPOST\u7684\u65b9\u6cd5\u3002\u91cd\u63d0\u4e00\u4e0b\uff1a \u521b\u5efa\u4e00\u4e2apost: rake post title=\"your post name\", \u521b\u5efa\u4e00\u4e2apage: rake page name=\"your page name\" \u4eca\u5929\u60f3\u5206\u4eab\u4e00\u4e0b\u5de5\u4f5c\u4e2d\u505a\u4e8b\u7684\u6001\u5ea6\u3002 \u7591\u95ee \u00b6 \u5de5\u4f5c\u6001\u5ea6\u4e00\u76f4\u662f\u4ef6\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u80fd\u591f\u770b\u51fa\u4e00\u4e2a\u4eba\u7684\u4eba\u54c1\u6027\u683c\uff0c\u4e3a\u4eba\u5904\u4e8b\u7684\u6001\u5ea6\u3002\u6211\u7ecf\u5e38\u5728\u65e9\u4e0a\u4f1a\u601d\u8003\u6211\u8fd1\u671f\u4e00\u6bb5\u65f6\u95f4\u7684\u5de5\u4f5c\u6001\u5ea6\uff0c\u90a3\u4e9b\u65b9\u9762\u81ea\u5df1\u505a\u7684\u597d\uff0c\u90a3\u4e9b\u505a\u7684\u4e0d\u597d\u3002\u4e3a\u4ec0\u4e48\u597d\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u597d\uff1f\u5728\u8ba8\u8bba\u6001\u5ea6\u524d\u6211\u89c9\u5f97\u53ef\u4ee5\u5148\u8ba8\u8bba\u4e0b\u5982\u679c\u8ba4\u8bc6\u81ea\u5df1\u3002\u8fd8\u4f9d\u7a00\u8bb0\u5f97\u521d\u4e2d\u6709\u8fd9\u4e48\u4e00\u95e8\u8bfe\u8ba4\u8bc6\u81ea\u5df1\uff0c\u5f53\u65f6\u7684\u60f3\u6cd5\u6001\u5355\u7eaf\uff0c\u8ba4\u4e3a\u8ba4\u8bc6\u81ea\u5df1\u5c31\u662f\u77e5\u9053\u6211\u53eb\u4ec0\u4e48\u5728\u90a3\u4e2a\u73ed\u8bfb\u4e66\uff0c\u5bb6\u4f4f\u54ea\u91cc\u3002\u5728\u73b0\u5728\u770b\u6765\u6211\u89c9\u5f97\u521d\u4e2d\u4e66\u4e0a\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u65e9\u81f3\u5c11\u5728\u90a3\u4e2a\u5e74\u7eaa\u662f\u4e0d\u9002\u5408\u7684\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bf4\uff1f\u6211\u867d\u7136\u5de5\u4f5c\u4e0d\u4e45\u4f46\u662f\u5728\u6211\u89c2\u5bdf\u7684\u540c\u4e8b\u4e2d\u5728\u5de5\u4f5c\u4e2d\u6ca1\u6709\u5f88\u597d\u7684\u5b9a\u4f4d\u81ea\u5df1\u7684\u89d2\u8272\uff0c\u4e5f\u8bb8\u662f\u4e0d\u60f3\u4e5f\u8bb8\u662f\u4e0d\u61c2\u3002\u81f3\u5c11\u6211\u5de5\u4f5c\u548c\u51e0\u5e74\u540e\u624d\u660e\u767d\u90a3\u4e48\u4e00\u70b9\u9053\u7406\u3002 \u8ba4\u8bc6\u81ea\u6211 \u00b6 \u6240\u4ee5\u8ba4\u8bc6\u81ea\u5df1\u771f\u7684\u662f\u4e2a\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u600e\u4e48\u8ba4\u8bc6\u81ea\u5df1\u4e86\uff1f\u8fd9\u91cc\u6211\u5206\u4eab\u4e00\u4e9b\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u6211\u4e0d\u662f\u4e13\u5bb6\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u7801\u519c\uff0c\u9996\u5148\u8ba4\u8bc6\u81ea\u5df1\u5904\u7406\u540c\u4e8b\u3001\u9886\u5bfc\u3001\u5f02\u6027\u4e4b\u95f4\u5173\u7cfb\u7684\u65b9\u5f0f\uff1b\u518d\u8ba4\u8bc6\u81ea\u5df1\u9762\u5bf9\u96be\u9898\u3001\u601d\u8003\u95ee\u9898\u7684\u601d\u8def\uff1b\u6700\u540e\u8ba4\u8bc6\u81ea\u5df1\u5b66\u4e60\u77e5\u8bc6\uff0c\u5de5\u4f5c\u7684\u6b65\u9aa4\u3002\u901a\u8fc7\u65b9\u65b9\u9762\u9762\u8ba4\u8bc6\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f\u6211\u4eec\u4e0d\u4ec5\u4ec5\u662f\u8981\u77e5\u9053\u81ea\u5df1\uff0c\u8fd8\u8981\u77e5\u9053\u81ea\u5df1\u7684\u7f3a\u70b9\uff0c\u81ea\u5df1\u7684\u4f18\u70b9\uff0c\u90a3\u4e9b\u53ef\u4ee5\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u90a3\u4e9b\u505a\u7684\u4e0d\u600e\u4e48\u597d\u7684\u600e\u4e48\u4fee\u6539\u4e00\u4e9b\u80fd\u591f\u5b8c\u7f8e\u3002\u90a3\u6211\u6765\u8bf4\u5728\u521a\u53c2\u52a0\u5de5\u4f5c\u90a3\u4f1a\u6211\u53cd\u601d\u5230\u4e86\u6211\u7684\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u6ca1\u6709\u81ea\u5df1\u7684\u7acb\u573a\uff0c\u4eba\u4e91\u4ea6\u4e91\u3002\u53ef\u662f\u600e\u4e48\u529e\u4e86\u8981\u600e\u4e48\u6539\u4e86\uff1f\u540e\u6765\u6211\u5c31\u5b66\u4e60\u522b\u4eba\u90a3\u4e9b\u5728\u8bf4\u8bdd\u505a\u4e8b\u53cd\u9762\u6709\u7acb\u573a\u7684\u4eba\u65f6\u600e\u4e48\u60f3\u5f97\uff0c\u600e\u4e48\u5904\u7406\u4e8b\u60c5\u7684\uff0c\u600e\u4e48\u8868\u8fbe\u81ea\u5df1\u7684\u7acb\u573a\u7684\u3002\u901a\u8fc7\u6162\u6162\u7684\u953b\u70bc\uff0c\u6211\u73b0\u5728\u4e0d\u7ba1\u662f\u505a\u4e8b\u8fd8\u662f\u8bf4\u8bdd\u90fd\u6709\u81ea\u5df1\u7684\u7acb\u573a\uff0c\u660e\u767d\u81ea\u5df1\u7684\u60f3\u6cd5\u548c\u601d\u8def\u3002\u8fd9\u6837\u7684\u4f8b\u5b50\u5728\u6211\u8eab\u4e0a\u8fd8\u6709\u5f88\u591a\uff0c\u53ef\u80fd\u662f\u793e\u4f1a\u7ecf\u9a8c\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5\u7f3a\u70b9\u6bd4\u8f83\u591a\u3002\u8ba4\u8bc6\u81ea\u6211\u4e0d\u662f\u4e00\u5929\u4e24\u5929\u7684\u4e8b\u60c5\uff0c\u800c\u662f\u8981\u5468\u671f\u6027\u7684\u8003\u8651\u56de\u987e\u81ea\u5df1\u7684\u751f\u6d3b\u5de5\u4f5c\u3002 \u5b9a\u4f4d\u81ea\u5df1 \u00b6 \u4e3a\u4ec0\u4e48\u6211\u4ecb\u7ecd\u5de5\u4f5c\u6001\u5ea6\u8981\u5927\u7bc7\u5e45\u7684\u4ecb\u7ecd\u8ba4\u8bc6\u81ea\u6211\uff0c\u6211\u8ba4\u4e3a\u5728\u8ba4\u8bc6\u5230\u81ea\u5df1\u624d\u80fd\u5728\u5de5\u4f5c\u4e2d\u6446\u6b63\u81ea\u5df1\u7684\u6001\u5ea6\uff0c\u624d\u80fd\u5728\u56e2\u961f\u4e2d\u627e\u5230\u81ea\u5df1\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u5e94\u8be5\u6301\u6709\u4ec0\u4e48\u6837\u7684\u6001\u5ea6\u4e86\uff1f\u6211\u4e0d\u6562\u518d\u8fd9\u91cc\u8bf4\u4e00\u5957\u6807\u51c6\uff0c\u53ea\u80fd\u8bf4\u5206\u4eab\u4e00\u4e9b\u81ea\u5df1\u7684\u6001\u5ea6\u7ed9\u5927\u5bb6\uff0c\u81f3\u5c11\u5728\u6280\u672f\u63d0\u5347\u4e0a\u4f1a\u6709\u5e2e\u52a9\u7684\u3002 1.\u4e8b\u505a\u597d\uff1a\u4e0d\u7ba1\u662f\u4ec0\u4e48\u4e8b\u60c5\uff0c\u53ea\u8981\u81ea\u5df1\u63a5\u624b\u505a\u4e86\uff0c\u5c31\u8981\u505a\u597d\uff0c\u4fdd\u8bc1\u6ca1\u6709\u95ee\u9898\uff0c\u6bd4\u5982\u5728\u5199\u7a0b\u5e8f\u8fd9\u79cd\u4e8b\u60c5\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u63a5\u624b\u522b\u4eba\u7684\u4ee3\u7801\uff0c\u80af\u5b9a\u6709\u5f88\u591a\u4ee3\u7801\u770b\u4e0d\u987a\u773c\uff0c\u6216\u8005\u6709\u5f88\u591a\u95ee\u9898\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ea\u8981\u6709\u65f6\u95f4\u548c\u80fd\u529b\u4e00\u5b9a\u8981\u5c3d\u529b\u53bb\u505a\u597d\uff0c\u5373\u4f7f\u662f\u4fee\u6539\u522b\u4eba\u7684\u4ee3\u7801\u3002 2.\u73cd\u60dc\u65f6\u95f4\uff1a\u5de5\u4f5c\u4e2d\u4e0d\u662f\u4e00\u76f4\u5230\u5f88\u5fd9\u7279\u522b\u662f\u50cf\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u884c\u4e1a\uff0c\u7ecf\u5e38\u6709\u4e9b\u65f6\u5019\u6bd4\u8f83\u7a7a\u95f2\uff0c\u8fd9\u4e2a\u65f6\u5019\u662f\u770b\u770b\u7f51\u9875\uff0c\u73a9\u73a9\u624b\u673a\uff0c\u8fd8\u662f\u770b\u770b\u522b\u4eba\u597d\u7684\u4ee3\u7801\uff0c\u5b66\u4e60\u65b0\u77e5\u8bc6\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u90fd\u4f1a\u9009\u62e9\u8212\u670d\u7684\u4e8b\u60c5\u505a\uff0c\ud83d\ude04\u3002\u65f6\u95f4\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u5f88\u73cd\u8d35\u7684\uff0c\u4e00\u5b9a\u8981\u73cd\u60dc\u3002 3.\u79ef\u6781\u4e3b\u52a8\uff1a\u5de5\u4f5c\u4e8b\u60c5\u57fa\u672c\u4e0a\u90fd\u662f\u5206\u914d\u7684\uff0c\u4e0d\u8981\u8ba4\u4e3a\u505a\u5b8c\u81ea\u5df1\u7684\u4e8b\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\u3002\u591a\u770b\u770b\u6574\u4e2a\u7cfb\u7edf\u7684\u7ed3\u6784\uff0c\u5404\u4e2a\u6a21\u5757\u7684\u529f\u80fd\u3002\u56f0\u96be\u7684\u4e8b\u60c5\u4e3b\u52a8\u62c5\u3002\u9047\u5230\u95ee\u9898\u4e0d\u8fc7\u7528\u4e00\u53e5\u6211\u4e0d\u4f1a\u6765\u5bf9\u4ed8\uff0c\u627e\u5230\u96be\u70b9\u7136\u540e\u627e\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u6709\u4e0d\u60f3\u505a\u4e8b\u7684\u4eba\uff0c\u6ca1\u6709\u4eba\u505a\u4e0d\u597d\u7684\u4e8b\u3002\u76f8\u4fe1\u65b9\u6cd5\u603b\u6bd4\u95ee\u9898\u591a\u3002 4.\u505a\u4e8b120%\uff1a\u8fd9\u4e2a\u662f\u6211\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u5408\u683c\u7684\u9879\u76ee\u7ecf\u7406\u544a\u8bc9\u7684\uff0c\u7b2c\u4e00\u6b21\u542c\u5230\u8fd9\u53e5\u8bdd\u7684\u65f6\u5019\u53ef\u80fd\u8fd8\u6ca1\u6709\u4f53\u4f1a\u5230\u60f3\u6211\u73b0\u5728\u9886\u7565\u7684\u8fd9\u4e2a\u591a\uff0c\u603b\u4e4b\u544a\u6211\u4eec\u505a\u4e8b\u591a\u8003\u8651\uff0c\u591a\u5f80\u524d\u8d70\u4e24\u6b65\uff0c\u4e0d\u8981\u522b\u4eba\u63a8\u4e00\u6b65\u8d70\u4e00\u6b65\u3002\u5f53\u7136\u6001\u5ea6\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u5f88\u591a\u65b9\u65b9\u9762\u9762\u3002\u6211\u76f8\u4fe1\u80fd\u591f\u575a\u6301\u4e0a\u9762\u76844\u6761\u4f60\u7684\u5de5\u4f5c\u4e00\u5b9a\u4f1a\u5f88\u5408\u683c\uff0c\u80fd\u591f\u5728\u6280\u672f\u8fd9\u6761\u8def\u4e0a\u6210\u957f\u3002","title":"\u6001\u5ea6"},{"location":"01Note/2016-03-06-life-%E6%80%81%E5%BA%A6/#_1","text":"\u5de5\u4f5c\u6001\u5ea6\u4e00\u76f4\u662f\u4ef6\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u80fd\u591f\u770b\u51fa\u4e00\u4e2a\u4eba\u7684\u4eba\u54c1\u6027\u683c\uff0c\u4e3a\u4eba\u5904\u4e8b\u7684\u6001\u5ea6\u3002\u6211\u7ecf\u5e38\u5728\u65e9\u4e0a\u4f1a\u601d\u8003\u6211\u8fd1\u671f\u4e00\u6bb5\u65f6\u95f4\u7684\u5de5\u4f5c\u6001\u5ea6\uff0c\u90a3\u4e9b\u65b9\u9762\u81ea\u5df1\u505a\u7684\u597d\uff0c\u90a3\u4e9b\u505a\u7684\u4e0d\u597d\u3002\u4e3a\u4ec0\u4e48\u597d\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u597d\uff1f\u5728\u8ba8\u8bba\u6001\u5ea6\u524d\u6211\u89c9\u5f97\u53ef\u4ee5\u5148\u8ba8\u8bba\u4e0b\u5982\u679c\u8ba4\u8bc6\u81ea\u5df1\u3002\u8fd8\u4f9d\u7a00\u8bb0\u5f97\u521d\u4e2d\u6709\u8fd9\u4e48\u4e00\u95e8\u8bfe\u8ba4\u8bc6\u81ea\u5df1\uff0c\u5f53\u65f6\u7684\u60f3\u6cd5\u6001\u5355\u7eaf\uff0c\u8ba4\u4e3a\u8ba4\u8bc6\u81ea\u5df1\u5c31\u662f\u77e5\u9053\u6211\u53eb\u4ec0\u4e48\u5728\u90a3\u4e2a\u73ed\u8bfb\u4e66\uff0c\u5bb6\u4f4f\u54ea\u91cc\u3002\u5728\u73b0\u5728\u770b\u6765\u6211\u89c9\u5f97\u521d\u4e2d\u4e66\u4e0a\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u65e9\u81f3\u5c11\u5728\u90a3\u4e2a\u5e74\u7eaa\u662f\u4e0d\u9002\u5408\u7684\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bf4\uff1f\u6211\u867d\u7136\u5de5\u4f5c\u4e0d\u4e45\u4f46\u662f\u5728\u6211\u89c2\u5bdf\u7684\u540c\u4e8b\u4e2d\u5728\u5de5\u4f5c\u4e2d\u6ca1\u6709\u5f88\u597d\u7684\u5b9a\u4f4d\u81ea\u5df1\u7684\u89d2\u8272\uff0c\u4e5f\u8bb8\u662f\u4e0d\u60f3\u4e5f\u8bb8\u662f\u4e0d\u61c2\u3002\u81f3\u5c11\u6211\u5de5\u4f5c\u548c\u51e0\u5e74\u540e\u624d\u660e\u767d\u90a3\u4e48\u4e00\u70b9\u9053\u7406\u3002","title":"\u7591\u95ee"},{"location":"01Note/2016-03-06-life-%E6%80%81%E5%BA%A6/#_2","text":"\u6240\u4ee5\u8ba4\u8bc6\u81ea\u5df1\u771f\u7684\u662f\u4e2a\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u600e\u4e48\u8ba4\u8bc6\u81ea\u5df1\u4e86\uff1f\u8fd9\u91cc\u6211\u5206\u4eab\u4e00\u4e9b\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u6211\u4e0d\u662f\u4e13\u5bb6\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u7801\u519c\uff0c\u9996\u5148\u8ba4\u8bc6\u81ea\u5df1\u5904\u7406\u540c\u4e8b\u3001\u9886\u5bfc\u3001\u5f02\u6027\u4e4b\u95f4\u5173\u7cfb\u7684\u65b9\u5f0f\uff1b\u518d\u8ba4\u8bc6\u81ea\u5df1\u9762\u5bf9\u96be\u9898\u3001\u601d\u8003\u95ee\u9898\u7684\u601d\u8def\uff1b\u6700\u540e\u8ba4\u8bc6\u81ea\u5df1\u5b66\u4e60\u77e5\u8bc6\uff0c\u5de5\u4f5c\u7684\u6b65\u9aa4\u3002\u901a\u8fc7\u65b9\u65b9\u9762\u9762\u8ba4\u8bc6\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f\u6211\u4eec\u4e0d\u4ec5\u4ec5\u662f\u8981\u77e5\u9053\u81ea\u5df1\uff0c\u8fd8\u8981\u77e5\u9053\u81ea\u5df1\u7684\u7f3a\u70b9\uff0c\u81ea\u5df1\u7684\u4f18\u70b9\uff0c\u90a3\u4e9b\u53ef\u4ee5\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u90a3\u4e9b\u505a\u7684\u4e0d\u600e\u4e48\u597d\u7684\u600e\u4e48\u4fee\u6539\u4e00\u4e9b\u80fd\u591f\u5b8c\u7f8e\u3002\u90a3\u6211\u6765\u8bf4\u5728\u521a\u53c2\u52a0\u5de5\u4f5c\u90a3\u4f1a\u6211\u53cd\u601d\u5230\u4e86\u6211\u7684\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u6ca1\u6709\u81ea\u5df1\u7684\u7acb\u573a\uff0c\u4eba\u4e91\u4ea6\u4e91\u3002\u53ef\u662f\u600e\u4e48\u529e\u4e86\u8981\u600e\u4e48\u6539\u4e86\uff1f\u540e\u6765\u6211\u5c31\u5b66\u4e60\u522b\u4eba\u90a3\u4e9b\u5728\u8bf4\u8bdd\u505a\u4e8b\u53cd\u9762\u6709\u7acb\u573a\u7684\u4eba\u65f6\u600e\u4e48\u60f3\u5f97\uff0c\u600e\u4e48\u5904\u7406\u4e8b\u60c5\u7684\uff0c\u600e\u4e48\u8868\u8fbe\u81ea\u5df1\u7684\u7acb\u573a\u7684\u3002\u901a\u8fc7\u6162\u6162\u7684\u953b\u70bc\uff0c\u6211\u73b0\u5728\u4e0d\u7ba1\u662f\u505a\u4e8b\u8fd8\u662f\u8bf4\u8bdd\u90fd\u6709\u81ea\u5df1\u7684\u7acb\u573a\uff0c\u660e\u767d\u81ea\u5df1\u7684\u60f3\u6cd5\u548c\u601d\u8def\u3002\u8fd9\u6837\u7684\u4f8b\u5b50\u5728\u6211\u8eab\u4e0a\u8fd8\u6709\u5f88\u591a\uff0c\u53ef\u80fd\u662f\u793e\u4f1a\u7ecf\u9a8c\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5\u7f3a\u70b9\u6bd4\u8f83\u591a\u3002\u8ba4\u8bc6\u81ea\u6211\u4e0d\u662f\u4e00\u5929\u4e24\u5929\u7684\u4e8b\u60c5\uff0c\u800c\u662f\u8981\u5468\u671f\u6027\u7684\u8003\u8651\u56de\u987e\u81ea\u5df1\u7684\u751f\u6d3b\u5de5\u4f5c\u3002","title":"\u8ba4\u8bc6\u81ea\u6211"},{"location":"01Note/2016-03-06-life-%E6%80%81%E5%BA%A6/#_3","text":"\u4e3a\u4ec0\u4e48\u6211\u4ecb\u7ecd\u5de5\u4f5c\u6001\u5ea6\u8981\u5927\u7bc7\u5e45\u7684\u4ecb\u7ecd\u8ba4\u8bc6\u81ea\u6211\uff0c\u6211\u8ba4\u4e3a\u5728\u8ba4\u8bc6\u5230\u81ea\u5df1\u624d\u80fd\u5728\u5de5\u4f5c\u4e2d\u6446\u6b63\u81ea\u5df1\u7684\u6001\u5ea6\uff0c\u624d\u80fd\u5728\u56e2\u961f\u4e2d\u627e\u5230\u81ea\u5df1\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u5e94\u8be5\u6301\u6709\u4ec0\u4e48\u6837\u7684\u6001\u5ea6\u4e86\uff1f\u6211\u4e0d\u6562\u518d\u8fd9\u91cc\u8bf4\u4e00\u5957\u6807\u51c6\uff0c\u53ea\u80fd\u8bf4\u5206\u4eab\u4e00\u4e9b\u81ea\u5df1\u7684\u6001\u5ea6\u7ed9\u5927\u5bb6\uff0c\u81f3\u5c11\u5728\u6280\u672f\u63d0\u5347\u4e0a\u4f1a\u6709\u5e2e\u52a9\u7684\u3002 1.\u4e8b\u505a\u597d\uff1a\u4e0d\u7ba1\u662f\u4ec0\u4e48\u4e8b\u60c5\uff0c\u53ea\u8981\u81ea\u5df1\u63a5\u624b\u505a\u4e86\uff0c\u5c31\u8981\u505a\u597d\uff0c\u4fdd\u8bc1\u6ca1\u6709\u95ee\u9898\uff0c\u6bd4\u5982\u5728\u5199\u7a0b\u5e8f\u8fd9\u79cd\u4e8b\u60c5\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u63a5\u624b\u522b\u4eba\u7684\u4ee3\u7801\uff0c\u80af\u5b9a\u6709\u5f88\u591a\u4ee3\u7801\u770b\u4e0d\u987a\u773c\uff0c\u6216\u8005\u6709\u5f88\u591a\u95ee\u9898\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ea\u8981\u6709\u65f6\u95f4\u548c\u80fd\u529b\u4e00\u5b9a\u8981\u5c3d\u529b\u53bb\u505a\u597d\uff0c\u5373\u4f7f\u662f\u4fee\u6539\u522b\u4eba\u7684\u4ee3\u7801\u3002 2.\u73cd\u60dc\u65f6\u95f4\uff1a\u5de5\u4f5c\u4e2d\u4e0d\u662f\u4e00\u76f4\u5230\u5f88\u5fd9\u7279\u522b\u662f\u50cf\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u884c\u4e1a\uff0c\u7ecf\u5e38\u6709\u4e9b\u65f6\u5019\u6bd4\u8f83\u7a7a\u95f2\uff0c\u8fd9\u4e2a\u65f6\u5019\u662f\u770b\u770b\u7f51\u9875\uff0c\u73a9\u73a9\u624b\u673a\uff0c\u8fd8\u662f\u770b\u770b\u522b\u4eba\u597d\u7684\u4ee3\u7801\uff0c\u5b66\u4e60\u65b0\u77e5\u8bc6\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u90fd\u4f1a\u9009\u62e9\u8212\u670d\u7684\u4e8b\u60c5\u505a\uff0c\ud83d\ude04\u3002\u65f6\u95f4\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u5f88\u73cd\u8d35\u7684\uff0c\u4e00\u5b9a\u8981\u73cd\u60dc\u3002 3.\u79ef\u6781\u4e3b\u52a8\uff1a\u5de5\u4f5c\u4e8b\u60c5\u57fa\u672c\u4e0a\u90fd\u662f\u5206\u914d\u7684\uff0c\u4e0d\u8981\u8ba4\u4e3a\u505a\u5b8c\u81ea\u5df1\u7684\u4e8b\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\u3002\u591a\u770b\u770b\u6574\u4e2a\u7cfb\u7edf\u7684\u7ed3\u6784\uff0c\u5404\u4e2a\u6a21\u5757\u7684\u529f\u80fd\u3002\u56f0\u96be\u7684\u4e8b\u60c5\u4e3b\u52a8\u62c5\u3002\u9047\u5230\u95ee\u9898\u4e0d\u8fc7\u7528\u4e00\u53e5\u6211\u4e0d\u4f1a\u6765\u5bf9\u4ed8\uff0c\u627e\u5230\u96be\u70b9\u7136\u540e\u627e\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u6709\u4e0d\u60f3\u505a\u4e8b\u7684\u4eba\uff0c\u6ca1\u6709\u4eba\u505a\u4e0d\u597d\u7684\u4e8b\u3002\u76f8\u4fe1\u65b9\u6cd5\u603b\u6bd4\u95ee\u9898\u591a\u3002 4.\u505a\u4e8b120%\uff1a\u8fd9\u4e2a\u662f\u6211\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u5408\u683c\u7684\u9879\u76ee\u7ecf\u7406\u544a\u8bc9\u7684\uff0c\u7b2c\u4e00\u6b21\u542c\u5230\u8fd9\u53e5\u8bdd\u7684\u65f6\u5019\u53ef\u80fd\u8fd8\u6ca1\u6709\u4f53\u4f1a\u5230\u60f3\u6211\u73b0\u5728\u9886\u7565\u7684\u8fd9\u4e2a\u591a\uff0c\u603b\u4e4b\u544a\u6211\u4eec\u505a\u4e8b\u591a\u8003\u8651\uff0c\u591a\u5f80\u524d\u8d70\u4e24\u6b65\uff0c\u4e0d\u8981\u522b\u4eba\u63a8\u4e00\u6b65\u8d70\u4e00\u6b65\u3002\u5f53\u7136\u6001\u5ea6\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u5f88\u591a\u65b9\u65b9\u9762\u9762\u3002\u6211\u76f8\u4fe1\u80fd\u591f\u575a\u6301\u4e0a\u9762\u76844\u6761\u4f60\u7684\u5de5\u4f5c\u4e00\u5b9a\u4f1a\u5f88\u5408\u683c\uff0c\u80fd\u591f\u5728\u6280\u672f\u8fd9\u6761\u8def\u4e0a\u6210\u957f\u3002","title":"\u5b9a\u4f4d\u81ea\u5df1"},{"location":"01Note/2016-03-06-travevel-morning-jiaochangwei/","tags":["life","travel"],"text":"\u6df1\u5733-\u6d77\u8fb9-\u8f83\u573a\u5c3e \u00b6 \u65c5\u6e38\u662f\u4e00\u4e2a\u6c38\u4e45\u7684\u8bdd\u9898\uff0c\u96be\u9053\u4e00\u4e2a\u673a\u4f1a\u5728\u6df1\u5733\u7684\u6d77\u8fb9\u5ea6\u8fc7\u4e86\u4e00\u4e2a\u591c\u665a\uff0c\u6d77\u8fb9\u7684\u623f\u5b50\u4e5f\u5f88\u591a\u9519\uff0c\u88c5\u4fee\u7684\u5f88\u7cbe\u7ec6\uff0c\u665a\u4e0a\u8fd8\u6709\u81ea\u52a9\u70e7\u70e4,\u73a9\u7684\u5f88happy. \u65e9\u4e0a\u548c\u8001\u5a46\u4e00\u8d77\u53bb\u770b\u4e86\u4eba\u751f\u4e2d\u7b2c\u4e00\u6b21\u6d77\u8fb9\u7684\u65e5\u51fa\u3002 \u65c5\u6e38\u786e\u5b9e\u5f88\u5f00\u5fc3\uff0c\u6211\u5bf9\u65c5\u6e38\u7684\u770b\u6cd5\u89c9\u5f97\u6211\u4eec\u5e94\u8be5\u2018\u5bcc\u6e38\u2019\uff0c\u8fd9\u6b21\u51fa\u95e8\u7684\u884c\u7a0b\u5b89\u6392\uff0c\u8f66\u7a0b\uff0c\u4f4f\u5bbf\uff0c\u5403\u996d\uff0c\u90fd\u662f\u5b89\u6392\u597d\u7684\uff0c\u800c\u4e14\u57fa\u672c\u5f88\u65b9\u4fbf\u3002\u7701\u53bb\u4e86\u5f88\u591a\u70e6\u607c\u3002\u4f5c\u4e3a\u7a0b\u5e8f\u5458\u7684\u6211\u4e0d\u559c\u6b22\u8bf4\u592a\u591a\u3002\u6700\u540e\u8d34\u56fe\u4e00\u5f20\u6765\u4ecb\u7ecd\u8fd9\u7bc7\u77ed\u6682\u7684\u535a\u5ba2\u3002 \u65e9\u4e0a\u7684\u6d77","title":"\u65c5\u6e38"},{"location":"01Note/2016-03-06-travevel-morning-jiaochangwei/#-","text":"\u65c5\u6e38\u662f\u4e00\u4e2a\u6c38\u4e45\u7684\u8bdd\u9898\uff0c\u96be\u9053\u4e00\u4e2a\u673a\u4f1a\u5728\u6df1\u5733\u7684\u6d77\u8fb9\u5ea6\u8fc7\u4e86\u4e00\u4e2a\u591c\u665a\uff0c\u6d77\u8fb9\u7684\u623f\u5b50\u4e5f\u5f88\u591a\u9519\uff0c\u88c5\u4fee\u7684\u5f88\u7cbe\u7ec6\uff0c\u665a\u4e0a\u8fd8\u6709\u81ea\u52a9\u70e7\u70e4,\u73a9\u7684\u5f88happy. \u65e9\u4e0a\u548c\u8001\u5a46\u4e00\u8d77\u53bb\u770b\u4e86\u4eba\u751f\u4e2d\u7b2c\u4e00\u6b21\u6d77\u8fb9\u7684\u65e5\u51fa\u3002 \u65c5\u6e38\u786e\u5b9e\u5f88\u5f00\u5fc3\uff0c\u6211\u5bf9\u65c5\u6e38\u7684\u770b\u6cd5\u89c9\u5f97\u6211\u4eec\u5e94\u8be5\u2018\u5bcc\u6e38\u2019\uff0c\u8fd9\u6b21\u51fa\u95e8\u7684\u884c\u7a0b\u5b89\u6392\uff0c\u8f66\u7a0b\uff0c\u4f4f\u5bbf\uff0c\u5403\u996d\uff0c\u90fd\u662f\u5b89\u6392\u597d\u7684\uff0c\u800c\u4e14\u57fa\u672c\u5f88\u65b9\u4fbf\u3002\u7701\u53bb\u4e86\u5f88\u591a\u70e6\u607c\u3002\u4f5c\u4e3a\u7a0b\u5e8f\u5458\u7684\u6211\u4e0d\u559c\u6b22\u8bf4\u592a\u591a\u3002\u6700\u540e\u8d34\u56fe\u4e00\u5f20\u6765\u4ecb\u7ecd\u8fd9\u7bc7\u77ed\u6682\u7684\u535a\u5ba2\u3002 \u65e9\u4e0a\u7684\u6d77","title":"\u6df1\u5733-\u6d77\u8fb9-\u8f83\u573a\u5c3e"},{"location":"05Tools/2016-11-19-softwaremac/","tags":["Sublime Text","Mac tools"],"text":"Sublime Text 3 \u914d\u7f6e Code Snippet \u00b6 \u201cTools\u201d->\"Developer\"->\u201cNew Snippet...\u201d <snippet> <content> <![CDATA[ Hello, ${1:this} is a ${2:snippet}. ]]> </content> <!-- Optional: \u914d\u7f6e\u7528\u6765\u81ea\u52a8\u63d0\u793a\u7684\u5173\u952e\u5b57 --> <tabTrigger> hello </tabTrigger> <!-- Optional: \u914d\u7f6e\u5728\u54ea\u4e9b\u8bed\u8a00\u73af\u5883\u4e0b\u624d\u4f1a\u89e6\u53d1, \u4e0d\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u5168\u5c40\u90fd\u662f --> <!-- <scope>source.python</scope> --> </snippet> \u547d\u540d\u683c\u5f0f *.sublime-snippet \u4e00\u5b9a\u662f\u4ee5 .sublime-snippet \u7684\u683c\u5f0f\u4fdd\u5b58 Sublime Text 3 \u5f00\u542f\u81ea\u52a8\u6362\u884c \u00b6 \u6253\u5f00 Preferences -> Setting - User\uff08\u8bbe\u7f6e - \u7528\u6237\uff09 \u6dfb\u52a0\u914d\u7f6e \"word_wrap\" : true { \"color_scheme\" : \"Packages/Dracula Color Scheme/Dracula.tmTheme\" , // some co nf ig .... \"word_wrap\" : true }","title":"SublimeT text 3"},{"location":"05Tools/2016-11-19-softwaremac/#sublime-text-3-code-snippet","text":"\u201cTools\u201d->\"Developer\"->\u201cNew Snippet...\u201d <snippet> <content> <![CDATA[ Hello, ${1:this} is a ${2:snippet}. ]]> </content> <!-- Optional: \u914d\u7f6e\u7528\u6765\u81ea\u52a8\u63d0\u793a\u7684\u5173\u952e\u5b57 --> <tabTrigger> hello </tabTrigger> <!-- Optional: \u914d\u7f6e\u5728\u54ea\u4e9b\u8bed\u8a00\u73af\u5883\u4e0b\u624d\u4f1a\u89e6\u53d1, \u4e0d\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u5168\u5c40\u90fd\u662f --> <!-- <scope>source.python</scope> --> </snippet> \u547d\u540d\u683c\u5f0f *.sublime-snippet \u4e00\u5b9a\u662f\u4ee5 .sublime-snippet \u7684\u683c\u5f0f\u4fdd\u5b58","title":"Sublime Text 3 \u914d\u7f6e Code Snippet"},{"location":"05Tools/2016-11-19-softwaremac/#sublime-text-3","text":"\u6253\u5f00 Preferences -> Setting - User\uff08\u8bbe\u7f6e - \u7528\u6237\uff09 \u6dfb\u52a0\u914d\u7f6e \"word_wrap\" : true { \"color_scheme\" : \"Packages/Dracula Color Scheme/Dracula.tmTheme\" , // some co nf ig .... \"word_wrap\" : true }","title":"Sublime Text 3 \u5f00\u542f\u81ea\u52a8\u6362\u884c"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/","tags":["git"],"text":"GIT \u6559\u7a0b \u00b6 gitee: https://gitee.com/all-about-git Git \u5b66\u4e60\u5efa\u8bae \u00b6 \u591a\u7ec3\uff0c\u5728 github\u4e0a\u5f00\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u64cd\u4f5c\u3002\u719f\u7ec3\u4f7f\u7528\u57fa\u672c\u547d\u4ee4\uff0c\u6587\u4ef6\u63d0\u4ef7\uff0c\u66f4\u65b0\uff0c\u64a4\u9500\uff0c\u5206\u652f\u7684\u521b\u5efa\uff0c\u5207\u6362\uff0c\u6682\u7f13\uff0c\u5220\u9664\uff0c\u5408\u62fc\uff0c\u65e5\u5fd7\u7684\u67e5\u770b... \u591a\u4f7f\u7528\u547d\u4ee4\u884c\u3002 \u57fa\u672c\u64cd\u4f5c \u00b6 1. \u63d0\u4ea4\u6d41\u7a0b \u00b6 git add //\u4ece\u5de5\u4f5c\u76ee\u5f55\u63d0\u4ea4\u5230index\u533a git commit -m \"comment\" //\u628aindex\u533a\u7684\u4ee3\u7801\u63d0\u4ea4\u5230\u672c\u5730\u5e93\u5e76\u4e14\u6dfb\u52a0comment\u6ce8\u91ca git push origin master{local}:master{remote} //\u628a\u672c\u5730\u5e93\u4e2d\u7684Masterlocal \u5206\u652f\u63a8\u9001\u5230\u670d\u52a1\u5668\u4e0a\u8fdc\u7a0b\u5e93\u540d\u4e3aorigin\u7684masterremote\u5206\u652f 2. \u66f4\u65b0\u6d41\u7a0b \u00b6 git fetch //\u62c9\u53d6\u4ee3\u7801\u5230\u672c\u5730\uff0c git merge origin/develop //\u628aorigin/develop \u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u3002\u5982\u679c\u4e0d\u52a0\u5206\u652f\u540d\uff0c\u4f1a\u5408\u5e76\u548c\u5f53\u524d\u5206\u652f\u540c\u540d\u7684\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730\u3002 git pull == git fetch + git merge // \u4ece\u670d\u52a1\u5668\u62c9\u53d6\u5e76\u4e14\u5408\u5e76\u5206\u652f\u3002 \u66f4\u65b0\u6700\u6015\u7684\u5c31\u662f\u66f4\u65b0\u5931\u8d25\uff0c\u90a3\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u5931\u8d25\u4e86\uff1f\u5f88\u7b80\u5355 \u5c31\u662f\u670d\u52a1\u5668\u6709\u8ddf\u65b0\u7684\u6587\u4ef6\u4f1aoverride\u4f60\u672c\u5730\u7684\u6587\u4ef6\u65f6\u5c31\u4f1a\u5931\u8d25\u3002\u5c31\u662f\u6709\u540c\u4e00\u4e2a\u6587\u4ef6\u4e24\u4e2a\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u8bf4\u5f97\u64cd\u4f5c\u800c\u4e0d\u662f\u4eba\uff0c\u5c31\u662f\u8bf4\u901a\u8fc7\u4e2a\u4eba\u4e24\u6b21\u64cd\u4f5c\u4e5f\u4f1a\u66f4\u65b0\u5931\u8d25\u3002\u597d\u5427\u4e0d\u8981\u8bf4\u5f97\u592a\u590d\u6742\u5728\u6587\u7ae0\u7684\u6700\u540e\u63a8\u8350\u6700\u4f73\u64cd\u4f5c\u3002\u4f7f\u7528\u6700\u4f73\u64cd\u4f5c\u4e00\u822c\u4e0d\u4f1a\u6709\u95ee\u9898\u3002 3. \u51b2\u7a81\u89e3\u51b3 \u00b6 \u8fd9\u4e5f\u8bb8\u662f\u65e0\u6570\u4eba\u90fd\u5bb3\u6015\u7684\u4e8b\u60c5\uff0c\u4ea7\u751f\u51b2\u7a81\u7684\u539f\u56e0\u5c31\u662f\u5408\u5e76\uff0c\u65e0\u975e\u662f\u76f4\u63a5pull \u548c git fetch \u540e git merge. \u51b2\u7a81\u4ea7\u751f\u540e\uff0c\u4f7f\u7528 git status \u770b\u770b\u90a3\u4e9b\u6587\u4ef6\u51b2\u7a81\u4e86\uff0c\u7136\u540e\u6328\u4e2a\u4fee\u6539\uff0c\u5982\u4f55\u4fee\u6539\u5462\uff1f\u4e00\u822c\u6709\u51b2\u7a81 \u7684\u6587\u4ef6\u90fd\u6709\u5982\u4e0b\u683c\u5f0f\uff1a <<<<<< < header \u672c\u5730\u6539\u52a8 =============== \u670d\u52a1\u7aef\u6539\u52a8 >>>>>>> origin \u5bf9\u6bd4\u4e24\u4e2a\u7248\u672c\u7684\u5730\u65b9\uff0c\u53d6\u820d\uff0c\u7136\u540e\u5220\u9664\u6807\u8bb0\u7b26\uff0c \u6240\u6709\u7684\u51b2\u7a81\u90fd\u89e3\u51b3\u540e\u4f7f\u7528 git commit -a -m \"comment\" \u63d0\u4ea4\u4fee\u6539\u51b2\u7a81 \u7136\u540e\u5c31\u53ef\u4ee5\u4e86\u3002 \u5206\u652f\u4e4b\u95f4 commit \u8fc1\u79fb git cherry-pick \u00b6 \u6709\u5206\u652f A ,B \u6211\u5728 A\u4e0a\u9762\u63d0\u4ea4\u4e86\u4e00\u4e2acommit \u4f46\u662f\u53d1\u73b0 B \u540c\u6837\u8fd9\u4e2a\u63d0\u4ea4\u4e5f\u8981\u6dfb\u52a0\uff0c\u544a\u8bc9\u4f60\u4eec\u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u547d\u4ee4\u7684\u65f6\u5019\uff0c\u771f\u5fc3\u662f\u5728B\u5168\u90e8\u4fee\u6539\u4e00\u904d\u540ecommit,\u8981\u662f\u6587\u4ef6\u5c11\u8fd8\u597d\uff0c\u6587\u4ef6\u591a\u7b80\u76f4\u8981\u54ed\u6b7b\u7684\u8282\u594f\u3002\u6240\u4ee5\u627e\u5230\u4e86\u8fd9\u4e2a\u547d\u4ee4\u3002\u4f7f\u7528\u65b9\u6cd5\uff1a git cherry-pick 'commitId' \u5176\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u51b2\u7a81 \u6216\u8005\u60f3\u8981\u653e\u5f03\u4fee\u6539 \u5728git \u547d\u4ee4\u884c\u6709\u63d0\u793a\u3002 \u6700\u4f73\u5b9e\u8df5\uff0c \u00b6 \u5982\u679c\u672c\u5730\u8ddd\u79bb\u4e0a\u6b21\u6ca1\u6709\u505a\u4efb\u4f55\u6539\u52a8\uff0c git pull \u672c\u5730\u6709\u4fee\u6539 \u9996\u5148\u63d0\u4ea4\u5230\u672c\u5730\uff0c git add , git commit \u7136\u540e git fetch , git merge \u8fd9\u4e2a\u65f6\u5019\u6709\u51b2\u7a81\uff0c\u4fee\u6539\u5373\u53ef \uff0c\u8fd9\u8fb9\u4fdd\u8bc1\u672c\u5730\u4fee\u6539\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u8986\u76d6\u3002 git \u540e\u6094\u836f \u00b6 git checkout -- 'file' //\u628a\u5de5\u4f5c\u76ee\u5f55\u7684\u4fee\u6539\u8fd8\u539f\u4e3a\u7f13\u51b2\u533a\u4e2d\u4ee3\u7801\u3002\u4e5f\u5c31\u662f\u653e\u5f03\u672c\u5730\u4fee\u6539 git reset HEAD 'file' //\u628a\u7f13\u51b2\u533a\u7684\u6587\u4ef6\u8fd8\u539f\u5230\u6ca1\u6709add\u4e4b\u524d\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u540e\u9000 add \u547d\u4ee4\u7684\u64cd\u4f5c git reset --hard HEAD //\u628a\u672c\u5730\u5e93\u7684\u63d0\u4ea4\u64a4\u9500\uff0c\u4f1a\u64a4\u9500\u7f13\u51b2\u533a\uff0c\u5de5\u4f5c\u76ee\u5f55\u7684\u6240\u6709\u4fee\u6539\uff0cHEAD \u53ef\u4ee5\u4e3a \u5206\u652f\u540d\uff0ccommitID ... reset \u8fd8\u6709\u5f88\u591a\u7528\u6cd5\uff0c\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6,\u6ee1\u8db3\u6240\u4ee5\u7684\u64a4\u9500\u64cd\u4f5c\u3002","title":"Git \u6982\u8981"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#git","text":"gitee: https://gitee.com/all-about-git","title":"GIT \u6559\u7a0b"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#git_1","text":"\u591a\u7ec3\uff0c\u5728 github\u4e0a\u5f00\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u64cd\u4f5c\u3002\u719f\u7ec3\u4f7f\u7528\u57fa\u672c\u547d\u4ee4\uff0c\u6587\u4ef6\u63d0\u4ef7\uff0c\u66f4\u65b0\uff0c\u64a4\u9500\uff0c\u5206\u652f\u7684\u521b\u5efa\uff0c\u5207\u6362\uff0c\u6682\u7f13\uff0c\u5220\u9664\uff0c\u5408\u62fc\uff0c\u65e5\u5fd7\u7684\u67e5\u770b... \u591a\u4f7f\u7528\u547d\u4ee4\u884c\u3002","title":"Git \u5b66\u4e60\u5efa\u8bae"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#_1","text":"","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#1","text":"git add //\u4ece\u5de5\u4f5c\u76ee\u5f55\u63d0\u4ea4\u5230index\u533a git commit -m \"comment\" //\u628aindex\u533a\u7684\u4ee3\u7801\u63d0\u4ea4\u5230\u672c\u5730\u5e93\u5e76\u4e14\u6dfb\u52a0comment\u6ce8\u91ca git push origin master{local}:master{remote} //\u628a\u672c\u5730\u5e93\u4e2d\u7684Masterlocal \u5206\u652f\u63a8\u9001\u5230\u670d\u52a1\u5668\u4e0a\u8fdc\u7a0b\u5e93\u540d\u4e3aorigin\u7684masterremote\u5206\u652f","title":"1. \u63d0\u4ea4\u6d41\u7a0b"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#2","text":"git fetch //\u62c9\u53d6\u4ee3\u7801\u5230\u672c\u5730\uff0c git merge origin/develop //\u628aorigin/develop \u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u3002\u5982\u679c\u4e0d\u52a0\u5206\u652f\u540d\uff0c\u4f1a\u5408\u5e76\u548c\u5f53\u524d\u5206\u652f\u540c\u540d\u7684\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730\u3002 git pull == git fetch + git merge // \u4ece\u670d\u52a1\u5668\u62c9\u53d6\u5e76\u4e14\u5408\u5e76\u5206\u652f\u3002 \u66f4\u65b0\u6700\u6015\u7684\u5c31\u662f\u66f4\u65b0\u5931\u8d25\uff0c\u90a3\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u5931\u8d25\u4e86\uff1f\u5f88\u7b80\u5355 \u5c31\u662f\u670d\u52a1\u5668\u6709\u8ddf\u65b0\u7684\u6587\u4ef6\u4f1aoverride\u4f60\u672c\u5730\u7684\u6587\u4ef6\u65f6\u5c31\u4f1a\u5931\u8d25\u3002\u5c31\u662f\u6709\u540c\u4e00\u4e2a\u6587\u4ef6\u4e24\u4e2a\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u8bf4\u5f97\u64cd\u4f5c\u800c\u4e0d\u662f\u4eba\uff0c\u5c31\u662f\u8bf4\u901a\u8fc7\u4e2a\u4eba\u4e24\u6b21\u64cd\u4f5c\u4e5f\u4f1a\u66f4\u65b0\u5931\u8d25\u3002\u597d\u5427\u4e0d\u8981\u8bf4\u5f97\u592a\u590d\u6742\u5728\u6587\u7ae0\u7684\u6700\u540e\u63a8\u8350\u6700\u4f73\u64cd\u4f5c\u3002\u4f7f\u7528\u6700\u4f73\u64cd\u4f5c\u4e00\u822c\u4e0d\u4f1a\u6709\u95ee\u9898\u3002","title":"2. \u66f4\u65b0\u6d41\u7a0b"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#3","text":"\u8fd9\u4e5f\u8bb8\u662f\u65e0\u6570\u4eba\u90fd\u5bb3\u6015\u7684\u4e8b\u60c5\uff0c\u4ea7\u751f\u51b2\u7a81\u7684\u539f\u56e0\u5c31\u662f\u5408\u5e76\uff0c\u65e0\u975e\u662f\u76f4\u63a5pull \u548c git fetch \u540e git merge. \u51b2\u7a81\u4ea7\u751f\u540e\uff0c\u4f7f\u7528 git status \u770b\u770b\u90a3\u4e9b\u6587\u4ef6\u51b2\u7a81\u4e86\uff0c\u7136\u540e\u6328\u4e2a\u4fee\u6539\uff0c\u5982\u4f55\u4fee\u6539\u5462\uff1f\u4e00\u822c\u6709\u51b2\u7a81 \u7684\u6587\u4ef6\u90fd\u6709\u5982\u4e0b\u683c\u5f0f\uff1a <<<<<< < header \u672c\u5730\u6539\u52a8 =============== \u670d\u52a1\u7aef\u6539\u52a8 >>>>>>> origin \u5bf9\u6bd4\u4e24\u4e2a\u7248\u672c\u7684\u5730\u65b9\uff0c\u53d6\u820d\uff0c\u7136\u540e\u5220\u9664\u6807\u8bb0\u7b26\uff0c \u6240\u6709\u7684\u51b2\u7a81\u90fd\u89e3\u51b3\u540e\u4f7f\u7528 git commit -a -m \"comment\" \u63d0\u4ea4\u4fee\u6539\u51b2\u7a81 \u7136\u540e\u5c31\u53ef\u4ee5\u4e86\u3002","title":"3. \u51b2\u7a81\u89e3\u51b3"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#commit-git-cherry-pick","text":"\u6709\u5206\u652f A ,B \u6211\u5728 A\u4e0a\u9762\u63d0\u4ea4\u4e86\u4e00\u4e2acommit \u4f46\u662f\u53d1\u73b0 B \u540c\u6837\u8fd9\u4e2a\u63d0\u4ea4\u4e5f\u8981\u6dfb\u52a0\uff0c\u544a\u8bc9\u4f60\u4eec\u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u547d\u4ee4\u7684\u65f6\u5019\uff0c\u771f\u5fc3\u662f\u5728B\u5168\u90e8\u4fee\u6539\u4e00\u904d\u540ecommit,\u8981\u662f\u6587\u4ef6\u5c11\u8fd8\u597d\uff0c\u6587\u4ef6\u591a\u7b80\u76f4\u8981\u54ed\u6b7b\u7684\u8282\u594f\u3002\u6240\u4ee5\u627e\u5230\u4e86\u8fd9\u4e2a\u547d\u4ee4\u3002\u4f7f\u7528\u65b9\u6cd5\uff1a git cherry-pick 'commitId' \u5176\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u51b2\u7a81 \u6216\u8005\u60f3\u8981\u653e\u5f03\u4fee\u6539 \u5728git \u547d\u4ee4\u884c\u6709\u63d0\u793a\u3002","title":"\u5206\u652f\u4e4b\u95f4 commit \u8fc1\u79fb git cherry-pick"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#_2","text":"\u5982\u679c\u672c\u5730\u8ddd\u79bb\u4e0a\u6b21\u6ca1\u6709\u505a\u4efb\u4f55\u6539\u52a8\uff0c git pull \u672c\u5730\u6709\u4fee\u6539 \u9996\u5148\u63d0\u4ea4\u5230\u672c\u5730\uff0c git add , git commit \u7136\u540e git fetch , git merge \u8fd9\u4e2a\u65f6\u5019\u6709\u51b2\u7a81\uff0c\u4fee\u6539\u5373\u53ef \uff0c\u8fd9\u8fb9\u4fdd\u8bc1\u672c\u5730\u4fee\u6539\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u8986\u76d6\u3002","title":"\u6700\u4f73\u5b9e\u8df5\uff0c"},{"location":"05Tools/Git-%E6%A6%82%E8%A6%81/#git_2","text":"git checkout -- 'file' //\u628a\u5de5\u4f5c\u76ee\u5f55\u7684\u4fee\u6539\u8fd8\u539f\u4e3a\u7f13\u51b2\u533a\u4e2d\u4ee3\u7801\u3002\u4e5f\u5c31\u662f\u653e\u5f03\u672c\u5730\u4fee\u6539 git reset HEAD 'file' //\u628a\u7f13\u51b2\u533a\u7684\u6587\u4ef6\u8fd8\u539f\u5230\u6ca1\u6709add\u4e4b\u524d\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u540e\u9000 add \u547d\u4ee4\u7684\u64cd\u4f5c git reset --hard HEAD //\u628a\u672c\u5730\u5e93\u7684\u63d0\u4ea4\u64a4\u9500\uff0c\u4f1a\u64a4\u9500\u7f13\u51b2\u533a\uff0c\u5de5\u4f5c\u76ee\u5f55\u7684\u6240\u6709\u4fee\u6539\uff0cHEAD \u53ef\u4ee5\u4e3a \u5206\u652f\u540d\uff0ccommitID ... reset \u8fd8\u6709\u5f88\u591a\u7528\u6cd5\uff0c\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6,\u6ee1\u8db3\u6240\u4ee5\u7684\u64a4\u9500\u64cd\u4f5c\u3002","title":"git \u540e\u6094\u836f"},{"location":"05Tools/Jekyll%E5%8D%9A%E5%AE%A2%E8%BD%ACHexo%E5%AE%9E%E8%B7%B5/","tags":["Hexo","Jekyll"],"text":"\u672c\u6765\u4e0d\u51c6\u5907\u5bf9\u8fd9\u6b21\u7684\u5207\u6362\u505a\u4e2a\u603b\u7ed3\u7684\uff0c\u7f51\u4e0a\u7684\u6559\u7a0b\u786e\u5b9e\u90fd\u5f88\u8be6\u60c5\u4e86\uff0c\u4e0d\u8fc7\u8fd8\u662f\u60f3\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\u548c\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u5207\u6362\u7684\u8bdd\u4e00\u8def\u90fd\u5f88\u987a\u5229,\u5173\u952ehexo\u8fd8\u6709\u4e2d\u6587\u3002\u8fd8\u662f\u8bb0\u5f55\u4e0b\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700 \u73af\u5883\u5907\u6ce8 \u00b6 \u6574\u6539\u524d: mac + jekyll \u90e8\u7f72\u5230 github pages \u4e0a\u9762 \u914d\u7f6e\u6709(\u591a\u8bf4) \u6574\u6539\u540e: mac + hexo \u90e8\u7f72\u5230 github pages \u548c conding pages \u914d\u7f6e\u6709(\u9605\u8bfb\u7edf\u8ba1\uff0c\u56fe\u7247\u6539\u4e3a\u5916\u94fe\u4e03\u725b\uff0c\u767e\u5ea6\u7edf\u8ba1) \u5de5\u5177\u6e05\u5355 \u00b6 git,node,npm,hexo,sublime text, \u76f8\u5173\u5730\u5740 \u00b6 a. hexo\u5b98\u7f51\uff0c\u6709\u8be6\u7ec6\u7684\u535a\u5ba2\u642d\u5efa\u6559\u7a0b https://hexo.io/zh-cn/docs/ b. next\u4e3b\u9898\u6559\u7a0b,\u4e3b\u9898\u5173\u8054\u8be6\u7ec6\u914d\u7f6e http://theme-next.iissnan.com/getting-started.html c. \u767e\u5ea6\u7edf\u8ba1\u767b\u5f55 https://tongji.baidu.com/web/welcome/login d. next\u4e3b\u9898\u4e0b\u914d\u7f6ePOST\u7684\u9605\u8bfb\u6570 https://notes.wanghao.work/2015-10-21-\u4e3aNexT\u4e3b\u9898\u6dfb\u52a0\u6587\u7ae0\u9605\u8bfb\u91cf\u7edf\u8ba1\u529f\u80fd.html \uff0cleancloud\u6ce8\u518c\u5730\u5740 https://leancloud.cn/ e. \u535a\u5ba2\u641c\u7d22 https://www.algolia.com/ f. \u4e03\u725b\u5b58\u50a8 https://www.qiniu.com/ Hexo deploy \u00b6 \u8fd9\u4e2a\u547d\u4ee4\u786e\u5b9e\u5f88\u597d\u7528\u53ea\u4f1a\u628a\u7f16\u8bd1\u597d\u7684\u9759\u6001\u9875\u9762\u8fdb\u884c\u4f20\u9012\u5230page\u7684\u914d\u7f6e\u5e93\uff0c\u800c\u6e90\u4ee3\u7801\u4f60\u53ef\u4ee5\u4fdd\u5b58\u5728\u672c\u5730\u4e5f\u53ef\u4ee5\u4fdd\u5b58\u5728\u67d0\u4e2a\u79c1\u6709\u914d\u7f6e\u5e93\u5982\u679c\u4f60\u4e0d\u60f3\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u8bdd\uff0c a. \u670d\u52a1\u5668\u4e0a\u9762\u521b\u5efa\u914d\u7f6e\u5e93\uff0c\u5e76\u4e14\u521d\u59cb\u5316\u548c\u521b\u5efa\u597d\u5206\u652f, github\u4e0a\u9762\u5206\u652fgh-pages ,coding\u4e0a\u9762\u5206\u652f coding-pages. b. \u5982\u679c\u4f7f\u7528ssh\u534f\u8bae\u7684\u8bdd\uff0c\u9700\u8981\u914d\u7f6e\u516c\u94a5\u7528\u6765\u5728deploy\u8fdb\u884c\u4ee3\u7801\u7684\u63a8\u9001\uff0c\u914d\u7f6e\u65b9\u6cd5 Github\u914d\u7f6e , Coding\u914d\u7f6e c. Hexo\u4e2d\u914d\u7f6edeploy\u7684 - type: git repo: git@github.com:xxxx/blog.git branch: gh-pages message: hexo\u81ea\u52a8\u63d0\u4ea4 - type: git repo: git@git.coding.net:xxxx/blog.git branch: coding-pages message: hexo\u81ea\u52a8\u63d0\u4ea4 d.\u5f53\u672c\u5730\u90fd\u7f16\u8bd1\u5b8c\u6210\u540e\u63d0\u4ea4\u4ee3\u7801\u5230pages\u5206\u652f\u7684\u8bdd\u76f4\u63a5 hexo deploy \u5c0f\u95ee\u9898 \u00b6 a. next\u4e3b\u9898\u6559\u7a0b\u4e2d\u83dc\u5355\u7684\u914d\u7f6e\u4e2d\u540d\u79f0\u548c\u56fe\u6807\u662f\u5206\u5f00\u7684\uff0c\u4e0d\u8fc7\u5728next5.1.3\u7684\u7248\u672c\u4e2d\u56fe\u6807\u548c\u83dc\u5355\u7684\u8def\u5f84\u662f\u4e00\u8d77\u914d\u7f6e\u7684\uff0c'||' \u524d\u9762\u7684\u662f\u5728\u535a\u5ba2\u4e2d\u70b9\u51fb\u540e\u6307\u5411\u7684\u76ee\u5f55 '||'\u540e\u9762\u7684\u662f awesome \u7684\u56fe\u6807\uff0c\u5728\u7f16\u5199\u7684\u8fc7\u7a0b\u4e2d\u4e00\u5473\u7684\u6309\u7167\u6587\u6863\u6765\uff0c\u50bb\u4e0d\u62c9\u51e0\u7684\u5728\u54ea\u91cc\u8c03\u8bd5\uff0c\u7136\u540e\u8fd8\u53bb\u770b\u4e86\u4ee3\u7801\uff0c\u6700\u540e\u53d1\u73b0\u6ce8\u91ca\u4e2d\u6709\u8bf4\u660e\u3002 menu: home: / || home android: /android/ || android about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive b. algolia \u641c\u7d22 api key \u65e0\u6cd5\u8bbf\u95ee \uff0c\u5728 api key \u9ed8\u8ba4\u751f\u6210\u7684search api key\u7684\u6743\u9650\u4e0d\u591f \u9996\u5148\u6211\u4eec\u8981\u914d\u7f6e\u4e00\u4e2a\u73af\u5883\u53d8\u91cf HEXO_ALGOLIA_INDEXING_KEY=apikey export HEXO_ALGOLIA_INDEXING_KEY = apikey \u9ed8\u8ba4apikey\u4fee\u6539\u6743\u9650\uff1a\u5728apikey\u7684\u4fee\u6539\u754c\u9762\uff0c\u8fdb\u884c\u6743\u9650\u914d\u7f6e\uff0c\u5168\u90e8\u2611\ufe0f\u5373\u53ef","title":"Jekyll to Hexo"},{"location":"05Tools/Jekyll%E5%8D%9A%E5%AE%A2%E8%BD%ACHexo%E5%AE%9E%E8%B7%B5/#_1","text":"\u6574\u6539\u524d: mac + jekyll \u90e8\u7f72\u5230 github pages \u4e0a\u9762 \u914d\u7f6e\u6709(\u591a\u8bf4) \u6574\u6539\u540e: mac + hexo \u90e8\u7f72\u5230 github pages \u548c conding pages \u914d\u7f6e\u6709(\u9605\u8bfb\u7edf\u8ba1\uff0c\u56fe\u7247\u6539\u4e3a\u5916\u94fe\u4e03\u725b\uff0c\u767e\u5ea6\u7edf\u8ba1)","title":"\u73af\u5883\u5907\u6ce8"},{"location":"05Tools/Jekyll%E5%8D%9A%E5%AE%A2%E8%BD%ACHexo%E5%AE%9E%E8%B7%B5/#_2","text":"git,node,npm,hexo,sublime text,","title":"\u5de5\u5177\u6e05\u5355"},{"location":"05Tools/Jekyll%E5%8D%9A%E5%AE%A2%E8%BD%ACHexo%E5%AE%9E%E8%B7%B5/#_3","text":"a. hexo\u5b98\u7f51\uff0c\u6709\u8be6\u7ec6\u7684\u535a\u5ba2\u642d\u5efa\u6559\u7a0b https://hexo.io/zh-cn/docs/ b. next\u4e3b\u9898\u6559\u7a0b,\u4e3b\u9898\u5173\u8054\u8be6\u7ec6\u914d\u7f6e http://theme-next.iissnan.com/getting-started.html c. \u767e\u5ea6\u7edf\u8ba1\u767b\u5f55 https://tongji.baidu.com/web/welcome/login d. next\u4e3b\u9898\u4e0b\u914d\u7f6ePOST\u7684\u9605\u8bfb\u6570 https://notes.wanghao.work/2015-10-21-\u4e3aNexT\u4e3b\u9898\u6dfb\u52a0\u6587\u7ae0\u9605\u8bfb\u91cf\u7edf\u8ba1\u529f\u80fd.html \uff0cleancloud\u6ce8\u518c\u5730\u5740 https://leancloud.cn/ e. \u535a\u5ba2\u641c\u7d22 https://www.algolia.com/ f. \u4e03\u725b\u5b58\u50a8 https://www.qiniu.com/","title":"\u76f8\u5173\u5730\u5740"},{"location":"05Tools/Jekyll%E5%8D%9A%E5%AE%A2%E8%BD%ACHexo%E5%AE%9E%E8%B7%B5/#hexo-deploy","text":"\u8fd9\u4e2a\u547d\u4ee4\u786e\u5b9e\u5f88\u597d\u7528\u53ea\u4f1a\u628a\u7f16\u8bd1\u597d\u7684\u9759\u6001\u9875\u9762\u8fdb\u884c\u4f20\u9012\u5230page\u7684\u914d\u7f6e\u5e93\uff0c\u800c\u6e90\u4ee3\u7801\u4f60\u53ef\u4ee5\u4fdd\u5b58\u5728\u672c\u5730\u4e5f\u53ef\u4ee5\u4fdd\u5b58\u5728\u67d0\u4e2a\u79c1\u6709\u914d\u7f6e\u5e93\u5982\u679c\u4f60\u4e0d\u60f3\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u8bdd\uff0c a. \u670d\u52a1\u5668\u4e0a\u9762\u521b\u5efa\u914d\u7f6e\u5e93\uff0c\u5e76\u4e14\u521d\u59cb\u5316\u548c\u521b\u5efa\u597d\u5206\u652f, github\u4e0a\u9762\u5206\u652fgh-pages ,coding\u4e0a\u9762\u5206\u652f coding-pages. b. \u5982\u679c\u4f7f\u7528ssh\u534f\u8bae\u7684\u8bdd\uff0c\u9700\u8981\u914d\u7f6e\u516c\u94a5\u7528\u6765\u5728deploy\u8fdb\u884c\u4ee3\u7801\u7684\u63a8\u9001\uff0c\u914d\u7f6e\u65b9\u6cd5 Github\u914d\u7f6e , Coding\u914d\u7f6e c. Hexo\u4e2d\u914d\u7f6edeploy\u7684 - type: git repo: git@github.com:xxxx/blog.git branch: gh-pages message: hexo\u81ea\u52a8\u63d0\u4ea4 - type: git repo: git@git.coding.net:xxxx/blog.git branch: coding-pages message: hexo\u81ea\u52a8\u63d0\u4ea4 d.\u5f53\u672c\u5730\u90fd\u7f16\u8bd1\u5b8c\u6210\u540e\u63d0\u4ea4\u4ee3\u7801\u5230pages\u5206\u652f\u7684\u8bdd\u76f4\u63a5 hexo deploy","title":"Hexo deploy"},{"location":"05Tools/Jekyll%E5%8D%9A%E5%AE%A2%E8%BD%ACHexo%E5%AE%9E%E8%B7%B5/#_4","text":"a. next\u4e3b\u9898\u6559\u7a0b\u4e2d\u83dc\u5355\u7684\u914d\u7f6e\u4e2d\u540d\u79f0\u548c\u56fe\u6807\u662f\u5206\u5f00\u7684\uff0c\u4e0d\u8fc7\u5728next5.1.3\u7684\u7248\u672c\u4e2d\u56fe\u6807\u548c\u83dc\u5355\u7684\u8def\u5f84\u662f\u4e00\u8d77\u914d\u7f6e\u7684\uff0c'||' \u524d\u9762\u7684\u662f\u5728\u535a\u5ba2\u4e2d\u70b9\u51fb\u540e\u6307\u5411\u7684\u76ee\u5f55 '||'\u540e\u9762\u7684\u662f awesome \u7684\u56fe\u6807\uff0c\u5728\u7f16\u5199\u7684\u8fc7\u7a0b\u4e2d\u4e00\u5473\u7684\u6309\u7167\u6587\u6863\u6765\uff0c\u50bb\u4e0d\u62c9\u51e0\u7684\u5728\u54ea\u91cc\u8c03\u8bd5\uff0c\u7136\u540e\u8fd8\u53bb\u770b\u4e86\u4ee3\u7801\uff0c\u6700\u540e\u53d1\u73b0\u6ce8\u91ca\u4e2d\u6709\u8bf4\u660e\u3002 menu: home: / || home android: /android/ || android about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive b. algolia \u641c\u7d22 api key \u65e0\u6cd5\u8bbf\u95ee \uff0c\u5728 api key \u9ed8\u8ba4\u751f\u6210\u7684search api key\u7684\u6743\u9650\u4e0d\u591f \u9996\u5148\u6211\u4eec\u8981\u914d\u7f6e\u4e00\u4e2a\u73af\u5883\u53d8\u91cf HEXO_ALGOLIA_INDEXING_KEY=apikey export HEXO_ALGOLIA_INDEXING_KEY = apikey \u9ed8\u8ba4apikey\u4fee\u6539\u6743\u9650\uff1a\u5728apikey\u7684\u4fee\u6539\u754c\u9762\uff0c\u8fdb\u884c\u6743\u9650\u914d\u7f6e\uff0c\u5168\u90e8\u2611\ufe0f\u5373\u53ef","title":"\u5c0f\u95ee\u9898"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/","tags":["markdown"],"text":"\u5199\u535a\u5ba2\u7684\u8fc7\u7a0b\u4e2d\u603b\u559c\u6b22\u5fd8\u8bb0md\u8bed\u6cd5\uff0c\u7136\u540e\u53bb\u767e\u5ea6\u6bd4\u8f83\u6d6a\u8d39\u65f6\u95f4\u3002\u8fd9\u91cc\u8bb0\u5f55\u4e0b\u5e73\u65f6\u5e38\u7528\u7684md\u8bed\u6cd5 \u7e41\u4f53http://markdown.tw/ \u7b80\u4f53\u7ffb\u8bd1http://www.appinn.com/markdown/ MarkDown\u601d\u60f3 \u00b6 \u53ef\u8bfb\u6027\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u662f\u6700\u91cd\u8981\u7684\u3002\u4e00\u4efd\u4f7f\u7528 Markdown \u683c\u5f0f\u64b0\u5199\u7684\u6587\u4ef6\u5e94\u8be5\u53ef\u4ee5\u76f4\u63a5\u4ee5\u7eaf\u6587\u672c\u53d1\u5e03\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u4e0d\u4f1a\u50cf\u662f\u7531\u8bb8\u591a\u6807\u7b7e\u6216\u662f\u683c\u5f0f\u6307\u4ee4\u6240\u6784\u6210\u3002Markdown \u8bed\u6cd5\u53d7\u5230\u4e00\u4e9b\u65e2\u6709 text-to-HTML \u683c\u5f0f\u7684\u5f71\u54cd\uff0c\u5305\u62ec Setext \u3001 atx \u3001 Textile \u3001 reStructuredText \u3001 Grutatext \u548c EtText \uff0c\u800c\u6700\u5927\u7075\u611f\u6765\u6e90\u5176\u5b9e\u662f\u7eaf\u6587\u672c\u7535\u5b50\u90ae\u4ef6\u7684\u683c\u5f0f\u3002 \u603b\u4e4b\uff0c Markdown \u7684\u8bed\u6cd5\u5168\u7531\u4e00\u4e9b\u7b26\u53f7\u6240\u7ec4\u6210\uff0c\u8fd9\u4e9b\u7b26\u53f7\u7ecf\u8fc7\u7cbe\u6311\u7ec6\u9009\uff0c\u5176\u4f5c\u7528\u4e00\u76ee\u4e86\u7136\u3002\u6bd4\u5982\uff1a\u5728\u6587\u5b57\u4e24\u65c1\u52a0\u4e0a\u661f\u53f7\uff0c\u770b\u8d77\u6765\u5c31\u50cf *\u5f3a\u8c03* \u3002Markdown \u7684\u5217\u8868\u770b\u8d77\u6765\uff0c\u55ef\uff0c\u5c31\u662f\u5217\u8868\u3002Markdown \u7684\u533a\u5757\u5f15\u7528\u770b\u8d77\u6765\u5c31\u771f\u7684\u50cf\u662f\u5f15\u7528\u4e00\u6bb5\u6587\u5b57\uff0c\u5c31\u50cf\u4f60\u66fe\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u89c1\u8fc7\u7684\u90a3\u6837\u3002 \u517c\u5bb9Html \u00b6 \u76f4\u63a5\u7f16\u5199 html\u6807\u7b7e\u5728markdown \u65e0\u9700\u5176\u4ed6\u6807\u5fd7\uff0c\u8981\u5236\u7ea6\u7684\u53ea\u6709\u4e00\u4e9b HTML \u533a\u5757\u5143\u7d20\u2015\u2015\u6bd4\u5982 <div> \u3001 <table> \u3001 <pre> \u3001 <p> \u7b49\u6807\u7b7e\uff0c\u5fc5\u987b\u5728\u524d\u540e\u52a0\u4e0a\u7a7a\u884c\u4e0e\u5176\u5b83\u5185\u5bb9\u533a\u9694\u5f00\uff0c\u8fd8\u8981\u6c42\u5b83\u4eec\u7684\u5f00\u59cb\u6807\u7b7e\u4e0e\u7ed3\u5c3e\u6807\u7b7e\u4e0d\u80fd\u7528\u5236\u8868\u7b26\u6216\u7a7a\u683c\u6765\u7f29\u8fdb\u3002 This is a regular paragraph. < table > < tr > < td > Foo </ td > </ tr > </ table > This is another regular paragraph. \u8bf7\u6ce8\u610f \uff0c\u5728 HTML \u533a\u5757\u6807\u7b7e\u95f4\u7684 Markdown \u683c\u5f0f\u8bed\u6cd5\u5c06\u4e0d\u4f1a\u88ab\u5904\u7406\u3002\u6bd4\u5982\uff0c\u4f60\u5728 HTML \u533a\u5757\u5185\u4f7f\u7528 Markdown \u6837\u5f0f\u7684 *\u5f3a\u8c03* \u4f1a\u6ca1\u6709\u6548\u679c\u3002 \u7279\u6b8a\u5b57\u7b26\u8f6c\u6362 \u00b6 < \u548c & \u7279\u6b8a\u5b57\u7b26\u7684\u5904\u7406\uff0cHTMl\u4e2d\u5982\u679c\u4f60\u9700\u8981\u663e\u793a < \u548c & \u5fc5\u987b\u4f7f\u7528\u4ed6\u4eec\u7684\u5b9e\u4f53 &lt; \u548c &amp; \u6765\u8868\u793a \u5728md\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 < & \u5305\u62ec\u5728\u4ee3\u7801\u5757\u4e2d,\u4f8b\u5982 4 < 5 AT & T \u533a\u5757\u5143\u7d20 \u00b6 \u4e00\u4e2a Markdown \u6bb5\u843d\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u7eed\u7684\u6587\u672c\u884c\u7ec4\u6210\uff0c\u5b83\u7684\u524d\u540e\u8981\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u7a7a\u884c\uff08\u7a7a\u884c\u7684\u5b9a\u4e49\u662f\u663e\u793a\u4e0a\u770b\u8d77\u6765\u50cf\u662f\u7a7a\u7684\uff0c\u4fbf\u4f1a\u88ab\u89c6\u4e3a\u7a7a\u884c\u3002\u6bd4\u65b9\u8bf4\uff0c\u82e5\u67d0\u4e00\u884c\u53ea\u5305\u542b\u7a7a\u683c\u548c\u5236\u8868\u7b26\uff0c\u5219\u8be5\u884c\u4e5f\u4f1a\u88ab\u89c6\u4e3a\u7a7a\u884c\uff09\u3002\u666e\u901a\u6bb5\u843d\u4e0d\u8be5\u7528\u7a7a\u683c\u6216\u5236\u8868\u7b26\u6765\u7f29\u8fdb\u3002 \u6807\u9898 \u5229\u7528 = \uff08\u6700\u9ad8\u9636\u6807\u9898\uff09\u548c - \uff08\u7b2c\u4e8c\u9636\u6807\u9898\uff09 \u00b6 \u5e95\u90e8\u53cc\u6a2a\u7ebf ======= \u5e95\u90e8\u5355\u6a2a\u7ebf ------- \u6807\u9898 \u5229\u7528 # \uff08\u6700\u9ad8\u9636\u6807\u9898\uff09 \u00b6 # \u8868\u793a\u6807\u98981 ## \u8868\u793a\u6807\u98982 ###### \u6807\u98986 \u533a\u5757\u5f15\u7528 \u00b6 a. \u6bcf\u884c\u90fd\u6dfb\u52a0 `>` > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. b. \u6bb5\u843d\u7684\u7b2c\u4e00\u884c\u6dfb\u52a0 > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. m....... c. \u591a\u5c42\u6bb5\u843d > This is the first level of quoting. > > > This is nested blockquote > Back to the first level \u533a\u5757\u6548\u679c\u5c55\u793a\u533a\uff1a \u00b6 a. \u6bcf\u884c\u90fd\u6dfb\u52a0 > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. b. \u6bb5\u843d\u7684\u7b2c\u4e00\u884c\u6dfb\u52a0 This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. m....... c. \u591a\u5c42\u6bb5\u843d This is the first level of quoting. This is nested blockquote Back to the first level \u5217\u8868 \u00b6 \u6807\u8bb0\u7b26\u53f7\u6709 * , + , - , \u6570\u7ec4. , * First * Second * Threed + Red + Green + Bue 1. Bird 2. McHale 3. Parish \u5217\u8868\u6548\u679c\u5c55\u793a\u5982\u4e0b\uff1a * First * Second * Threed Red Green Bue Bird McHale Parish \u5217\u8868\u5305\u542b\u6bb5\u843d \u00b6 \u5217\u8868\u9879\u76ee\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6bb5\u843d\uff0c\u6bcf\u4e2a\u9879\u76ee\u4e0b\u7684\u6bb5\u843d\u90fd\u5fc5\u987b\u7f29\u8fdb**4**\u4e2a\u7a7a\u683c\u6216\u662f**1**\u4e2a\u5236\u8868\u7b26\uff1a 1. This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. 2. Suspendisse id sem consectetuer libero luctus adipiscing. \u6548\u679c\u5c55\u793a\u5982\u4e0b\uff1a 1. This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. \u5217\u8868\u5305\u542b\u5f15\u7528 \u00b6 \u5982\u679c\u8981\u5728\u5217\u8868\u9879\u76ee\u5185\u653e\u8fdb\u5f15\u7528\uff0c\u90a3 > \u5c31\u9700\u8981\u7f29\u8fdb,\u7f29\u8fdb\u89c4\u5219**4**\u4e2a\u7a7a\u683c\u548c**1**\u4e2atab\uff1a * A list item with a block > This is a block quote > This is a block quote \u6548\u679c\u6f14\u793a\u5982\u4e0b\uff1a * A list item with a block > This is a block quote > This is a block quote \u5217\u8868\u5305\u542b\u4ee3\u7801\u5757 \u00b6 \u5982\u679c\u8981\u653e\u4ee3\u7801\u533a\u5757\u7684\u8bdd\uff0c\u8be5\u533a\u5757\u5c31\u9700\u8981\u7f29\u8fdb\u4e24\u6b21\uff0c\u4e5f\u5c31\u662f**8**\u4e2a\u7a7a\u683c\u6216\u662f**2**\u4e2a\u5236\u8868\u7b26\uff1a * A list item with a blockquote This is a code in the list item \u6548\u679c\u6f14\u793a\u5982\u4e0b\uff1a * A list item with a blockquote This is a code in the list item \u5982\u679c\u884c\u9996\u51fa\u73b0\u6570\u7ec4+\u70b9\u7684\u7ec4\u5408 100. \u9700\u8981\u505a\u7279\u6b8a\u5904\u7406 \u00b6 1986\\. What a great season. \u5206\u5272\u7ebf \u00b6 \u4e00\u884c\u4e2d\u53ef\u4ee5\u4f7f\u75283\u4e2a\u6216\u80053\u4e2a\u4ee5\u4e0a\u7684 * , - , _ \u6765\u8fdb\u884c\u4e00\u4e2a\u98ce\u683c\u7ebf *** --- ____ \u6548\u679c\u6f14\u793a\u5982\u4e0b\uff1a \u8d85\u94fe\u63a5 \u00b6 Markdown \u652f\u6301\u4e24\u79cd\u5f62\u5f0f\u7684\u94fe\u63a5\u8bed\u6cd5\uff1a \u884c\u5185\u5f0f\u548c\u53c2\u8003\u5f0f\u4e24\u79cd\u5f62\u5f0f\u3002 \u884c\u5185\u5f0f: This is [an example](http://example.com/ \"Title\") inline link. [This link](http://example.net/) has no title attribute. \u53c2\u8003\u5f0f: The click goto [first][1] The click goto [second][2] [1]: https://www.baidu.com \"\u767e\u5ea6\" [2]: https://google.com \"Google\" \u6548\u679c\u5982\u4e0b This is an example inline link. This link has no title attribute. \u53c2\u8003\u5f0f: The click goto first The click goto second \u5b57\u4f53\u6837\u5f0f \u00b6 \u659c\u4f53\uff1a * \u548c _ \u52a0\u7c97\u4f53: ** \u548c __ \u659c\u4f53 *Good* \u659c\u4f53 _Good_ \u52a0\u7c97 **Good** \u52a0\u7c97 __Good__ \u5982\u679c\u4f60\u7684 * \u548c _ \u4e24\u8fb9\u90fd\u6709\u7a7a\u767d\u7684\u8bdd\uff0c\u5b83\u4eec\u5c31\u53ea\u4f1a\u88ab\u5f53\u6210\u666e\u901a\u7684\u7b26\u53f7\u3002 mmm * Good * \u5982\u679c\u9700\u8981`*` \u4f7f\u7528 `\\*` \u6765\u663e\u793a \\*this is a so much money\\* \u659c\u4f53 Good \u659c\u4f53 Good \u52a0\u7c97 Good \u52a0\u7c97 Good mmm * Good * *this is a so much money* \u4ee3\u7801\u5757 \u00b6 \u4e09\u4e2a`\u7b26\u53f7 `print()` print() \u56fe\u7247\u5f15\u7528 \u00b6 Markdown \u4f7f\u7528\u4e00\u79cd\u548c\u94fe\u63a5\u5f88\u76f8\u4f3c\u7684\u8bed\u6cd5\u6765\u6807\u8bb0\u56fe\u7247\uff0c\u540c\u6837\u4e5f\u5141\u8bb8\u4e24\u79cd\u6837\u5f0f\uff1a \u884c\u5185\u5f0f\u548c\u53c2\u8003\u5f0f\u3002 ![\u6211\u7684\u535a\u5ba2](http://img.sc115.com/uploads/sc/cjpgs/1410/apic6991_sc115.com.jpg) ![\u6211\u7684\u535a\u5ba2](http://img.sc115.com/uploads/sc/cjpgs/1410/apic6991_sc115.com.jpg \"My Blogs\") \u663e\u793a\u6548\u679c\uff1a Table \u00b6 This is a table: First Header | Second Header ------------- | ------------- Content Cell | Content Cell Content Cell | Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell You can align cell contents with syntax like this: | Left Aligned | Center Aligned | Right Aligned | |:------------- |:---------------:| -------------:| | col 3 is | some wordy text | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | Left Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 The left- and right-most pipes ( | ) are only aesthetic, and can be omitted. The spaces don\u2019t matter, either. Alignment depends solely on : marks.","title":"MarkDown \u8bed\u6cd5\u5907\u5fd8\u5f55"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#markdown","text":"\u53ef\u8bfb\u6027\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u90fd\u662f\u6700\u91cd\u8981\u7684\u3002\u4e00\u4efd\u4f7f\u7528 Markdown \u683c\u5f0f\u64b0\u5199\u7684\u6587\u4ef6\u5e94\u8be5\u53ef\u4ee5\u76f4\u63a5\u4ee5\u7eaf\u6587\u672c\u53d1\u5e03\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u4e0d\u4f1a\u50cf\u662f\u7531\u8bb8\u591a\u6807\u7b7e\u6216\u662f\u683c\u5f0f\u6307\u4ee4\u6240\u6784\u6210\u3002Markdown \u8bed\u6cd5\u53d7\u5230\u4e00\u4e9b\u65e2\u6709 text-to-HTML \u683c\u5f0f\u7684\u5f71\u54cd\uff0c\u5305\u62ec Setext \u3001 atx \u3001 Textile \u3001 reStructuredText \u3001 Grutatext \u548c EtText \uff0c\u800c\u6700\u5927\u7075\u611f\u6765\u6e90\u5176\u5b9e\u662f\u7eaf\u6587\u672c\u7535\u5b50\u90ae\u4ef6\u7684\u683c\u5f0f\u3002 \u603b\u4e4b\uff0c Markdown \u7684\u8bed\u6cd5\u5168\u7531\u4e00\u4e9b\u7b26\u53f7\u6240\u7ec4\u6210\uff0c\u8fd9\u4e9b\u7b26\u53f7\u7ecf\u8fc7\u7cbe\u6311\u7ec6\u9009\uff0c\u5176\u4f5c\u7528\u4e00\u76ee\u4e86\u7136\u3002\u6bd4\u5982\uff1a\u5728\u6587\u5b57\u4e24\u65c1\u52a0\u4e0a\u661f\u53f7\uff0c\u770b\u8d77\u6765\u5c31\u50cf *\u5f3a\u8c03* \u3002Markdown \u7684\u5217\u8868\u770b\u8d77\u6765\uff0c\u55ef\uff0c\u5c31\u662f\u5217\u8868\u3002Markdown \u7684\u533a\u5757\u5f15\u7528\u770b\u8d77\u6765\u5c31\u771f\u7684\u50cf\u662f\u5f15\u7528\u4e00\u6bb5\u6587\u5b57\uff0c\u5c31\u50cf\u4f60\u66fe\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u89c1\u8fc7\u7684\u90a3\u6837\u3002","title":"MarkDown\u601d\u60f3"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#html","text":"\u76f4\u63a5\u7f16\u5199 html\u6807\u7b7e\u5728markdown \u65e0\u9700\u5176\u4ed6\u6807\u5fd7\uff0c\u8981\u5236\u7ea6\u7684\u53ea\u6709\u4e00\u4e9b HTML \u533a\u5757\u5143\u7d20\u2015\u2015\u6bd4\u5982 <div> \u3001 <table> \u3001 <pre> \u3001 <p> \u7b49\u6807\u7b7e\uff0c\u5fc5\u987b\u5728\u524d\u540e\u52a0\u4e0a\u7a7a\u884c\u4e0e\u5176\u5b83\u5185\u5bb9\u533a\u9694\u5f00\uff0c\u8fd8\u8981\u6c42\u5b83\u4eec\u7684\u5f00\u59cb\u6807\u7b7e\u4e0e\u7ed3\u5c3e\u6807\u7b7e\u4e0d\u80fd\u7528\u5236\u8868\u7b26\u6216\u7a7a\u683c\u6765\u7f29\u8fdb\u3002 This is a regular paragraph. < table > < tr > < td > Foo </ td > </ tr > </ table > This is another regular paragraph. \u8bf7\u6ce8\u610f \uff0c\u5728 HTML \u533a\u5757\u6807\u7b7e\u95f4\u7684 Markdown \u683c\u5f0f\u8bed\u6cd5\u5c06\u4e0d\u4f1a\u88ab\u5904\u7406\u3002\u6bd4\u5982\uff0c\u4f60\u5728 HTML \u533a\u5757\u5185\u4f7f\u7528 Markdown \u6837\u5f0f\u7684 *\u5f3a\u8c03* \u4f1a\u6ca1\u6709\u6548\u679c\u3002","title":"\u517c\u5bb9Html"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_1","text":"< \u548c & \u7279\u6b8a\u5b57\u7b26\u7684\u5904\u7406\uff0cHTMl\u4e2d\u5982\u679c\u4f60\u9700\u8981\u663e\u793a < \u548c & \u5fc5\u987b\u4f7f\u7528\u4ed6\u4eec\u7684\u5b9e\u4f53 &lt; \u548c &amp; \u6765\u8868\u793a \u5728md\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 < & \u5305\u62ec\u5728\u4ee3\u7801\u5757\u4e2d,\u4f8b\u5982 4 < 5 AT & T","title":"\u7279\u6b8a\u5b57\u7b26\u8f6c\u6362"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_2","text":"\u4e00\u4e2a Markdown \u6bb5\u843d\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u7eed\u7684\u6587\u672c\u884c\u7ec4\u6210\uff0c\u5b83\u7684\u524d\u540e\u8981\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u7a7a\u884c\uff08\u7a7a\u884c\u7684\u5b9a\u4e49\u662f\u663e\u793a\u4e0a\u770b\u8d77\u6765\u50cf\u662f\u7a7a\u7684\uff0c\u4fbf\u4f1a\u88ab\u89c6\u4e3a\u7a7a\u884c\u3002\u6bd4\u65b9\u8bf4\uff0c\u82e5\u67d0\u4e00\u884c\u53ea\u5305\u542b\u7a7a\u683c\u548c\u5236\u8868\u7b26\uff0c\u5219\u8be5\u884c\u4e5f\u4f1a\u88ab\u89c6\u4e3a\u7a7a\u884c\uff09\u3002\u666e\u901a\u6bb5\u843d\u4e0d\u8be5\u7528\u7a7a\u683c\u6216\u5236\u8868\u7b26\u6765\u7f29\u8fdb\u3002","title":"\u533a\u5757\u5143\u7d20"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#-","text":"\u5e95\u90e8\u53cc\u6a2a\u7ebf ======= \u5e95\u90e8\u5355\u6a2a\u7ebf -------","title":"\u6807\u9898 \u5229\u7528 = \uff08\u6700\u9ad8\u9636\u6807\u9898\uff09\u548c - \uff08\u7b2c\u4e8c\u9636\u6807\u9898\uff09"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_3","text":"# \u8868\u793a\u6807\u98981 ## \u8868\u793a\u6807\u98982 ###### \u6807\u98986","title":"\u6807\u9898 \u5229\u7528 # \uff08\u6700\u9ad8\u9636\u6807\u9898\uff09"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_4","text":"a. \u6bcf\u884c\u90fd\u6dfb\u52a0 `>` > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. b. \u6bb5\u843d\u7684\u7b2c\u4e00\u884c\u6dfb\u52a0 > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. m....... c. \u591a\u5c42\u6bb5\u843d > This is the first level of quoting. > > > This is nested blockquote > Back to the first level","title":"\u533a\u5757\u5f15\u7528"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_5","text":"a. \u6bcf\u884c\u90fd\u6dfb\u52a0 > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. b. \u6bb5\u843d\u7684\u7b2c\u4e00\u884c\u6dfb\u52a0 This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. m....... c. \u591a\u5c42\u6bb5\u843d This is the first level of quoting. This is nested blockquote Back to the first level","title":"\u533a\u5757\u6548\u679c\u5c55\u793a\u533a\uff1a"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_6","text":"\u6807\u8bb0\u7b26\u53f7\u6709 * , + , - , \u6570\u7ec4. , * First * Second * Threed + Red + Green + Bue 1. Bird 2. McHale 3. Parish \u5217\u8868\u6548\u679c\u5c55\u793a\u5982\u4e0b\uff1a * First * Second * Threed Red Green Bue Bird McHale Parish","title":"\u5217\u8868"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_7","text":"\u5217\u8868\u9879\u76ee\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6bb5\u843d\uff0c\u6bcf\u4e2a\u9879\u76ee\u4e0b\u7684\u6bb5\u843d\u90fd\u5fc5\u987b\u7f29\u8fdb**4**\u4e2a\u7a7a\u683c\u6216\u662f**1**\u4e2a\u5236\u8868\u7b26\uff1a 1. This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. 2. Suspendisse id sem consectetuer libero luctus adipiscing. \u6548\u679c\u5c55\u793a\u5982\u4e0b\uff1a 1. This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.","title":"\u5217\u8868\u5305\u542b\u6bb5\u843d"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_8","text":"\u5982\u679c\u8981\u5728\u5217\u8868\u9879\u76ee\u5185\u653e\u8fdb\u5f15\u7528\uff0c\u90a3 > \u5c31\u9700\u8981\u7f29\u8fdb,\u7f29\u8fdb\u89c4\u5219**4**\u4e2a\u7a7a\u683c\u548c**1**\u4e2atab\uff1a * A list item with a block > This is a block quote > This is a block quote \u6548\u679c\u6f14\u793a\u5982\u4e0b\uff1a * A list item with a block > This is a block quote > This is a block quote","title":"\u5217\u8868\u5305\u542b\u5f15\u7528"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_9","text":"\u5982\u679c\u8981\u653e\u4ee3\u7801\u533a\u5757\u7684\u8bdd\uff0c\u8be5\u533a\u5757\u5c31\u9700\u8981\u7f29\u8fdb\u4e24\u6b21\uff0c\u4e5f\u5c31\u662f**8**\u4e2a\u7a7a\u683c\u6216\u662f**2**\u4e2a\u5236\u8868\u7b26\uff1a * A list item with a blockquote This is a code in the list item \u6548\u679c\u6f14\u793a\u5982\u4e0b\uff1a * A list item with a blockquote This is a code in the list item","title":"\u5217\u8868\u5305\u542b\u4ee3\u7801\u5757"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#100","text":"1986\\. What a great season.","title":"\u5982\u679c\u884c\u9996\u51fa\u73b0\u6570\u7ec4+\u70b9\u7684\u7ec4\u5408100. \u9700\u8981\u505a\u7279\u6b8a\u5904\u7406"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_10","text":"\u4e00\u884c\u4e2d\u53ef\u4ee5\u4f7f\u75283\u4e2a\u6216\u80053\u4e2a\u4ee5\u4e0a\u7684 * , - , _ \u6765\u8fdb\u884c\u4e00\u4e2a\u98ce\u683c\u7ebf *** --- ____ \u6548\u679c\u6f14\u793a\u5982\u4e0b\uff1a","title":"\u5206\u5272\u7ebf"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_11","text":"Markdown \u652f\u6301\u4e24\u79cd\u5f62\u5f0f\u7684\u94fe\u63a5\u8bed\u6cd5\uff1a \u884c\u5185\u5f0f\u548c\u53c2\u8003\u5f0f\u4e24\u79cd\u5f62\u5f0f\u3002 \u884c\u5185\u5f0f: This is [an example](http://example.com/ \"Title\") inline link. [This link](http://example.net/) has no title attribute. \u53c2\u8003\u5f0f: The click goto [first][1] The click goto [second][2] [1]: https://www.baidu.com \"\u767e\u5ea6\" [2]: https://google.com \"Google\" \u6548\u679c\u5982\u4e0b This is an example inline link. This link has no title attribute. \u53c2\u8003\u5f0f: The click goto first The click goto second","title":"\u8d85\u94fe\u63a5"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_12","text":"\u659c\u4f53\uff1a * \u548c _ \u52a0\u7c97\u4f53: ** \u548c __ \u659c\u4f53 *Good* \u659c\u4f53 _Good_ \u52a0\u7c97 **Good** \u52a0\u7c97 __Good__ \u5982\u679c\u4f60\u7684 * \u548c _ \u4e24\u8fb9\u90fd\u6709\u7a7a\u767d\u7684\u8bdd\uff0c\u5b83\u4eec\u5c31\u53ea\u4f1a\u88ab\u5f53\u6210\u666e\u901a\u7684\u7b26\u53f7\u3002 mmm * Good * \u5982\u679c\u9700\u8981`*` \u4f7f\u7528 `\\*` \u6765\u663e\u793a \\*this is a so much money\\* \u659c\u4f53 Good \u659c\u4f53 Good \u52a0\u7c97 Good \u52a0\u7c97 Good mmm * Good * *this is a so much money*","title":"\u5b57\u4f53\u6837\u5f0f"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_13","text":"\u4e09\u4e2a`\u7b26\u53f7 `print()` print()","title":"\u4ee3\u7801\u5757"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#_14","text":"Markdown \u4f7f\u7528\u4e00\u79cd\u548c\u94fe\u63a5\u5f88\u76f8\u4f3c\u7684\u8bed\u6cd5\u6765\u6807\u8bb0\u56fe\u7247\uff0c\u540c\u6837\u4e5f\u5141\u8bb8\u4e24\u79cd\u6837\u5f0f\uff1a \u884c\u5185\u5f0f\u548c\u53c2\u8003\u5f0f\u3002 ![\u6211\u7684\u535a\u5ba2](http://img.sc115.com/uploads/sc/cjpgs/1410/apic6991_sc115.com.jpg) ![\u6211\u7684\u535a\u5ba2](http://img.sc115.com/uploads/sc/cjpgs/1410/apic6991_sc115.com.jpg \"My Blogs\") \u663e\u793a\u6548\u679c\uff1a","title":"\u56fe\u7247\u5f15\u7528"},{"location":"05Tools/Markdown%E8%AF%AD%E6%B3%95/#table","text":"This is a table: First Header | Second Header ------------- | ------------- Content Cell | Content Cell Content Cell | Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell You can align cell contents with syntax like this: | Left Aligned | Center Aligned | Right Aligned | |:------------- |:---------------:| -------------:| | col 3 is | some wordy text | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | Left Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 The left- and right-most pipes ( | ) are only aesthetic, and can be omitted. The spaces don\u2019t matter, either. Alignment depends solely on : marks.","title":"Table"},{"location":"05Tools/VSCode/","tags":["\u5f00\u53d1\u5de5\u5177"],"text":"VSCode markdown \u4e2d\u5f00\u542f\u81ea\u52a8\u63d0\u793a \u00b6 VSCode \u4e2d markdown \u4e0d\u4f1a\u5f00\u542f\u9ed8\u8ba4\u63d0\u793a\u9700\u8981\u81ea\u5df1\u914d\u7f6e \"[markdown]\" : { \"editor.quickSuggestions\" : true }, VSCode \u914d\u7f6e \u4ee3\u7801\u5757 \u00b6 VSCode \u2192 \u9996\u9009\u9879 \u2192 \u7528\u6237\u4ee3\u7801\u5757 \u2192 \u9009\u62e9\u5bf9\u5e94\u7684\u8bed\u8a00 \u4ee5\u4e0b\u4ee5 \u901a\u7528\u4e3a\u4f8b // \u7247\u6bb5 \u63cf\u8ff0 \"format backgroud in markdown\" : { \"prefix\" : \"html_deprecate_bg\" , //pre f ix \u5173\u952e\u5b57 \"body\" : [ \"<span style='background-color:#FEEFE3;color:#BF350B;padding:3px'>$1</span>\" , \"$2\" ], // body \u662f \u4ee3\u7801\u7247\u6bb5\u7684\u5185\u5bb9 \"description\" : \"format backgroud in markdown\" // \u63cf\u8ff0 }","title":"VSCode\u5de5\u5177\u5e38\u7528\u914d\u7f6e"},{"location":"05Tools/VSCode/#vscode-markdown","text":"VSCode \u4e2d markdown \u4e0d\u4f1a\u5f00\u542f\u9ed8\u8ba4\u63d0\u793a\u9700\u8981\u81ea\u5df1\u914d\u7f6e \"[markdown]\" : { \"editor.quickSuggestions\" : true },","title":"VSCode markdown \u4e2d\u5f00\u542f\u81ea\u52a8\u63d0\u793a"},{"location":"05Tools/VSCode/#vscode","text":"VSCode \u2192 \u9996\u9009\u9879 \u2192 \u7528\u6237\u4ee3\u7801\u5757 \u2192 \u9009\u62e9\u5bf9\u5e94\u7684\u8bed\u8a00 \u4ee5\u4e0b\u4ee5 \u901a\u7528\u4e3a\u4f8b // \u7247\u6bb5 \u63cf\u8ff0 \"format backgroud in markdown\" : { \"prefix\" : \"html_deprecate_bg\" , //pre f ix \u5173\u952e\u5b57 \"body\" : [ \"<span style='background-color:#FEEFE3;color:#BF350B;padding:3px'>$1</span>\" , \"$2\" ], // body \u662f \u4ee3\u7801\u7247\u6bb5\u7684\u5185\u5bb9 \"description\" : \"format backgroud in markdown\" // \u63cf\u8ff0 }","title":"VSCode \u914d\u7f6e \u4ee3\u7801\u5757"},{"location":"05Tools/%E4%B8%83%E7%89%9B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B5%8B%E8%AF%95%E5%9F%9F%E5%90%8D%E8%BF%87%E6%9C%9F/","tags":"\u4e03\u725b","text":"\u4e03\u725b\u6d4b\u8bd5\u57df\u540d\u8fc7\u671f\u4e4b\u540e\uff0c\u56fe\u7247\u65e0\u6cd5\u5907\u4efd\uff0cqshell\u4e5f\u4e0d\u884c\uff0c\u8fd8\u6709\u522b\u7684\u529e\u6cd5\u5417\uff0c\u6c42\u52a9? \u00b6 1.\u60a8\u7ed1\u5b9a\u81ea\u5b9a\u4e49\u57df\u540d\u540e\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 2.\u5982\u679c\u60a8\u6ca1\u6709\u57df\u540d\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u65b9\u6cd5\u4e0b\u8f7d \u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u83b7\u53d6\u6587\u4ef6\uff1a 2.1 \u60a8\u9700\u8981\u5148\u65b0\u5efa\u4e00\u4e2a\u540c\u533a\u57df\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f1a\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u6d4b\u8bd5\u57df\u540d\u5230\u65b0\u7a7a\u95f4\u3002 \u00b6 \u4f8b\u5982\uff1a\u4e4b\u524d\u6709\u4e00\u4e2aA\u5b58\u50a8\u7a7a\u95f4\u8fc7\u671f\u4e86\uff0c\u73b0\u5728\u65b0\u5efa\u4e00\u4e2aB\u5b58\u50a8\u7a7a\u95f4 \u901a\u8fc7 qshell batchcopy \u5230\u6709\u57df\u540d\u7684\u540c\u533a\u57df\u7a7a\u95f4\u7136\u540e\u518d\u8fdb\u884c qdownload \u4e0b\u8f7d\u64cd\u4f5c * qshell listbucket A list.txt \uff08\u5217\u51faA\u7a7a\u95f4\u7684\u6240\u6709\u6587\u4ef6\uff0c\u4fdd\u6301\u5728list.txt\u6587\u4ef6\u4e2d\uff09 * cat list.txt | awk '{print $1}' >list_final.txt \uff08 \u7528awk\u83b7\u53d6list\u7ed3\u679c\u7684\u7b2c\u4e00\u5217\uff09 * cqshell batchcopy A B list_final.txt \uff08\u590d\u5236\u5230\u65b0bucket\u7684\u6587\u4ef6\u548c\u539fbucket\u6587\u4ef6\u540d\u4e00\u81f4,\u53ef\u4ee5\u5b8c\u6210\uff09 * 4 cqshell qdownload newfilelist.txt \uff08newfilelist.txt\u4e3a\u4e0b\u8f7d\u7684\u914d\u7f6e\u6587\u6863\uff0c\uff09 qshell\u5b89\u88c5\u5305\u53ca\u6587\u6863\u8bf7\u53c2\u8003https://developer.qiniu.com/kodo/tools/1302/qshell \u5982\u679c\u60a8\u4e0d\u719f\u6089\u547d\u4ee4\u884c\u5de5\u5177\u7684\u5b89\u88c5\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u7ed3\u5408\u6587\u6863\u6700\u540e\u63d0\u4f9b\u7684\u89c6\u9891\u6559\u7a0b https://developer.qiniu.com/kodo/tools/1302/qshell#9 2.2 \u4f7f\u7528\u5de5\u5177qrsctl \u00b6 https://developer.qiniu.com/kodo/tools/1300/qrsctl qrsctl get","title":"\u4e03\u725b\u670d\u52a1\u5668\u6d4b\u8bd5\u57df\u540d\u8fc7\u671f"},{"location":"05Tools/%E4%B8%83%E7%89%9B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B5%8B%E8%AF%95%E5%9F%9F%E5%90%8D%E8%BF%87%E6%9C%9F/#qshell","text":"1.\u60a8\u7ed1\u5b9a\u81ea\u5b9a\u4e49\u57df\u540d\u540e\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 2.\u5982\u679c\u60a8\u6ca1\u6709\u57df\u540d\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u65b9\u6cd5\u4e0b\u8f7d \u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u83b7\u53d6\u6587\u4ef6\uff1a","title":"\u4e03\u725b\u6d4b\u8bd5\u57df\u540d\u8fc7\u671f\u4e4b\u540e\uff0c\u56fe\u7247\u65e0\u6cd5\u5907\u4efd\uff0cqshell\u4e5f\u4e0d\u884c\uff0c\u8fd8\u6709\u522b\u7684\u529e\u6cd5\u5417\uff0c\u6c42\u52a9?"},{"location":"05Tools/%E4%B8%83%E7%89%9B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B5%8B%E8%AF%95%E5%9F%9F%E5%90%8D%E8%BF%87%E6%9C%9F/#21","text":"\u4f8b\u5982\uff1a\u4e4b\u524d\u6709\u4e00\u4e2aA\u5b58\u50a8\u7a7a\u95f4\u8fc7\u671f\u4e86\uff0c\u73b0\u5728\u65b0\u5efa\u4e00\u4e2aB\u5b58\u50a8\u7a7a\u95f4 \u901a\u8fc7 qshell batchcopy \u5230\u6709\u57df\u540d\u7684\u540c\u533a\u57df\u7a7a\u95f4\u7136\u540e\u518d\u8fdb\u884c qdownload \u4e0b\u8f7d\u64cd\u4f5c * qshell listbucket A list.txt \uff08\u5217\u51faA\u7a7a\u95f4\u7684\u6240\u6709\u6587\u4ef6\uff0c\u4fdd\u6301\u5728list.txt\u6587\u4ef6\u4e2d\uff09 * cat list.txt | awk '{print $1}' >list_final.txt \uff08 \u7528awk\u83b7\u53d6list\u7ed3\u679c\u7684\u7b2c\u4e00\u5217\uff09 * cqshell batchcopy A B list_final.txt \uff08\u590d\u5236\u5230\u65b0bucket\u7684\u6587\u4ef6\u548c\u539fbucket\u6587\u4ef6\u540d\u4e00\u81f4,\u53ef\u4ee5\u5b8c\u6210\uff09 * 4 cqshell qdownload newfilelist.txt \uff08newfilelist.txt\u4e3a\u4e0b\u8f7d\u7684\u914d\u7f6e\u6587\u6863\uff0c\uff09 qshell\u5b89\u88c5\u5305\u53ca\u6587\u6863\u8bf7\u53c2\u8003https://developer.qiniu.com/kodo/tools/1302/qshell \u5982\u679c\u60a8\u4e0d\u719f\u6089\u547d\u4ee4\u884c\u5de5\u5177\u7684\u5b89\u88c5\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u7ed3\u5408\u6587\u6863\u6700\u540e\u63d0\u4f9b\u7684\u89c6\u9891\u6559\u7a0b https://developer.qiniu.com/kodo/tools/1302/qshell#9","title":"2.1 \u60a8\u9700\u8981\u5148\u65b0\u5efa\u4e00\u4e2a\u540c\u533a\u57df\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f1a\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u6d4b\u8bd5\u57df\u540d\u5230\u65b0\u7a7a\u95f4\u3002"},{"location":"05Tools/%E4%B8%83%E7%89%9B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B5%8B%E8%AF%95%E5%9F%9F%E5%90%8D%E8%BF%87%E6%9C%9F/#22-qrsctl","text":"https://developer.qiniu.com/kodo/tools/1300/qrsctl qrsctl get","title":"2.2 \u4f7f\u7528\u5de5\u5177qrsctl"}]}